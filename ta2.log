Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (l:lambda), check_ta1 (l) = check (l)(rank : 0)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 2


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda1) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:5)
=================================================
Progress: 3


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)

---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda1) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction lambda1(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check_ta1 (V (string1)) ((Nil)) = match (V (string1)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 4


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check_ta1 (V (string1)) ((Nil)) = match (V (string1)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (P (string1) (lambda2)) ((Nil)) = match (P (string1) (lambda2)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 5


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (P (string1) (lambda2)) ((Nil)) = match (P (string1) (lambda2)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = sub_check (lambda2) ((string1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal


1st goal of : any
lambda1 : lambda
string1 : string
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda2) ((string1::(Nil))) = sub_check (lambda2) ((string1::(Nil)))

0 goal(s) more...

0 conjecture(s) more...


1st goal of : any
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
---------------------------------------
forall (lambda3:lambda), sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = sub_check (lambda3) ((string2::(string1::(Nil))))

0 goal(s) more...

0 conjecture(s) more...
lhs_common_subtree
Cons(string1, Nil())
Cons(string2, Cons(string1, Nil()))
Cons(string3, Cons(string2, Cons(string1, Nil())))
rhs_common_subtree
Cons(string1, Nil())
Cons(string2, Cons(string1, Nil()))
Cons(string3, Cons(string2, Cons(string1, Nil())))
lhs_increase_subtree
Cons(string2, _)
Cons(string3, _)
rhs_increase_subtree
Cons(string2, _)
Cons(string3, _)
New Env
let rec mk_lhs1 arg_1 arg_2 =
match (arg_1) with
| Nil  -> (arg_2::(Nil))
| Cons hd tl -> (hd::mk_lhs1 (tl) (arg_2))
;;
let rec mk_rhs1 arg_3 arg_4 =
match (arg_3) with
| Nil  -> (arg_4::(Nil))
| Cons hd tl -> (hd::mk_rhs1 (tl) (arg_4))
;;
Lemma List
forall (string1:string), mk_lhs1 ((Nil)) (string1) = (string1::(Nil))
forall (hd:string) (tl:string list) (string1:string), mk_lhs1 ((hd::tl)) (string1) = (hd::mk_lhs1 (tl) (string1))
forall (string1:string), mk_rhs1 ((Nil)) (string1) = (string1::(Nil))
forall (hd:string) (tl:string list) (string1:string), mk_rhs1 ((hd::tl)) (string1) = (hd::mk_rhs1 (tl) (string1))
forall (lambda2:lambda) (lst:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (lst) (string1)) = sub_check (lambda2) (mk_rhs1 (lst) (string1))
End of Lemma List


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = sub_check (lambda2) ((string1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 6


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = sub_check (lambda2) ((string1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda2:lambda) (lst:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (lst) (string1)) = sub_check (lambda2) (mk_rhs1 (lst) (string1))(rank : 0)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))

---------------------------------------
forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7)
=================================================
Progress: 7


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))

---------------------------------------
forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (V (string2)) (mk_lhs1 (string_list1) (string1)) = sub_check (V (string2)) (mk_rhs1 (string_list1) (string1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 8


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (V (string2)) (mk_lhs1 (string_list1) (string1)) = sub_check (V (string2)) (mk_rhs1 (string_list1) (string1))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), is_mem_ta1 (mk_lhs1 (string_list1) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list1) (string1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction string_list1(rank:8)
=================================================
Progress: 9


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string_list1:string list) (string1:string), is_mem_ta1 (mk_lhs1 (string_list1) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list1) (string1))

2 goal(s) more...

1 conjecture(s) more...
>>> induction string_list1(rank : 8)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
forall (string1:string), is_mem_ta1 (mk_lhs1 ((Nil)) (string1)) (string2) = mem (string2) (mk_rhs1 ((Nil)) (string1))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 10


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
forall (string1:string), is_mem_ta1 (mk_lhs1 ((Nil)) (string1)) (string2) = mem (string2) (mk_rhs1 ((Nil)) (string1))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
forall (string1:string), if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = if string_eq (string1) (string2) then true else mem (string2) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:8)
=================================================
Progress: 11


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
Base2 : string_list1 = (Nil)
---------------------------------------
forall (string1:string), if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = if string_eq (string1) (string2) then true else mem (string2) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 8)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
Base2 : string_list1 = (Nil)
string1 : string
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = if string_eq (string1) (string2) then true else mem (string2) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:9)
=================================================
Progress: 12


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
Base2 : string_list1 = (Nil)
string1 : string
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = if string_eq (string1) (string2) then true else mem (string2) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 9)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
Base2 : string_list1 = (Nil)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 13


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
Base2 : string_list1 = (Nil)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = true

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
Base2 : string_list1 = (Nil)
string1 : string
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = false

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 14


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
Base2 : string_list1 = (Nil)
string1 : string
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = false

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
string3 : string
string_list2 : string list
IH1 : forall (string1:string), is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))
Inductive1 : string_list1 = (string3::string_list2)
---------------------------------------
forall (string1:string), is_mem_ta1 (mk_lhs1 ((string3::string_list2)) (string1)) (string2) = mem (string2) (mk_rhs1 ((string3::string_list2)) (string1))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 15


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
string3 : string
string_list2 : string list
IH1 : forall (string1:string), is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))
Inductive1 : string_list1 = (string3::string_list2)
---------------------------------------
forall (string1:string), is_mem_ta1 (mk_lhs1 ((string3::string_list2)) (string1)) (string2) = mem (string2) (mk_rhs1 ((string3::string_list2)) (string1))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
string3 : string
string_list2 : string list
IH1 : forall (string1:string), is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))
Inductive1 : string_list1 = (string3::string_list2)
---------------------------------------
forall (string1:string), if string_eq (string3) (string2) then true else is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = if string_eq (string3) (string2) then true else mem (string2) (mk_rhs1 (string_list2) (string1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:7)
=================================================
Progress: 16


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
string3 : string
string_list2 : string list
IH1 : forall (string1:string), is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))
Inductive1 : string_list1 = (string3::string_list2)
---------------------------------------
forall (string1:string), if string_eq (string3) (string2) then true else is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = if string_eq (string3) (string2) then true else mem (string2) (mk_rhs1 (string_list2) (string1))

2 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
string3 : string
string_list2 : string list
IH1 : forall (string1:string), is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))
Inductive1 : string_list1 = (string3::string_list2)
string1 : string
---------------------------------------
if string_eq (string3) (string2) then true else is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = if string_eq (string3) (string2) then true else mem (string2) (mk_rhs1 (string_list2) (string1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case string_eq (string3) (string2)(rank:8)
=================================================
Progress: 17


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
string3 : string
string_list2 : string list
IH1 : forall (string1:string), is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))
Inductive1 : string_list1 = (string3::string_list2)
string1 : string
---------------------------------------
if string_eq (string3) (string2) then true else is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = if string_eq (string3) (string2) then true else mem (string2) (mk_rhs1 (string_list2) (string1))

2 goal(s) more...

1 conjecture(s) more...
>>> case string_eq (string3) (string2)(rank : 8)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
string3 : string
string_list2 : string list
IH1 : forall (string1:string), is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))
Inductive1 : string_list1 = (string3::string_list2)
string1 : string
Case1 : string_eq (string3) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 18


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
string3 : string
string_list2 : string list
IH1 : forall (string1:string), is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))
Inductive1 : string_list1 = (string3::string_list2)
string1 : string
Case1 : string_eq (string3) (string2) = true
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
string3 : string
string_list2 : string list
IH1 : forall (string1:string), is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))
Inductive1 : string_list1 = (string3::string_list2)
string1 : string
Case1 : string_eq (string3) (string2) = false
---------------------------------------
is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 19


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
string3 : string
string_list2 : string list
IH1 : forall (string1:string), is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))
Inductive1 : string_list1 = (string3::string_list2)
string1 : string
Case1 : string_eq (string3) (string2) = false
---------------------------------------
is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
string3 : string
string_list2 : string list
IH1 : forall (string1:string), is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))
Inductive1 : string_list1 = (string3::string_list2)
string1 : string
Case1 : string_eq (string3) (string2) = false
---------------------------------------
mem (string2) (mk_rhs1 (string_list2) (string1)) = mem (string2) (mk_rhs1 (string_list2) (string1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 20


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string_list1 : string list
string3 : string
string_list2 : string list
IH1 : forall (string1:string), is_mem_ta1 (mk_lhs1 (string_list2) (string1)) (string2) = mem (string2) (mk_rhs1 (string_list2) (string1))
Inductive1 : string_list1 = (string3::string_list2)
string1 : string
Case1 : string_eq (string3) (string2) = false
---------------------------------------
mem (string2) (mk_rhs1 (string_list2) (string1)) = mem (string2) (mk_rhs1 (string_list2) (string1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (P (string2) (lambda2)) (mk_lhs1 (string_list1) (string1)) = sub_check (P (string2) (lambda2)) (mk_rhs1 (string_list1) (string1))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 21


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (P (string2) (lambda2)) (mk_lhs1 (string_list1) (string1)) = sub_check (P (string2) (lambda2)) (mk_rhs1 (string_list1) (string1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list1) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list1) (string1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction string_list1(rank:7)
=================================================
Progress: 22


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list1) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list1) (string1)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction string_list1(rank : 7)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
Base1 : string_list1 = (Nil)
---------------------------------------
forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 ((Nil)) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 ((Nil)) (string1)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 23


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
Base1 : string_list1 = (Nil)
---------------------------------------
forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 ((Nil)) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 ((Nil)) (string1)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
Base1 : string_list1 = (Nil)
---------------------------------------
forall (string1:string), sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = sub_check (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:7)
=================================================
Progress: 24


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
Base1 : string_list1 = (Nil)
---------------------------------------
forall (string1:string), sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = sub_check (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
Base1 : string_list1 = (Nil)
string1 : string
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = sub_check (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lhs_lemma3 in goal at 1(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
=================================================
Progress: 25


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
Base1 : string_list1 = (Nil)
string1 : string
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string1::(Nil)))) = sub_check (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lhs_lemma3 in goal at 1(rank : 23)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
Base1 : string_list1 = (Nil)
string1 : string
---------------------------------------
sub_check_ta1 (lambda2) ((string2::mk_lhs1 ((Nil)) (string1))) = sub_check (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lhs_lemma4 in goal at 0(rank:7)
=================================================
Progress: 26


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
Base1 : string_list1 = (Nil)
string1 : string
---------------------------------------
sub_check_ta1 (lambda2) ((string2::mk_lhs1 ((Nil)) (string1))) = sub_check (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lhs_lemma4 in goal at 0(rank : 7)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
Base1 : string_list1 = (Nil)
string1 : string
---------------------------------------
sub_check_ta1 (lambda2) (mk_lhs1 ((string2::(Nil))) (string1)) = sub_check (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 1(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:15)
=================================================
Progress: 27


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
Base1 : string_list1 = (Nil)
string1 : string
---------------------------------------
sub_check_ta1 (lambda2) (mk_lhs1 ((string2::(Nil))) (string1)) = sub_check (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
Base1 : string_list1 = (Nil)
string1 : string
---------------------------------------
sub_check (lambda2) (mk_rhs1 ((string2::(Nil))) (string1)) = sub_check (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 28


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
Base1 : string_list1 = (Nil)
string1 : string
---------------------------------------
sub_check (lambda2) (mk_rhs1 ((string2::(Nil))) (string1)) = sub_check (lambda2) ((string2::(string1::(Nil))))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
string3 : string
string_list2 : string list
IH2 : forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list2) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list2) (string1)))
Inductive2 : string_list1 = (string3::string_list2)
---------------------------------------
forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 ((string3::string_list2)) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 ((string3::string_list2)) (string1)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 3
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 29


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
string3 : string
string_list2 : string list
IH2 : forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list2) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list2) (string1)))
Inductive2 : string_list1 = (string3::string_list2)
---------------------------------------
forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 ((string3::string_list2)) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 ((string3::string_list2)) (string1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
string3 : string
string_list2 : string list
IH2 : forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list2) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list2) (string1)))
Inductive2 : string_list1 = (string3::string_list2)
---------------------------------------
forall (string1:string), sub_check_ta1 (lambda2) ((string2::(string3::mk_lhs1 (string_list2) (string1)))) = sub_check (lambda2) ((string2::(string3::mk_rhs1 (string_list2) (string1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:6)
=================================================
Progress: 30


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
string3 : string
string_list2 : string list
IH2 : forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list2) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list2) (string1)))
Inductive2 : string_list1 = (string3::string_list2)
---------------------------------------
forall (string1:string), sub_check_ta1 (lambda2) ((string2::(string3::mk_lhs1 (string_list2) (string1)))) = sub_check (lambda2) ((string2::(string3::mk_rhs1 (string_list2) (string1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 6)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
string3 : string
string_list2 : string list
IH2 : forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list2) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list2) (string1)))
Inductive2 : string_list1 = (string3::string_list2)
string1 : string
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string3::mk_lhs1 (string_list2) (string1)))) = sub_check (lambda2) ((string2::(string3::mk_rhs1 (string_list2) (string1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lhs_lemma4 in goal at 0(rank:22)
rewrite <- rhs_lemma6 in goal at 0(rank:22)
=================================================
Progress: 31


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
string3 : string
string_list2 : string list
IH2 : forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list2) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list2) (string1)))
Inductive2 : string_list1 = (string3::string_list2)
string1 : string
---------------------------------------
sub_check_ta1 (lambda2) ((string2::(string3::mk_lhs1 (string_list2) (string1)))) = sub_check (lambda2) ((string2::(string3::mk_rhs1 (string_list2) (string1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lhs_lemma4 in goal at 0(rank : 22)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
string3 : string
string_list2 : string list
IH2 : forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list2) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list2) (string1)))
Inductive2 : string_list1 = (string3::string_list2)
string1 : string
---------------------------------------
sub_check_ta1 (lambda2) ((string2::mk_lhs1 ((string3::string_list2)) (string1))) = sub_check (lambda2) ((string2::(string3::mk_rhs1 (string_list2) (string1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lhs_lemma4 in goal at 0(rank:6)
=================================================
Progress: 32


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
string3 : string
string_list2 : string list
IH2 : forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list2) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list2) (string1)))
Inductive2 : string_list1 = (string3::string_list2)
string1 : string
---------------------------------------
sub_check_ta1 (lambda2) ((string2::mk_lhs1 ((string3::string_list2)) (string1))) = sub_check (lambda2) ((string2::(string3::mk_rhs1 (string_list2) (string1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lhs_lemma4 in goal at 0(rank : 6)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
string3 : string
string_list2 : string list
IH2 : forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list2) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list2) (string1)))
Inductive2 : string_list1 = (string3::string_list2)
string1 : string
---------------------------------------
sub_check_ta1 (lambda2) (mk_lhs1 ((string2::(string3::string_list2))) (string1)) = sub_check (lambda2) ((string2::(string3::mk_rhs1 (string_list2) (string1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:14)
rewrite <- rhs_lemma6 in goal at 0(rank:14)
=================================================
Progress: 33


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
string3 : string
string_list2 : string list
IH2 : forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list2) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list2) (string1)))
Inductive2 : string_list1 = (string3::string_list2)
string1 : string
---------------------------------------
sub_check_ta1 (lambda2) (mk_lhs1 ((string2::(string3::string_list2))) (string1)) = sub_check (lambda2) ((string2::(string3::mk_rhs1 (string_list2) (string1))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
string3 : string
string_list2 : string list
IH2 : forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list2) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list2) (string1)))
Inductive2 : string_list1 = (string3::string_list2)
string1 : string
---------------------------------------
sub_check (lambda2) (mk_rhs1 ((string2::(string3::string_list2))) (string1)) = sub_check (lambda2) ((string2::(string3::mk_rhs1 (string_list2) (string1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 34


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
string2 : string
lambda2 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = P (string2) (lambda2)
string_list1 : string list
string3 : string
string_list2 : string list
IH2 : forall (string1:string), sub_check_ta1 (lambda2) ((string2::mk_lhs1 (string_list2) (string1))) = sub_check (lambda2) ((string2::mk_rhs1 (string_list2) (string1)))
Inductive2 : string_list1 = (string3::string_list2)
string1 : string
---------------------------------------
sub_check (lambda2) (mk_rhs1 ((string2::(string3::string_list2))) (string1)) = sub_check (lambda2) ((string2::(string3::mk_rhs1 (string_list2) (string1))))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
IH2 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda3) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (C (lambda2) (lambda3)) (mk_lhs1 (string_list1) (string1)) = sub_check (C (lambda2) (lambda3)) (mk_rhs1 (string_list1) (string1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 35


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
IH2 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda3) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
forall (string_list1:string list) (string1:string), sub_check_ta1 (C (lambda2) (lambda3)) (mk_lhs1 (string_list1) (string1)) = sub_check (C (lambda2) (lambda3)) (mk_rhs1 (string_list1) (string1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
IH2 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda3) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
forall (string_list1:string list) (string1:string), if sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) then sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) else false = if sub_check (lambda2) (mk_rhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro string1(rank:5)
=================================================
Progress: 36


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
IH2 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda3) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
forall (string_list1:string list) (string1:string), if sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) then sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) else false = if sub_check (lambda2) (mk_rhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> intro string1(rank : 5)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
IH2 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda3) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = C (lambda2) (lambda3)
string1 : string
---------------------------------------
forall (string_list1:string list), if sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) then sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) else false = if sub_check (lambda2) (mk_rhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13)
rewrite IH2 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH2 in goal at 0(rank:13)
=================================================
Progress: 37


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
IH2 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda3) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = C (lambda2) (lambda3)
string1 : string
---------------------------------------
forall (string_list1:string list), if sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) then sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) else false = if sub_check (lambda2) (mk_rhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
IH2 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda3) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = C (lambda2) (lambda3)
string1 : string
---------------------------------------
forall (string_list1:string list), if sub_check (lambda2) (mk_rhs1 (string_list1) (string1)) then sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) else false = if sub_check (lambda2) (mk_rhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:13)
rewrite <- IH2 in goal at 0(rank:13)
=================================================
Progress: 38


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
IH2 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda3) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = C (lambda2) (lambda3)
string1 : string
---------------------------------------
forall (string_list1:string list), if sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) then sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) else false = if sub_check (lambda2) (mk_rhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
IH2 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda3) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = C (lambda2) (lambda3)
string1 : string
---------------------------------------
forall (string_list1:string list), if sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false = if sub_check (lambda2) (mk_rhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 39


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
IH2 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda3) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = C (lambda2) (lambda3)
string1 : string
---------------------------------------
forall (string_list1:string list), if sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false = if sub_check (lambda2) (mk_rhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
IH2 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda3) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = C (lambda2) (lambda3)
string1 : string
---------------------------------------
forall (string_list1:string list), if sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false = if sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 40


1st goal of : forall (lambda1:lambda) (string_list1:string list) (string1:string), sub_check_ta1 (lambda1) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda1) (mk_rhs1 (string_list1) (string1))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda2) (mk_rhs1 (string_list1) (string1))
IH2 : forall (string_list1:string list) (string1:string), sub_check_ta1 (lambda3) (mk_lhs1 (string_list1) (string1)) = sub_check (lambda3) (mk_rhs1 (string_list1) (string1))
Inductive1 : lambda1 = C (lambda2) (lambda3)
string1 : string
---------------------------------------
forall (string_list1:string list), if sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false = if sub_check_ta1 (lambda2) (mk_lhs1 (string_list1) (string1)) then sub_check (lambda3) (mk_rhs1 (string_list1) (string1)) else false

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = sub_check (lambda2) ((string1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 4
Tactic List : 2
rewrite <- lhs_lemma3 in goal at 1(rank:20)
rewrite <- rhs_lemma5 in goal at 2(rank:20)
=================================================
Progress: 41


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = sub_check (lambda2) ((string1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lhs_lemma3 in goal at 1(rank : 20)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = sub_check (lambda2) ((string1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma7 in goal at 0(rank:12)
rewrite <- rhs_lemma5 in goal at 0(rank:12)
=================================================
Progress: 42


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = sub_check (lambda2) ((string1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma7 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check (lambda2) (mk_rhs1 ((Nil)) (string1)) = sub_check (lambda2) ((string1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 43


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check (lambda2) (mk_rhs1 ((Nil)) (string1)) = sub_check (lambda2) ((string1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
sub_check_ta1 (C (lambda2) (lambda3)) ((Nil)) = match (C (lambda2) (lambda3)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 44


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
sub_check_ta1 (C (lambda2) (lambda3)) ((Nil)) = match (C (lambda2) (lambda3)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
if sub_check_ta1 (lambda2) ((Nil)) then sub_check_ta1 (lambda3) ((Nil)) else false = if sub_check (lambda2) ((Nil)) then sub_check (lambda3) ((Nil)) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case sub_check (lambda2) ((Nil))(rank:4)
case sub_check_ta1 (lambda2) ((Nil))(rank:4)
rewrite IH1 in goal at 0(rank:19)
=================================================
Progress: 45


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
if sub_check_ta1 (lambda2) ((Nil)) then sub_check_ta1 (lambda3) ((Nil)) else false = if sub_check (lambda2) ((Nil)) then sub_check (lambda3) ((Nil)) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case sub_check (lambda2) ((Nil))(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
if sub_check_ta1 (lambda2) ((Nil)) then sub_check_ta1 (lambda3) ((Nil)) else false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case sub_check_ta1 (lambda2) ((Nil))(rank:5)
rewrite IH1 in goal at 0(rank:20)
=================================================
Progress: 46


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
if sub_check_ta1 (lambda2) ((Nil)) then sub_check_ta1 (lambda3) ((Nil)) else false = if sub_check (lambda2) ((Nil)) then sub_check (lambda3) ((Nil)) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case sub_check_ta1 (lambda2) ((Nil))(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = if sub_check (lambda2) ((Nil)) then sub_check (lambda3) ((Nil)) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case sub_check (lambda2) ((Nil))(rank:5)
=================================================
Progress: 47


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
if sub_check_ta1 (lambda2) ((Nil)) then sub_check_ta1 (lambda3) ((Nil)) else false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> case sub_check_ta1 (lambda2) ((Nil))(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5)
=================================================
Progress: 48


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = if sub_check (lambda2) ((Nil)) then sub_check (lambda3) ((Nil)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case sub_check (lambda2) ((Nil))(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check_ta1 (lambda2) ((Nil)) = true
Case2 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5)
=================================================
Progress: 49


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
rewrite <- lhs_lemma3 in goal at 1
rewrite lemma7 in goal at 0
reflexivity
simpl in goal
case sub_check (lambda2) ((Nil))
case sub_check_ta1 (lambda2) ((Nil))
rewrite IH2 in goal at 0


1st goal of : any
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (lambda3:lambda), match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
New Env

;;
Lemma List
forall (lambda3:lambda), match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 50


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda3:lambda), match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda1) ((Nil))

---------------------------------------
forall (lambda1:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda1) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7)
=================================================
Progress: 51


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check_ta1 (lambda2) ((Nil)) = true
Case2 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check_ta1 (lambda2) ((Nil)) = true
Case2 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
rewrite <- lhs_lemma3 in goal at 1
rewrite lemma7 in goal at 0
reflexivity
simpl in goal
case sub_check_ta1 (lambda2) ((Nil))
case sub_check (lambda2) ((Nil))
rewrite IH2 in goal at 0


1st goal of : any
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (lambda3:lambda), match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 52


1st goal of : forall (lambda1:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda1) ((Nil))

---------------------------------------
forall (lambda1:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda1) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7)


1st goal of : forall (lambda1:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda1) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
match (V (string1)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (V (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 53


1st goal of : forall (lambda1:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda1) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
match (V (string1)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (V (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (lambda1:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
match (P (string1) (lambda2)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (P (string1) (lambda2)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 54


1st goal of : forall (lambda1:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
match (P (string1) (lambda2)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (P (string1) (lambda2)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (lambda1:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda1) ((Nil))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda2) ((Nil))
IH2 : match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
match (C (lambda2) (lambda3)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (C (lambda2) (lambda3)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 55


1st goal of : forall (lambda1:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda1) ((Nil))
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda2) ((Nil))
IH2 : match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
match (C (lambda2) (lambda3)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (C (lambda2) (lambda3)) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite lemma8 in goal at 0(rank:13)
rewrite <- lemma8 in goal at 0(rank:13)
=================================================
Progress: 56


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
sub_check (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 57


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
sub_check (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 3
rewrite <- Case2 in goal at 0(rank:12)
rewrite IH1 in goal at 0(rank:20)
rewrite <- lemma8 in goal at 0(rank:20)
=================================================
Progress: 58


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check_ta1 (lambda2) ((Nil)) = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma8 in goal at 0(rank:4)
=================================================
Progress: 59


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check_ta1 (lambda2) ((Nil)) = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma8 in goal at 0(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check_ta1 (lambda2) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:4)
=================================================
Progress: 60


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check_ta1 (lambda2) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
rewrite lemma8 in goal at 0
reflexivity
rewrite <- Case2 in goal at 0
rewrite <- lemma8 in goal at 0
rewrite <- IH2 in goal at 0


1st goal of : any
lambda1 : lambda
lambda3 : lambda
---------------------------------------
forall (lambda2:lambda), sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda3) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
New Env

;;
Lemma List
forall (lambda2:lambda) (lambda3:lambda), sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda3) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 61


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda2:lambda) (lambda3:lambda), sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda3) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7)
=================================================
Progress: 62


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
forall (lambda2:lambda), sub_check (V (string1)) ((Nil)) = true->sub_check_ta1 (V (string1)) ((Nil)) = false -> sub_check_ta1 (V (string1)) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:6)
=================================================
Progress: 63


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
forall (lambda2:lambda), sub_check (V (string1)) ((Nil)) = true->sub_check_ta1 (V (string1)) ((Nil)) = false -> sub_check_ta1 (V (string1)) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
forall (lambda2:lambda), sub_check (P (string1) (lambda3)) ((Nil)) = true->sub_check_ta1 (P (string1) (lambda3)) ((Nil)) = false -> sub_check_ta1 (P (string1) (lambda3)) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 64


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
forall (lambda2:lambda), sub_check (P (string1) (lambda3)) ((Nil)) = true->sub_check_ta1 (P (string1) (lambda3)) ((Nil)) = false -> sub_check_ta1 (P (string1) (lambda3)) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6)
=================================================
Progress: 65


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6)
=================================================
Progress: 66


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction lambda2(rank:16)
rewrite Cond2 in goal at 0(rank:22)
rewrite <- IH1 in goal at 0(rank:16)
rewrite <- lhs_lemma3 in goal at 0(rank:22)
=================================================
Progress: 67


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction lambda2(rank : 16)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (V (string2)) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 68


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (V (string2)) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
sub_check_ta1 (lambda3) ((string1::(Nil))) = false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond2 in goal at 0(rank:16)
rewrite <- Cond2 in goal at 0(rank:16)
rewrite <- lhs_lemma3 in goal at 0(rank:24)
=================================================
Progress: 69


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda3) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro lambda2(rank:8)
rewrite Cond2 in goal at 0(rank:24)
rewrite <- lhs_lemma3 in goal at 0(rank:24)
=================================================
Progress: 70


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda3) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> intro lambda2(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
---------------------------------------
sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda3) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite Cond2 in goal at 0(rank:24)
rewrite <- lhs_lemma3 in goal at 0(rank:24)
=================================================
Progress: 71


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
sub_check_ta1 (lambda3) ((string1::(Nil))) = false

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond2 in goal at 0(rank : 16)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
false = false

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 72


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
false = false

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
string2 : string
lambda4 : lambda
IH2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda4) ((Nil))
Inductive2 : lambda2 = P (string2) (lambda4)
---------------------------------------
sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (P (string2) (lambda4)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 73


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
string2 : string
lambda4 : lambda
IH2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda4) ((Nil))
Inductive2 : lambda2 = P (string2) (lambda4)
---------------------------------------
sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (P (string2) (lambda4)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check_ta1 (lambda3) ((Nil)) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
string2 : string
lambda4 : lambda
IH2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda4) ((Nil))
Inductive2 : lambda2 = P (string2) (lambda4)
---------------------------------------
sub_check_ta1 (lambda3) ((string1::(Nil))) = sub_check_ta1 (lambda4) ((string2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite Cond2 in goal at 0(rank:23)
rewrite IH2 in goal at 0(rank:23)
rewrite <- lhs_lemma3 in goal at 1(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
=================================================
Progress: 74


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
if sub_check_ta1 (lambda2) ((Nil)) then sub_check_ta1 (lambda3) ((Nil)) else false = if sub_check (lambda2) ((Nil)) then sub_check (lambda3) ((Nil)) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 19)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
if match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) then sub_check_ta1 (lambda3) ((Nil)) else false = if sub_check (lambda2) ((Nil)) then sub_check (lambda3) ((Nil)) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank:4)
case sub_check (lambda2) ((Nil))(rank:4)
=================================================
Progress: 75


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
if match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) then sub_check_ta1 (lambda3) ((Nil)) else false = if sub_check (lambda2) ((Nil)) then sub_check (lambda3) ((Nil)) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = true
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = if sub_check (lambda2) ((Nil)) then sub_check (lambda3) ((Nil)) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case sub_check (lambda2) ((Nil))(rank:5)
=================================================
Progress: 76


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
---------------------------------------
if match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) then sub_check_ta1 (lambda3) ((Nil)) else false = if sub_check (lambda2) ((Nil)) then sub_check (lambda3) ((Nil)) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case sub_check (lambda2) ((Nil))(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
if match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) then sub_check_ta1 (lambda3) ((Nil)) else false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank:5)
rewrite <- IH1 in goal at 0(rank:12)
=================================================
Progress: 77


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = true
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = if sub_check (lambda2) ((Nil)) then sub_check (lambda3) ((Nil)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case sub_check (lambda2) ((Nil))(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = true
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
Case2 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5)
=================================================
Progress: 78


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
if match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) then sub_check_ta1 (lambda3) ((Nil)) else false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> case match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = true
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5)
=================================================
Progress: 79


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = true
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
Case2 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = true
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
Case2 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
rewrite <- lhs_lemma3 in goal at 1
rewrite lemma7 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
case match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
case sub_check (lambda2) ((Nil))
rewrite IH2 in goal at 0


1st goal of : any
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (lambda3:lambda), match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 80


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = true
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = true
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
---------------------------------------
match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
rewrite <- lhs_lemma3 in goal at 1
rewrite lemma7 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
case sub_check (lambda2) ((Nil))
case match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
rewrite IH2 in goal at 0


1st goal of : any
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (lambda3:lambda), match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 81


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
if match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) then sub_check_ta1 (lambda3) ((Nil)) else false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
if sub_check_ta1 (lambda2) ((Nil)) then sub_check_ta1 (lambda3) ((Nil)) else false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case sub_check_ta1 (lambda2) ((Nil))(rank:5)
=================================================
Progress: 82


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
if sub_check_ta1 (lambda2) ((Nil)) then sub_check_ta1 (lambda3) ((Nil)) else false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> case sub_check_ta1 (lambda2) ((Nil))(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5)
=================================================
Progress: 83


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = true
---------------------------------------
match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
rewrite <- lhs_lemma3 in goal at 1
rewrite lemma7 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
case sub_check (lambda2) ((Nil))
rewrite <- IH1 in goal at 0
case sub_check_ta1 (lambda2) ((Nil))
rewrite IH2 in goal at 0


1st goal of : any
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (lambda3:lambda), match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 84


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
if sub_check_ta1 (lambda2) ((Nil)) then sub_check_ta1 (lambda3) ((Nil)) else false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
if match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) then sub_check_ta1 (lambda3) ((Nil)) else false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank:5)
=================================================
Progress: 85


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
---------------------------------------
if match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) then sub_check_ta1 (lambda3) ((Nil)) else false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> case match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = true
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5)
=================================================
Progress: 86


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = true
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
---------------------------------------
sub_check_ta1 (lambda3) ((Nil)) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : sub_check_ta1 (lambda2) ((Nil)) = true
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
---------------------------------------
match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
rewrite <- lhs_lemma3 in goal at 1
rewrite lemma7 in goal at 0
reflexivity
simpl in goal
case sub_check (lambda2) ((Nil))
rewrite IH1 in goal at 0
case match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
rewrite IH2 in goal at 0


1st goal of : any
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (lambda3:lambda), match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 87


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma8 in goal at 0(rank:12)
rewrite <- lemma8 in goal at 0(rank:12)
=================================================
Progress: 88


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check (lambda2) ((Nil)) = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case1 in goal at 0(rank:20)
rewrite <- lemma8 in goal at 2(rank:20)
=================================================
Progress: 89


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma8 in goal at 0(rank : 12)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:4)
=================================================
Progress: 90


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma8 in goal at 0(rank:4)
=================================================
Progress: 91


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check (lambda2) ((Nil)) = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:4)
=================================================
Progress: 92


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check (lambda2) ((Nil)) = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
true = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
rewrite lemma8 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- lemma8 in goal at 0
rewrite <- IH2 in goal at 0
rewrite lemma8 in goal at 0
rewrite Case1 in goal at 0


1st goal of : any
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (lambda3:lambda), true = sub_check_ta1 (lambda3) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
New Env

;;
Lemma List
forall (lambda3:lambda), true = sub_check_ta1 (lambda3) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
true = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 93


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
true = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda3:lambda), true = sub_check_ta1 (lambda3) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda), true = sub_check_ta1 (lambda1) ((Nil))

---------------------------------------
forall (lambda1:lambda), true = sub_check_ta1 (lambda1) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7)
=================================================
Progress: 94


1st goal of : forall (lambda1:lambda), true = sub_check_ta1 (lambda1) ((Nil))

---------------------------------------
forall (lambda1:lambda), true = sub_check_ta1 (lambda1) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7)


1st goal of : forall (lambda1:lambda), true = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
true = sub_check_ta1 (V (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 95


1st goal of : forall (lambda1:lambda), true = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
true = sub_check_ta1 (V (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (lambda1:lambda), true = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
true = false

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 96


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
false = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma8 in goal at 0(rank : 20)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
false = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:4)
=================================================
Progress: 97


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
false = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
false = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
rewrite lemma8 in goal at 0
reflexivity
rewrite <- lemma8 in goal at 0
rewrite <- IH2 in goal at 0


1st goal of : any
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (lambda3:lambda), false = sub_check_ta1 (lambda3) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
New Env

;;
Lemma List
forall (lambda3:lambda), false = sub_check_ta1 (lambda3) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
false = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 98


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
false = sub_check_ta1 (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda3:lambda), false = sub_check_ta1 (lambda3) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))

---------------------------------------
forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7)
=================================================
Progress: 99


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))

---------------------------------------
forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7)


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
false = sub_check_ta1 (V (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 100


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
false = sub_check_ta1 (V (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : false = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
false = sub_check_ta1 (P (string1) (lambda2)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 101


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : false = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
false = sub_check_ta1 (P (string1) (lambda2)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : false = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
false = sub_check_ta1 (lambda2) ((string1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:14)
rewrite <- rhs_lemma5 in goal at 0(rank:22)
=================================================
Progress: 102


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : false = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
false = sub_check_ta1 (lambda2) ((string1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : false = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda2) ((string1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- rhs_lemma5 in goal at 0(rank:6)
=================================================
Progress: 103


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : false = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda2) ((string1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- rhs_lemma5 in goal at 0(rank : 6)


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : false = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda2) (mk_rhs1 ((Nil)) (string1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- rhs_lemma5 in goal at 0


1st goal of : any
lambda1 : lambda
string1 : string
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda2) (mk_rhs1 ((Nil)) (string1))

0 goal(s) more...

0 conjecture(s) more...
New Env

;;
Lemma List
forall (lambda2:lambda) (string1:string), sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda2) (mk_rhs1 ((Nil)) (string1))
End of Lemma List


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : false = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda2) (mk_rhs1 ((Nil)) (string1))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 104


1st goal of : forall (lambda1:lambda), false = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : false = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda2) (mk_rhs1 ((Nil)) (string1))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda2:lambda) (string1:string), sub_check_ta1 (lambda2) ((Nil)) = sub_check_ta1 (lambda2) (mk_rhs1 ((Nil)) (string1))(rank : 0)


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))

---------------------------------------
forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 105


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))

---------------------------------------
forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))

---------------------------------------
forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) ((string1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9)
=================================================
Progress: 106


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))

---------------------------------------
forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) ((string1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), sub_check_ta1 (V (string2)) ((Nil)) = sub_check_ta1 (V (string2)) ((string1::(Nil)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 107


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), sub_check_ta1 (V (string2)) ((Nil)) = sub_check_ta1 (V (string2)) ((string1::(Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), false = if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:9)
=================================================
Progress: 108


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
---------------------------------------
forall (string1:string), false = if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2)

2 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
false = if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:10)
=================================================
Progress: 109


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
---------------------------------------
false = if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2)

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite string_eqb_eq in Case1 at 0(rank:10)
=================================================
Progress: 110


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string_eq (string1) (string2) = true
---------------------------------------
false = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite string_eqb_eq in Case1 at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (string1:string), sub_check_ta1 (lambda1) ((Nil)) = sub_check_ta1 (lambda1) (mk_rhs1 ((Nil)) (string1))
lambda1 : lambda
string2 : string
Base1 : lambda1 = V (string2)
string1 : string
Case1 : string1 = string2
---------------------------------------
false = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro string1
case string_eq (string1) (string2)
rewrite string_eqb_eq in Case1 at 0
=================================================
Progress: 111


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check (lambda2) ((Nil)) = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 20)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
true = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma8 in goal at 0(rank:4)
=================================================
Progress: 112


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
true = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma8 in goal at 0(rank : 4)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
true = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
rewrite lemma8 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite lemma8 in goal at 0
rewrite Case1 in goal at 0
rewrite <- lemma8 in goal at 0


1st goal of : any
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (lambda3:lambda), true = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...
New Env

;;
Lemma List
forall (lambda3:lambda), true = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
End of Lemma List


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
true = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 113


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
true = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda3:lambda), true = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank : 0)


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro lambda1(rank:5)
rewrite lemma8 in goal at 0(rank:13)
=================================================
Progress: 114


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda1(rank : 5)


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma8 in goal at 0(rank:5)
=================================================
Progress: 115


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 5)


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
true = sub_check (lambda1) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
true = sub_check (lambda1) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 116


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
true = sub_check (lambda1) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))

---------------------------------------
forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction lambda1(rank:17)
rewrite <- lemma8 in goal at 0(rank:23)
=================================================
Progress: 117


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7)
=================================================
Progress: 118


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7)


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
true = sub_check (V (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 119


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
true = sub_check (V (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (lambda1:lambda), true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
true = false

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 120


1st goal of : forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))

---------------------------------------
forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 17)


1st goal of : forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
true = sub_check (V (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 121


1st goal of : forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
true = sub_check (V (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
true = false

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 122


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check (lambda2) ((Nil)) = sub_check (lambda3) ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma8 in goal at 2(rank : 20)


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check (lambda2) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
rewrite lemma8 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite lemma8 in goal at 0
rewrite <- lemma8 in goal at 2


1st goal of : any
lambda1 : lambda
lambda3 : lambda
---------------------------------------
forall (lambda2:lambda), sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> sub_check (lambda2) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...
New Env

;;
Lemma List
forall (lambda2:lambda) (lambda3:lambda), sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> sub_check (lambda2) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
End of Lemma List


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check (lambda2) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 123


1st goal of : forall (lambda1:lambda), check_ta1 (lambda1) = check (lambda1)
lambda1 : lambda
lambda2 : lambda
lambda3 : lambda
IH1 : false = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
IH2 : sub_check_ta1 (lambda3) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = C (lambda2) (lambda3)
Case1 : sub_check (lambda2) ((Nil)) = true
Case2 : sub_check_ta1 (lambda2) ((Nil)) = false
---------------------------------------
sub_check (lambda2) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda2:lambda) (lambda3:lambda), sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> sub_check (lambda2) ((Nil)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank : 0)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
intro lambda1(rank:5)
rewrite lemma8 in goal at 0(rank:13)
rewrite <- lemma8 in goal at 0(rank:13)
rewrite <- lemma8 in goal at 1(rank:21)
rewrite <- lemma8 in goal at 2(rank:13)
induction lambda1(rank:15)
intro lambda2(rank:5)
=================================================
Progress: 124


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda1(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5)
=================================================
Progress: 125


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda2(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
---------------------------------------
forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7)
=================================================
Progress: 126


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5)
=================================================
Progress: 127


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro lambda2(rank:5)
rewrite Cond1 in goal at 0(rank:21)
rewrite lemma8 in goal at 0(rank:13)
rewrite <- lemma8 in goal at 0(rank:13)
=================================================
Progress: 128


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda2(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma8 in goal at 0(rank:13)
rewrite Cond1 in goal at 0(rank:21)
rewrite <- lemma8 in goal at 0(rank:13)
=================================================
Progress: 129


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
---------------------------------------
forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check (V (string1)) ((Nil)) = true->sub_check_ta1 (V (string1)) ((Nil)) = false -> sub_check (V (string1)) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:6)
=================================================
Progress: 130


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check (V (string1)) ((Nil)) = true->sub_check_ta1 (V (string1)) ((Nil)) = false -> sub_check (V (string1)) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
sub_check (P (string1) (lambda3)) ((Nil)) = true->sub_check_ta1 (P (string1) (lambda3)) ((Nil)) = false -> sub_check (P (string1) (lambda3)) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 131


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
sub_check (P (string1) (lambda3)) ((Nil)) = true->sub_check_ta1 (P (string1) (lambda3)) ((Nil)) = false -> sub_check (P (string1) (lambda3)) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6)
=================================================
Progress: 132


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
---------------------------------------
sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6)
=================================================
Progress: 133


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
---------------------------------------
sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma8 in goal at 0(rank:14)
rewrite Cond1 in goal at 0(rank:22)
rewrite <- lhs_lemma3 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:16)
=================================================
Progress: 134


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = sub_check (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:7)
=================================================
Progress: 135


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = sub_check (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
forall (lambda2:lambda), sub_check (V (string1)) ((Nil)) = true->sub_check_ta1 (V (string1)) ((Nil)) = false -> sub_check (V (string1)) ((Nil)) = sub_check (lambda2) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:6)
=================================================
Progress: 136


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
forall (lambda2:lambda), sub_check (V (string1)) ((Nil)) = true->sub_check_ta1 (V (string1)) ((Nil)) = false -> sub_check (V (string1)) ((Nil)) = sub_check (lambda2) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = sub_check (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
forall (lambda2:lambda), sub_check (P (string1) (lambda3)) ((Nil)) = true->sub_check_ta1 (P (string1) (lambda3)) ((Nil)) = false -> sub_check (P (string1) (lambda3)) ((Nil)) = sub_check (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 137


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = sub_check (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
forall (lambda2:lambda), sub_check (P (string1) (lambda3)) ((Nil)) = true->sub_check_ta1 (P (string1) (lambda3)) ((Nil)) = false -> sub_check (P (string1) (lambda3)) ((Nil)) = sub_check (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = sub_check (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6)
=================================================
Progress: 138


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = sub_check (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = sub_check (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6)
=================================================
Progress: 139


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = sub_check (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = sub_check (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
induction lambda2(rank:16)
rewrite <- IH1 in goal at 0(rank:16)
rewrite <- lemma8 in goal at 0(rank:22)
rewrite <- lhs_lemma3 in goal at 0(rank:22)
rewrite Cond1 in goal at 0(rank:22)
=================================================
Progress: 140


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma8 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro lambda1(rank:5)
=================================================
Progress: 141


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda1(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5)
=================================================
Progress: 142


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5)
=================================================
Progress: 143


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro lambda2(rank:5)
rewrite Cond1 in goal at 0(rank:21)
rewrite lemma8 in goal at 0(rank:21)
rewrite lemma8 in goal at 2(rank:21)
=================================================
Progress: 144


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda2(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:21)
rewrite lemma8 in goal at 0(rank:21)
rewrite lemma8 in goal at 2(rank:21)
=================================================
Progress: 145


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma8 in goal at 2(rank : 13)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro lambda1(rank:5)
=================================================
Progress: 146


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro lambda1(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5)
=================================================
Progress: 147


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5)
=================================================
Progress: 148


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma8 in goal at 2(rank:5)
=================================================
Progress: 149


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma8 in goal at 2(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction lambda2(rank:7)
=================================================
Progress: 150


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda2(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string1 : string
Base1 : lambda2 = V (string1)
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (V (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 151


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string1 : string
Base1 : lambda2 = V (string1)
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check (V (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string1 : string
Base1 : lambda2 = V (string1)
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = false

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma8 in goal at 0(rank:15)
rewrite <- Cond2 in goal at 0(rank:15)
=================================================
Progress: 152


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda1) ((Nil)) = sub_check (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction lambda2(rank:15)
rewrite Cond1 in goal at 0(rank:21)
=================================================
Progress: 153


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma8 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (arg5:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (arg5)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (arg5)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
End of Lemma List


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 154


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (arg5:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (arg5)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (arg5)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank : 0)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro lambda1(rank:7)
=================================================
Progress: 155


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 156


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7)
=================================================
Progress: 157


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro lambda2(rank:7)
intro string_list1(rank:7)
=================================================
Progress: 158


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda2(rank : 7)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
forall (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string_list1(rank:7)
=================================================
Progress: 159


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string_list1(rank : 7)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
string_list1 : string list
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
End of Lemma List


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
string_list1 : string list
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 160


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
string_list1 : string list
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank : 0)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro lambda1(rank:9)
=================================================
Progress: 161


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
forall (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string_list1(rank : 7)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string_list1 : string list
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 162


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 163


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9)
=================================================
Progress: 164


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro lambda2(rank:9)
intro string_list1(rank:9)
=================================================
Progress: 165


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda2(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
forall (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string_list1(rank:9)
=================================================
Progress: 166


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string_list1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
string_list1 : string list
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
End of Lemma List


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
string_list1 : string list
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 167


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
string_list1 : string list
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank : 0)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro lambda1(rank:11)
=================================================
Progress: 168


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
forall (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string_list1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string_list1 : string list
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 169


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda1(rank : 11)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 170


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11)
=================================================
Progress: 171


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro lambda2(rank:11)
intro string_list1(rank:11)
=================================================
Progress: 172


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro lambda2(rank : 11)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
forall (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro string_list1(rank:11)
=================================================
Progress: 173


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda) (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string_list1(rank : 11)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
string_list1 : string list
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 174


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
forall (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro string_list1(rank : 11)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string_list1:string list), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string_list1 : string list
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 175


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda1) ((Nil)) = sub_check (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:5)
=================================================
Progress: 176


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda1) ((Nil)) = sub_check (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 5)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
true = sub_check (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (lambda2:lambda), true = sub_check (lambda2) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
true = sub_check (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 177


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
true = sub_check (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda2:lambda), true = sub_check (lambda2) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))

---------------------------------------
forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction lambda1(rank:17)
rewrite <- lemma8 in goal at 0(rank:23)
=================================================
Progress: 178


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma8 in goal at 0(rank : 13)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (arg6:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (arg6)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (arg6)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
End of Lemma List


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 179


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (arg6:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (arg6)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (arg6)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank : 0)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro lambda1(rank:7)
=================================================
Progress: 180


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 181


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7)
=================================================
Progress: 182


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro lambda2(rank:7)
intro string_list1(rank:7)
=================================================
Progress: 183


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda2(rank : 7)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
forall (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string_list1(rank:7)
=================================================
Progress: 184


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (string_list1:string list) (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string_list1(rank : 7)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
string_list1 : string list
---------------------------------------
forall (lambda2:lambda), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 185


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
---------------------------------------
forall (string_list1:string list), match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string_list1(rank : 7)


1st goal of : forall (string_list1:string list) (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string_list1 : string list
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) (string_list1)
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 186


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 14)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:22)
rewrite <- lhs_lemma3 in goal at 0(rank:22)
=================================================
Progress: 187


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lhs_lemma3 in goal at 0(rank : 14)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8)
=================================================
Progress: 188


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = sub_check (lambda3) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma8 in goal at 0(rank:8)
=================================================
Progress: 189


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = sub_check (lambda3) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma8 in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 190


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:8)
=================================================
Progress: 191


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
true = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma8 in goal at 0(rank:8)
=================================================
Progress: 192


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
true = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
true = sub_check (lambda3) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:10)
=================================================
Progress: 193


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
true = sub_check (lambda3) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma8 in goal at 0(rank:10)
=================================================
Progress: 194


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
true = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

5 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 10)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
true = sub_check (lambda2) ((Nil))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite <- lhs_lemma3 in goal at 0
rewrite <- IH1 in goal at 0
rewrite <- lemma8 in goal at 0
simpl in goal
rewrite Cond1 in goal at 0
rewrite lemma8 in goal at 0
rewrite IH1 in goal at 0
rewrite lemma8 in goal at 0


1st goal of : any
lambda1 : lambda
string1 : string
lambda3 : lambda
---------------------------------------
forall (lambda2:lambda), true = sub_check (lambda2) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 195


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda1(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
forall (lambda2:lambda), sub_check (V (string1)) ((Nil)) = true->sub_check_ta1 (V (string1)) ((Nil)) = false -> sub_check (V (string1)) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:6)
=================================================
Progress: 196


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
forall (lambda2:lambda), sub_check (V (string1)) ((Nil)) = true->sub_check_ta1 (V (string1)) ((Nil)) = false -> sub_check (V (string1)) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
forall (lambda2:lambda), sub_check (P (string1) (lambda3)) ((Nil)) = true->sub_check_ta1 (P (string1) (lambda3)) ((Nil)) = false -> sub_check (P (string1) (lambda3)) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 197


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
forall (lambda2:lambda), sub_check (P (string1) (lambda3)) ((Nil)) = true->sub_check_ta1 (P (string1) (lambda3)) ((Nil)) = false -> sub_check (P (string1) (lambda3)) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6)
=================================================
Progress: 198


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6)
=================================================
Progress: 199


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
---------------------------------------
forall (lambda2:lambda), sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro lambda2(rank:6)
rewrite lemma8 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:16)
rewrite <- lhs_lemma3 in goal at 0(rank:14)
rewrite Cond1 in goal at 0(rank:22)
=================================================
Progress: 200


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro lambda2(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma8 in goal at 0(rank:14)
rewrite Cond1 in goal at 0(rank:22)
rewrite <- lhs_lemma3 in goal at 0(rank:14)
rewrite <- IH1 in goal at 0(rank:16)
=================================================
Progress: 201


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 14)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction lambda2(rank:16)
rewrite Cond1 in goal at 0(rank:22)
rewrite <- lhs_lemma3 in goal at 0(rank:22)
=================================================
Progress: 202


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lhs_lemma3 in goal at 0(rank : 14)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 203


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite <- lhs_lemma3 in goal at 0
simpl in goal


1st goal of : any
lambda1 : lambda
string1 : string
---------------------------------------
forall (lambda3:lambda) (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...


1st goal of : any
lambda1 : lambda
string1 : string
lambda3 : lambda
string2 : string
---------------------------------------
forall (lambda4:lambda) (lambda2:lambda), sub_check (lambda4) ((string2::(string1::(Nil)))) = true->sub_check_ta1 (lambda4) ((string2::(string1::(Nil)))) = false -> sub_check (lambda4) ((string2::(string1::(Nil)))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...
lhs_common_subtree
Cons(string1, Nil())
Cons(string2, Cons(string1, Nil()))
Cons(string3, Cons(string2, Cons(string1, Nil())))
rhs_common_subtree
New Env

;;
Lemma List
forall (lambda2:lambda) (lambda3:lambda) (string1:string), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
End of Lemma List


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 204


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda2:lambda) (lambda3:lambda) (string1:string), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank : 0)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 11
intro lambda1(rank:7)
intro string1(rank:7)
rewrite lemma8 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 1(rank:23)
rewrite <- lhs_lemma3 in goal at 2(rank:23)
induction lambda2(rank:17)
intro lambda2(rank:7)
rewrite <- lhs_lemma3 in goal at 3(rank:15)
rewrite <- rhs_lemma5 in goal at 1(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
=================================================
Progress: 205


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
intro lambda2(rank:7)
rewrite lemma8 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 1(rank:23)
rewrite <- lhs_lemma3 in goal at 3(rank:15)
rewrite <- lhs_lemma3 in goal at 2(rank:23)
induction lambda2(rank:17)
intro string1(rank:7)
rewrite <- rhs_lemma5 in goal at 1(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
=================================================
Progress: 206


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda2(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
---------------------------------------
forall (lambda1:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7)
=================================================
Progress: 207


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
rewrite lemma8 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 3(rank:15)
rewrite <- lhs_lemma3 in goal at 2(rank:23)
rewrite <- rhs_lemma5 in goal at 1(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
rewrite <- lhs_lemma3 in goal at 1(rank:23)
induction lambda2(rank:17)
=================================================
Progress: 208


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda2(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7)
=================================================
Progress: 209


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
---------------------------------------
forall (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda2(rank:9)
=================================================
Progress: 210


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
---------------------------------------
forall (lambda1:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 211


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 212


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7)
=================================================
Progress: 213


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7)
=================================================
Progress: 214


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda2) ((string1::(Nil))) = false
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma8 in goal at 0(rank:15)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- lhs_lemma3 in goal at 0(rank:15)
=================================================
Progress: 215


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda2) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma8 in goal at 0(rank:15)
rewrite Cond1 in goal at 0(rank:23)
rewrite <- lhs_lemma3 in goal at 0(rank:15)
=================================================
Progress: 216


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
---------------------------------------
forall (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda2(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
sub_check (V (string2)) ((string1::(Nil))) = true->sub_check_ta1 (V (string2)) ((string1::(Nil))) = false -> sub_check (V (string2)) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 217


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
sub_check (V (string2)) ((string1::(Nil))) = true->sub_check_ta1 (V (string2)) ((string1::(Nil))) = false -> sub_check (V (string2)) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true->if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 218


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true->if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9)
=================================================
Progress: 219


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
Cond2 : if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:10)
=================================================
Progress: 220


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
Cond2 : if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : true = true
Cond2 : true = false
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:9)
=================================================
Progress: 221


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : true = true
Cond2 : true = false
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : false = true
Cond2 : false = false
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:8)
=================================================
Progress: 222


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : false = true
Cond2 : false = false
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
sub_check (P (string2) (lambda3)) ((string1::(Nil))) = true->sub_check_ta1 (P (string2) (lambda3)) ((string1::(Nil))) = false -> sub_check (P (string2) (lambda3)) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 223


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
sub_check (P (string2) (lambda3)) ((string1::(Nil))) = true->sub_check_ta1 (P (string2) (lambda3)) ((string1::(Nil))) = false -> sub_check (P (string2) (lambda3)) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
sub_check (lambda3) ((string2::(string1::(Nil)))) = true->sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8)
=================================================
Progress: 224


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
sub_check (lambda3) ((string2::(string1::(Nil)))) = true->sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
Cond1 : sub_check (lambda3) ((string2::(string1::(Nil)))) = true
---------------------------------------
sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8)
=================================================
Progress: 225


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
Cond1 : sub_check (lambda3) ((string2::(string1::(Nil)))) = true
---------------------------------------
sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
Cond1 : sub_check (lambda3) ((string2::(string1::(Nil)))) = true
Cond2 : sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false
---------------------------------------
sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma8 in goal at 0(rank:16)
rewrite Cond1 in goal at 0(rank:24)
rewrite <- lhs_lemma3 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:18)
=================================================
Progress: 226


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 14)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:22)
rewrite <- lhs_lemma3 in goal at 0(rank:22)
=================================================
Progress: 227


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lhs_lemma3 in goal at 0(rank : 14)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8)
=================================================
Progress: 228


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = sub_check (lambda3) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma8 in goal at 0(rank:8)
=================================================
Progress: 229


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = sub_check (lambda3) ((Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma8 in goal at 0(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 230


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda3) (mk_lhs1 ((Nil)) (string1)) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda3 : lambda
IH1 : forall (lambda2:lambda), sub_check (lambda3) ((Nil)) = true->sub_check_ta1 (lambda3) ((Nil)) = false -> sub_check (lambda3) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda1 = P (string1) (lambda3)
Cond1 : sub_check (lambda3) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda3) ((string1::(Nil))) = false
lambda2 : lambda
---------------------------------------
sub_check (lambda3) ((string1::(Nil))) = match (lambda3) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:18)
rewrite Cond1 in goal at 0(rank:24)
=================================================
Progress: 231


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string1 : string
Base1 : lambda2 = V (string1)
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = false

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string1 : string
Base1 : lambda2 = V (string1)
---------------------------------------
sub_check (lambda1) ((Nil)) = false

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:15)
rewrite <- Cond2 in goal at 0(rank:15)
=================================================
Progress: 232


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string1 : string
Base1 : lambda2 = V (string1)
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = false

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond2 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string1 : string
Base1 : lambda2 = V (string1)
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- Cond2 in goal at 0


1st goal of : any
lambda2 : lambda
string1 : string
---------------------------------------
forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))

0 goal(s) more...

0 conjecture(s) more...
New Env

;;
Lemma List
forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))
End of Lemma List


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string1 : string
Base1 : lambda2 = V (string1)
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 233


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string1 : string
Base1 : lambda2 = V (string1)
---------------------------------------
match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))(rank : 0)


1st goal of : forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))

---------------------------------------
forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda1(rank:9)
=================================================
Progress: 234


1st goal of : forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))

---------------------------------------
forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda1(rank : 9)


1st goal of : forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check (V (string1)) ((Nil)) = true->sub_check_ta1 (V (string1)) ((Nil)) = false -> match (V (string1)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (V (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 235


1st goal of : forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
Base1 : lambda1 = V (string1)
---------------------------------------
sub_check (V (string1)) ((Nil)) = true->sub_check_ta1 (V (string1)) ((Nil)) = false -> match (V (string1)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (V (string1)) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check (P (string1) (lambda2)) ((Nil)) = true->sub_check_ta1 (P (string1) (lambda2)) ((Nil)) = false -> match (P (string1) (lambda2)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (P (string1) (lambda2)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 236


1st goal of : forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check (P (string1) (lambda2)) ((Nil)) = true->sub_check_ta1 (P (string1) (lambda2)) ((Nil)) = false -> match (P (string1) (lambda2)) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (P (string1) (lambda2)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = sub_check_ta1 (lambda2) ((string1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8)
=================================================
Progress: 237


1st goal of : forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = sub_check_ta1 (lambda2) ((string1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8)


1st goal of : forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = sub_check_ta1 (lambda2) ((string1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8)
=================================================
Progress: 238


1st goal of : forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = sub_check_ta1 (lambda2) ((string1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8)


1st goal of : forall (lambda1:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda1) ((Nil))
lambda1 : lambda
string1 : string
lambda2 : lambda
IH1 : sub_check (lambda2) ((Nil)) = true->sub_check_ta1 (lambda2) ((Nil)) = false -> match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil))) = sub_check_ta1 (lambda2) ((Nil))
Inductive1 : lambda1 = P (string1) (lambda2)
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda2) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = sub_check_ta1 (lambda2) ((string1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite Cond1 in goal at 0(rank:24)
rewrite Cond2 in goal at 0(rank:24)
rewrite <- lhs_lemma3 in goal at 1(rank:24)
rewrite <- rhs_lemma5 in goal at 2(rank:24)
=================================================
Progress: 239


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
---------------------------------------
forall (lambda2:lambda), sub_check (lambda1) ((Nil)) = sub_check (lambda2) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda2(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string1 : string
Base1 : lambda2 = V (string1)
---------------------------------------
sub_check (lambda1) ((Nil)) = sub_check (V (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 240


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string1 : string
Base1 : lambda2 = V (string1)
---------------------------------------
sub_check (lambda1) ((Nil)) = sub_check (V (string1)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda1) ((Nil)) = true->sub_check_ta1 (lambda1) ((Nil)) = false -> sub_check (lambda1) ((Nil)) = match (lambda2) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
Cond1 : sub_check (lambda1) ((Nil)) = true
Cond2 : sub_check_ta1 (lambda1) ((Nil)) = false
lambda2 : lambda
string1 : string
Base1 : lambda2 = V (string1)
---------------------------------------
sub_check (lambda1) ((Nil)) = false

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite Cond1 in goal at 0(rank:15)
rewrite <- Cond2 in goal at 0(rank:15)
rewrite <- lemma8 in goal at 0(rank:23)
=================================================
Progress: 241


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = sub_check (lambda1) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
induction lambda1(rank:17)
rewrite <- lhs_lemma3 in goal at 0(rank:23)
rewrite <- lhs_lemma3 in goal at 2(rank:23)
rewrite <- lhs_lemma3 in goal at 3(rank:23)
rewrite <- rhs_lemma5 in goal at 1(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
rewrite <- lhs_lemma3 in goal at 1(rank:23)
induction lambda2(rank:17)
=================================================
Progress: 242


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lhs_lemma3 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma7 in goal at 0(rank:7)
=================================================
Progress: 243


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma7 in goal at 0(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check (lambda2) (mk_rhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 244


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check (lambda2) (mk_rhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 11
intro lambda1(rank:7)
intro string1(rank:7)
rewrite lemma8 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 1(rank:23)
rewrite <- lhs_lemma3 in goal at 2(rank:23)
induction lambda2(rank:17)
intro lambda2(rank:7)
rewrite <- lhs_lemma3 in goal at 3(rank:15)
rewrite <- rhs_lemma5 in goal at 1(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
=================================================
Progress: 245


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
intro lambda2(rank:7)
rewrite lemma8 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 1(rank:23)
rewrite <- lhs_lemma3 in goal at 3(rank:15)
rewrite <- lhs_lemma3 in goal at 2(rank:23)
induction lambda2(rank:17)
intro string1(rank:7)
rewrite <- rhs_lemma5 in goal at 1(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
=================================================
Progress: 246


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda2(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
---------------------------------------
forall (lambda1:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7)
=================================================
Progress: 247


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
rewrite lemma8 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 3(rank:15)
rewrite <- lhs_lemma3 in goal at 2(rank:23)
rewrite <- rhs_lemma5 in goal at 1(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
rewrite <- lhs_lemma3 in goal at 1(rank:23)
induction lambda2(rank:17)
=================================================
Progress: 248


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro lambda2(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro string1(rank:7)
=================================================
Progress: 249


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
---------------------------------------
forall (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda2(rank:9)
=================================================
Progress: 250


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
---------------------------------------
forall (lambda1:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 251


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro string1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7)
=================================================
Progress: 252


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7)
=================================================
Progress: 253


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7)
=================================================
Progress: 254


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
Cond2 : sub_check (lambda2) ((string1::(Nil))) = false
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma8 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 0(rank:15)
rewrite Cond1 in goal at 0(rank:23)
rewrite Cond2 in goal at 0(rank:23)
=================================================
Progress: 255


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
Cond2 : sub_check (lambda2) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma8 in goal at 0(rank:15)
rewrite <- lhs_lemma3 in goal at 0(rank:15)
rewrite Cond1 in goal at 0(rank:23)
rewrite Cond2 in goal at 0(rank:23)
=================================================
Progress: 256


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
---------------------------------------
forall (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda2(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
sub_check (V (string2)) ((string1::(Nil))) = true->sub_check (V (string2)) ((string1::(Nil))) = false -> sub_check (V (string2)) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 257


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
sub_check (V (string2)) ((string1::(Nil))) = true->sub_check (V (string2)) ((string1::(Nil))) = false -> sub_check (V (string2)) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true->if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 258


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true->if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9)
=================================================
Progress: 259


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
Cond2 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = false
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:10)
=================================================
Progress: 260


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
Cond2 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = false
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : true = true
Cond2 : true = false
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:9)
=================================================
Progress: 261


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : true = true
Cond2 : true = false
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : false = true
Cond2 : false = false
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:8)
=================================================
Progress: 262


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : false = true
Cond2 : false = false
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
sub_check (P (string2) (lambda3)) ((string1::(Nil))) = true->sub_check (P (string2) (lambda3)) ((string1::(Nil))) = false -> sub_check (P (string2) (lambda3)) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 263


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
sub_check (P (string2) (lambda3)) ((string1::(Nil))) = true->sub_check (P (string2) (lambda3)) ((string1::(Nil))) = false -> sub_check (P (string2) (lambda3)) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
sub_check (lambda3) ((string2::(string1::(Nil)))) = true->sub_check (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8)
=================================================
Progress: 264


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
sub_check (lambda3) ((string2::(string1::(Nil)))) = true->sub_check (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
Cond1 : sub_check (lambda3) ((string2::(string1::(Nil)))) = true
---------------------------------------
sub_check (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8)
=================================================
Progress: 265


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
Cond1 : sub_check (lambda3) ((string2::(string1::(Nil)))) = true
---------------------------------------
sub_check (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
Cond1 : sub_check (lambda3) ((string2::(string1::(Nil)))) = true
Cond2 : sub_check (lambda3) ((string2::(string1::(Nil)))) = false
---------------------------------------
sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma8 in goal at 0(rank:16)
rewrite <- IH1 in goal at 0(rank:18)
rewrite <- lhs_lemma3 in goal at 0(rank:16)
rewrite Cond1 in goal at 0(rank:24)
rewrite Cond2 in goal at 0(rank:24)
=================================================
Progress: 266


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lhs_lemma3 in goal at 3(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- rhs_lemma5 in goal at 0(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
=================================================
Progress: 267


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = sub_check (lambda1) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
induction lambda2(rank:17)
rewrite <- lhs_lemma3 in goal at 1(rank:23)
rewrite <- lhs_lemma3 in goal at 3(rank:23)
rewrite <- rhs_lemma5 in goal at 1(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
rewrite <- lhs_lemma3 in goal at 2(rank:23)
rewrite <- lhs_lemma3 in goal at 0(rank:23)
=================================================
Progress: 268


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lhs_lemma3 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
New Env

;;
Lemma List
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
End of Lemma List


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 269


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))(rank : 0)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 270


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 8
intro lambda1(rank:9)
intro string1(rank:9)
rewrite lemma8 in goal at 0(rank:17)
rewrite <- lhs_lemma3 in goal at 2(rank:25)
rewrite <- rhs_lemma5 in goal at 1(rank:25)
rewrite <- rhs_lemma5 in goal at 2(rank:25)
induction lambda2(rank:19)
intro lambda2(rank:9)
=================================================
Progress: 271


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 9
intro lambda2(rank:9)
rewrite lemma8 in goal at 0(rank:17)
rewrite <- lhs_lemma3 in goal at 3(rank:17)
rewrite <- rhs_lemma5 in goal at 1(rank:25)
rewrite <- lhs_lemma3 in goal at 1(rank:25)
rewrite <- lhs_lemma3 in goal at 2(rank:25)
induction lambda2(rank:19)
intro string1(rank:9)
rewrite <- rhs_lemma5 in goal at 2(rank:25)
=================================================
Progress: 272


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda2(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
---------------------------------------
forall (lambda1:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9)
=================================================
Progress: 273


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

---------------------------------------
forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
rewrite lemma8 in goal at 0(rank:17)
rewrite <- lhs_lemma3 in goal at 3(rank:17)
rewrite <- lhs_lemma3 in goal at 1(rank:25)
rewrite <- lhs_lemma3 in goal at 2(rank:25)
rewrite <- rhs_lemma5 in goal at 2(rank:25)
rewrite <- rhs_lemma5 in goal at 1(rank:25)
induction lambda2(rank:19)
=================================================
Progress: 274


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro lambda2(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro string1(rank:9)
=================================================
Progress: 275


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
---------------------------------------
forall (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction lambda2(rank:11)
=================================================
Progress: 276


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
---------------------------------------
forall (lambda1:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 277


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
---------------------------------------
forall (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro string1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 278


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9)
=================================================
Progress: 279


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9)
=================================================
Progress: 280


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda2) ((string1::(Nil))) = false
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
rewrite lemma8 in goal at 0(rank:17)
rewrite Cond1 in goal at 0(rank:25)
rewrite <- lhs_lemma3 in goal at 0(rank:17)
=================================================
Progress: 281


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
---------------------------------------
sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda2) ((string1::(Nil))) = false
---------------------------------------
sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
rewrite lemma8 in goal at 0(rank:17)
rewrite Cond1 in goal at 0(rank:25)
rewrite <- lhs_lemma3 in goal at 0(rank:17)
=================================================
Progress: 282


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
---------------------------------------
forall (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> induction lambda2(rank : 11)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
sub_check (V (string2)) ((string1::(Nil))) = true->sub_check_ta1 (V (string2)) ((string1::(Nil))) = false -> sub_check (V (string2)) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 283


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
sub_check (V (string2)) ((string1::(Nil))) = true->sub_check_ta1 (V (string2)) ((string1::(Nil))) = false -> sub_check (V (string2)) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true->if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11)
=================================================
Progress: 284


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true->if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11)
=================================================
Progress: 285


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
---------------------------------------
if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 11)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
Cond2 : if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:12)
=================================================
Progress: 286


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
Cond2 : if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false
---------------------------------------
if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

3 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 12)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : true = true
Cond2 : true = false
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:11)
=================================================
Progress: 287


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : true = true
Cond2 : true = false
Case1 : string_eq (string1) (string2) = true
---------------------------------------
true = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

3 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 11)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : false = true
Cond2 : false = false
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:10)
=================================================
Progress: 288


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : false = true
Cond2 : false = false
Case1 : string_eq (string1) (string2) = false
---------------------------------------
false = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

2 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 10)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
sub_check (P (string2) (lambda3)) ((string1::(Nil))) = true->sub_check_ta1 (P (string2) (lambda3)) ((string1::(Nil))) = false -> sub_check (P (string2) (lambda3)) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10)
=================================================
Progress: 289


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
sub_check (P (string2) (lambda3)) ((string1::(Nil))) = true->sub_check_ta1 (P (string2) (lambda3)) ((string1::(Nil))) = false -> sub_check (P (string2) (lambda3)) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
sub_check (lambda3) ((string2::(string1::(Nil)))) = true->sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10)
=================================================
Progress: 290


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
sub_check (lambda3) ((string2::(string1::(Nil)))) = true->sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
Cond1 : sub_check (lambda3) ((string2::(string1::(Nil)))) = true
---------------------------------------
sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10)
=================================================
Progress: 291


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
Cond1 : sub_check (lambda3) ((string2::(string1::(Nil)))) = true
---------------------------------------
sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
Inductive1 : lambda2 = P (string2) (lambda3)
Cond1 : sub_check (lambda3) ((string2::(string1::(Nil)))) = true
Cond2 : sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false
---------------------------------------
sub_check (lambda3) ((string2::(string1::(Nil)))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
rewrite lemma8 in goal at 0(rank:18)
rewrite Cond1 in goal at 0(rank:26)
rewrite <- lhs_lemma3 in goal at 0(rank:18)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 292


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lhs_lemma3 in goal at 3(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda1 : lambda
---------------------------------------
forall (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- rhs_lemma5 in goal at 0(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
=================================================
Progress: 293


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = sub_check (lambda1) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction lambda2(rank:9)
=================================================
Progress: 294


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = sub_check (lambda1) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction lambda2(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
forall (lambda1:lambda), sub_check (V (string2)) ((string1::(Nil))) = true->sub_check_ta1 (V (string2)) ((string1::(Nil))) = false -> sub_check (V (string2)) ((string1::(Nil))) = sub_check (lambda1) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 295


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
forall (lambda1:lambda), sub_check (V (string2)) ((string1::(Nil))) = true->sub_check_ta1 (V (string2)) ((string1::(Nil))) = false -> sub_check (V (string2)) ((string1::(Nil))) = sub_check (lambda1) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
forall (lambda1:lambda), if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true->if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = sub_check (lambda1) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9)
=================================================
Progress: 296


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
---------------------------------------
forall (lambda1:lambda), if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true->if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = sub_check (lambda1) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
---------------------------------------
forall (lambda1:lambda), if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = sub_check (lambda1) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9)
=================================================
Progress: 297


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
---------------------------------------
forall (lambda1:lambda), if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false -> if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = sub_check (lambda1) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
Cond2 : if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false
---------------------------------------
forall (lambda1:lambda), if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = sub_check (lambda1) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case string_eq (string1) (string2)(rank:10)
=================================================
Progress: 298


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = true
Cond2 : if string_eq (string1) (string2) then true else is_mem_ta1 ((Nil)) (string2) = false
---------------------------------------
forall (lambda1:lambda), if string_eq (string1) (string2) then true else mem (string2) ((Nil)) = sub_check (lambda1) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> case string_eq (string1) (string2)(rank : 10)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : true = true
Cond2 : true = false
Case1 : string_eq (string1) (string2) = true
---------------------------------------
forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:9)
=================================================
Progress: 299


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : true = true
Cond2 : true = false
Case1 : string_eq (string1) (string2) = true
---------------------------------------
forall (lambda1:lambda), true = sub_check (lambda1) ((Nil))

3 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 9)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : false = true
Cond2 : false = false
Case1 : string_eq (string1) (string2) = false
---------------------------------------
forall (lambda1:lambda), false = sub_check (lambda1) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:8)
=================================================
Progress: 300


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
Base1 : lambda2 = V (string2)
Cond1 : false = true
Cond2 : false = false
Case1 : string_eq (string1) (string2) = false
---------------------------------------
forall (lambda1:lambda), false = sub_check (lambda1) ((Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : forall (lambda1:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda1) ((Nil))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
forall (lambda1:lambda), sub_check (P (string2) (lambda3)) ((string1::(Nil))) = true->sub_check_ta1 (P (string2) (lambda3)) ((string1::(Nil))) = false -> sub_check (P (string2) (lambda3)) ((string1::(Nil))) = sub_check (lambda1) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 301


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : forall (lambda1:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda1) ((Nil))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
forall (lambda1:lambda), sub_check (P (string2) (lambda3)) ((string1::(Nil))) = true->sub_check_ta1 (P (string2) (lambda3)) ((string1::(Nil))) = false -> sub_check (P (string2) (lambda3)) ((string1::(Nil))) = sub_check (lambda1) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : forall (lambda1:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda1) ((Nil))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
forall (lambda1:lambda), sub_check (lambda3) ((string2::(string1::(Nil)))) = true->sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = sub_check (lambda1) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8)
=================================================
Progress: 302


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : forall (lambda1:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda1) ((Nil))
Inductive1 : lambda2 = P (string2) (lambda3)
---------------------------------------
forall (lambda1:lambda), sub_check (lambda3) ((string2::(string1::(Nil)))) = true->sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = sub_check (lambda1) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : forall (lambda1:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda1) ((Nil))
Inductive1 : lambda2 = P (string2) (lambda3)
Cond1 : sub_check (lambda3) ((string2::(string1::(Nil)))) = true
---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = sub_check (lambda1) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8)
=================================================
Progress: 303


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : forall (lambda1:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda1) ((Nil))
Inductive1 : lambda2 = P (string2) (lambda3)
Cond1 : sub_check (lambda3) ((string2::(string1::(Nil)))) = true
---------------------------------------
forall (lambda1:lambda), sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false -> sub_check (lambda3) ((string2::(string1::(Nil)))) = sub_check (lambda1) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
lambda2 : lambda
string2 : string
lambda3 : lambda
IH1 : forall (lambda1:lambda), sub_check (lambda3) ((string1::(Nil))) = true->sub_check_ta1 (lambda3) ((string1::(Nil))) = false -> sub_check (lambda3) ((string1::(Nil))) = sub_check (lambda1) ((Nil))
Inductive1 : lambda2 = P (string2) (lambda3)
Cond1 : sub_check (lambda3) ((string2::(string1::(Nil)))) = true
Cond2 : sub_check_ta1 (lambda3) ((string2::(string1::(Nil)))) = false
---------------------------------------
forall (lambda1:lambda), sub_check (lambda3) ((string2::(string1::(Nil)))) = sub_check (lambda1) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
induction lambda1(rank:18)
rewrite <- IH1 in goal at 0(rank:18)
rewrite <- lemma8 in goal at 0(rank:24)
rewrite <- lhs_lemma3 in goal at 0(rank:24)
rewrite Cond1 in goal at 0(rank:24)
=================================================
Progress: 304


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lhs_lemma3 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = true->sub_check_ta1 (lambda2) (mk_lhs1 ((Nil)) (string1)) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 305


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lhs_lemma3 in goal at 3(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
string1 : string
---------------------------------------
forall (lambda1:lambda) (lambda2:lambda), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) (mk_lhs1 ((Nil)) (string1)) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- rhs_lemma5 in goal at 0(rank:23)
rewrite <- rhs_lemma5 in goal at 2(rank:23)
=================================================
Progress: 306


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda2) ((string1::(Nil))) = false
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma8 in goal at 0(rank : 15)


1st goal of : forall (lambda1:lambda) (lambda2:lambda) (string1:string), sub_check (lambda2) ((string1::(Nil))) = true->sub_check_ta1 (lambda2) ((string1::(Nil))) = false -> sub_check (lambda2) ((string1::(Nil))) = match (lambda1) with
| V x -> false
| P x e -> sub_check (e) ((x::(Nil)))
| C e1 e2 -> && (sub_check (e1) ((Nil))) (sub_check (e2) ((Nil)))
lambda2 : lambda
string1 : string
Cond1 : sub_check (lambda2) ((string1::(Nil))) = true
Cond2 : sub_check_ta1 (lambda2) ((string1::(Nil))) = false
---------------------------------------
forall (lambda1:lambda), sub_check (lambda2) ((string1::(Nil))) = sub_check (lambda1) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
