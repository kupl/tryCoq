Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:idlist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

---------------------------------------
forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

---------------------------------------
forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

---------------------------------------
forall (idlist1:idlist), if tf5 (idlist1) (idlist1) then spec (repr (target (idlist1))) else ZERO = if tf5 (idlist1) (idlist1) then targetNew (idlist1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction idlist1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

---------------------------------------
forall (idlist1:idlist), if tf5 (idlist1) (idlist1) then spec (repr (target (idlist1))) else ZERO = if tf5 (idlist1) (idlist1) then targetNew (idlist1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> induction idlist1(rank : 4.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
Base1 : idlist1 = Ielt (nat1)
---------------------------------------
if tf5 (Ielt (nat1)) (Ielt (nat1)) then spec (repr (target (Ielt (nat1)))) else ZERO = if tf5 (Ielt (nat1)) (Ielt (nat1)) then targetNew (Ielt (nat1)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
Base1 : idlist1 = Ielt (nat1)
---------------------------------------
if tf5 (Ielt (nat1)) (Ielt (nat1)) then spec (repr (target (Ielt (nat1)))) else ZERO = if tf5 (Ielt (nat1)) (Ielt (nat1)) then targetNew (Ielt (nat1)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
---------------------------------------
if tf5 (Icons (nat1) (nat2) (idlist2)) (Icons (nat1) (nat2) (idlist2)) then spec (repr (target (Icons (nat1) (nat2) (idlist2)))) else ZERO = if tf5 (Icons (nat1) (nat2) (idlist2)) (Icons (nat1) (nat2) (idlist2)) then targetNew (Icons (nat1) (nat2) (idlist2)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
---------------------------------------
if tf5 (Icons (nat1) (nat2) (idlist2)) (Icons (nat1) (nat2) (idlist2)) then spec (repr (target (Icons (nat1) (nat2) (idlist2)))) else ZERO = if tf5 (Icons (nat1) (nat2) (idlist2)) (Icons (nat1) (nat2) (idlist2)) then targetNew (Icons (nat1) (nat2) (idlist2)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
---------------------------------------
if if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false then spec (repr (target (Icons (nat1) (nat2) (idlist2)))) else ZERO = if if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false then targetNew (Icons (nat1) (nat2) (idlist2)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false(rank:4.)
=================================================
Progress: 6


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
---------------------------------------
if if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false then spec (repr (target (Icons (nat1) (nat2) (idlist2)))) else ZERO = if if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false then targetNew (Icons (nat1) (nat2) (idlist2)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> case if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false(rank : 4.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
---------------------------------------
if lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) then plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) else tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2))) = if lq (targetNew (idlist2)) (nat2) then nat2 else targetNew (idlist2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (targetNew (idlist2)) (nat2)(rank:5.)
case lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))))(rank:5.)
=================================================
Progress: 7


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
---------------------------------------
if lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) then plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) else tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2))) = if lq (targetNew (idlist2)) (nat2) then nat2 else targetNew (idlist2)

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (targetNew (idlist2)) (nat2)(rank : 5.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
Case2 : lq (targetNew (idlist2)) (nat2) = true
---------------------------------------
if lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) then plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) else tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2))) = nat2

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))))(rank:6.)
=================================================
Progress: 8


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
---------------------------------------
if lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) then plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) else tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2))) = if lq (targetNew (idlist2)) (nat2) then nat2 else targetNew (idlist2)

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))))(rank : 5.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
Case2 : lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) = true
---------------------------------------
plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) = if lq (targetNew (idlist2)) (nat2) then nat2 else targetNew (idlist2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (targetNew (idlist2)) (nat2)(rank:6.)
=================================================
Progress: 9


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
Case2 : lq (targetNew (idlist2)) (nat2) = true
---------------------------------------
if lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) then plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) else tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2))) = nat2

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))))(rank : 6.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
Case2 : lq (targetNew (idlist2)) (nat2) = true
Case3 : lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) = true
---------------------------------------
plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) = nat2

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false
case lq (targetNew (idlist2)) (nat2)
case lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))))
parent
plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))
lower
plus(_, sum(repr(tf9(idlist2, idlist2))))
upper
_
remove upper
_
validate generalize_common_subterm_goal
Prop: plus (ZERO) (sum (repr (tf9 (Icons (ZERO) (SUCC (ZERO)) (Ielt (ZERO))) (Icons (ZERO) (SUCC (ZERO)) (Ielt (ZERO)))))) = ZERO
Prop: plus (ZERO) (sum (repr (tf9 (Ielt (SUCC (ZERO))) (Ielt (SUCC (ZERO)))))) = SUCC (ZERO)
Prop: plus (ZERO) (sum (repr (tf9 (Icons (ZERO) (ZERO) (Icons (ZERO) (ZERO) (Icons (ZERO) (ZERO) (Ielt (SUCC (ZERO)))))) (Icons (ZERO) (ZERO) (Icons (ZERO) (ZERO) (Icons (ZERO) (ZERO) (Ielt (SUCC (ZERO))))))))) = SUCC (SUCC (SUCC (ZERO)))
Lemma List
forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
End of Lemma List


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
Case2 : lq (targetNew (idlist2)) (nat2) = true
Case3 : lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) = true
---------------------------------------
plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) = nat2

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 10


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
Case2 : lq (targetNew (idlist2)) (nat2) = true
Case3 : lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) = true
---------------------------------------
plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) = nat2

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:5.)
=================================================
Progress: 11


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
---------------------------------------
forall (idlist1:idlist) (nat1:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction idlist1(rank:6.)
=================================================
Progress: 12


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
Case2 : lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) = true
---------------------------------------
plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) = if lq (targetNew (idlist2)) (nat2) then nat2 else targetNew (idlist2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (targetNew (idlist2)) (nat2)(rank : 6.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
Case2 : lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) = true
Case3 : lq (targetNew (idlist2)) (nat2) = true
---------------------------------------
plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) = nat2

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false
case lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))))
case lq (targetNew (idlist2)) (nat2)
parent
plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))
lower
plus(_, sum(repr(tf9(idlist2, idlist2))))
upper
_
remove upper
_
validate generalize_common_subterm_goal
Prop: plus (SUCC (SUCC (ZERO))) (sum (repr (tf9 (Ielt (ZERO)) (Ielt (ZERO))))) = SUCC (ZERO)
Prop: plus (ZERO) (sum (repr (tf9 (Ielt (ZERO)) (Ielt (ZERO))))) = SUCC (ZERO)
Prop: plus (ZERO) (sum (repr (tf9 (Ielt (ZERO)) (Ielt (ZERO))))) = SUCC (ZERO)
Lemma List
forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
End of Lemma List


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
Case2 : lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) = true
Case3 : lq (targetNew (idlist2)) (nat2) = true
---------------------------------------
plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) = nat2

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 13


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if tf5 (idlist2) (idlist2) then spec (repr (target (idlist2))) else ZERO = if tf5 (idlist2) (idlist2) then targetNew (idlist2) else ZERO
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if nat_eq (nat2) (plus (nat1) (sum (repr (idlist2)))) then tf5 (idlist2) (idlist2) else false = true
Case2 : lq (tf7 (repr (tf9 (idlist2) (idlist2))) (repr (tf9 (idlist2) (idlist2)))) (plus (nat1) (sum (repr (tf9 (idlist2) (idlist2))))) = true
Case3 : lq (targetNew (idlist2)) (nat2) = true
---------------------------------------
plus (nat1) (sum (repr (tf9 (idlist2) (idlist2)))) = nat2

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:5.)
=================================================
Progress: 14


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
---------------------------------------
forall (idlist1:idlist) (nat1:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction idlist1(rank:6.)
=================================================
Progress: 15


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
---------------------------------------
forall (idlist1:idlist) (nat1:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2

0 goal(s) more...

1 conjecture(s) more...
>>> induction idlist1(rank : 6.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
---------------------------------------
forall (nat1:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (Ielt (nat3))))) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (targetNew (Ielt (nat3))) (nat2) = true->lq (tf7 (repr (tf9 (Ielt (nat3)) (Ielt (nat3)))) (repr (tf9 (Ielt (nat3)) (Ielt (nat3))))) (plus (nat1) (sum (repr (tf9 (Ielt (nat3)) (Ielt (nat3)))))) = true -> plus (nat1) (sum (repr (tf9 (Ielt (nat3)) (Ielt (nat3))))) = nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 16


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
---------------------------------------
forall (idlist1:idlist) (nat1:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2

0 goal(s) more...

1 conjecture(s) more...
>>> induction idlist1(rank : 6.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
---------------------------------------
forall (nat1:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (Ielt (nat3))))) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (tf7 (repr (tf9 (Ielt (nat3)) (Ielt (nat3)))) (repr (tf9 (Ielt (nat3)) (Ielt (nat3))))) (plus (nat1) (sum (repr (tf9 (Ielt (nat3)) (Ielt (nat3)))))) = true->lq (targetNew (Ielt (nat3))) (nat2) = true -> plus (nat1) (sum (repr (tf9 (Ielt (nat3)) (Ielt (nat3))))) = nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 17


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
---------------------------------------
forall (nat1:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (Ielt (nat3))))) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (targetNew (Ielt (nat3))) (nat2) = true->lq (tf7 (repr (tf9 (Ielt (nat3)) (Ielt (nat3)))) (repr (tf9 (Ielt (nat3)) (Ielt (nat3))))) (plus (nat1) (sum (repr (tf9 (Ielt (nat3)) (Ielt (nat3)))))) = true -> plus (nat1) (sum (repr (tf9 (Ielt (nat3)) (Ielt (nat3))))) = nat2

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
---------------------------------------
forall (nat1:nat), if nat_eq (nat2) (plus (nat1) (nat3)) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (nat3) (nat2) = true->lq (nat3) (plus (nat1) (nat3)) = true -> plus (nat1) (nat3) = nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 18


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
---------------------------------------
forall (nat1:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (Ielt (nat3))))) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (tf7 (repr (tf9 (Ielt (nat3)) (Ielt (nat3)))) (repr (tf9 (Ielt (nat3)) (Ielt (nat3))))) (plus (nat1) (sum (repr (tf9 (Ielt (nat3)) (Ielt (nat3)))))) = true->lq (targetNew (Ielt (nat3))) (nat2) = true -> plus (nat1) (sum (repr (tf9 (Ielt (nat3)) (Ielt (nat3))))) = nat2

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
---------------------------------------
forall (nat1:nat), if nat_eq (nat2) (plus (nat1) (nat3)) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (nat3) (plus (nat1) (nat3)) = true->lq (nat3) (nat2) = true -> plus (nat1) (nat3) = nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 19


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
---------------------------------------
forall (nat1:nat), if nat_eq (nat2) (plus (nat1) (nat3)) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (nat3) (nat2) = true->lq (nat3) (plus (nat1) (nat3)) = true -> plus (nat1) (nat3) = nat2

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
if nat_eq (nat2) (plus (ZERO) (nat3)) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (nat3) (nat2) = true->lq (nat3) (plus (ZERO) (nat3)) = true -> plus (ZERO) (nat3) = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 20


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
---------------------------------------
forall (nat1:nat), if nat_eq (nat2) (plus (nat1) (nat3)) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (nat3) (plus (nat1) (nat3)) = true->lq (nat3) (nat2) = true -> plus (nat1) (nat3) = nat2

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
if nat_eq (nat2) (plus (ZERO) (nat3)) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (nat3) (plus (ZERO) (nat3)) = true->lq (nat3) (nat2) = true -> plus (ZERO) (nat3) = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 21


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
if nat_eq (nat2) (plus (ZERO) (nat3)) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (nat3) (nat2) = true->lq (nat3) (plus (ZERO) (nat3)) = true -> plus (ZERO) (nat3) = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (nat3) (nat2) = true->lq (nat3) (nat3) = true -> nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 22


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
if nat_eq (nat2) (plus (ZERO) (nat3)) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (nat3) (plus (ZERO) (nat3)) = true->lq (nat3) (nat2) = true -> plus (ZERO) (nat3) = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (nat3) (nat3) = true->lq (nat3) (nat2) = true -> nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 23


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (nat3) (nat2) = true->lq (nat3) (nat3) = true -> nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
---------------------------------------
lq (nat3) (nat2) = true->lq (nat3) (nat3) = true -> nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 24


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true->lq (nat3) (nat3) = true->lq (nat3) (nat2) = true -> nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
---------------------------------------
lq (nat3) (nat3) = true->lq (nat3) (nat2) = true -> nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 25


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
---------------------------------------
lq (nat3) (nat2) = true->lq (nat3) (nat3) = true -> nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
Cond2 : lq (nat3) (nat2) = true
---------------------------------------
lq (nat3) (nat3) = true -> nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 26


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
---------------------------------------
lq (nat3) (nat3) = true->lq (nat3) (nat2) = true -> nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
Cond2 : lq (nat3) (nat3) = true
---------------------------------------
lq (nat3) (nat2) = true -> nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 27


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
Cond2 : lq (nat3) (nat2) = true
---------------------------------------
lq (nat3) (nat3) = true -> nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
Cond2 : lq (nat3) (nat2) = true
Cond3 : lq (nat3) (nat3) = true
---------------------------------------
nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
End of Lemma List


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
Cond2 : lq (nat3) (nat2) = true
Cond3 : lq (nat3) (nat3) = true
---------------------------------------
nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 28


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (targetNew (idlist1)) (nat2) = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
Cond2 : lq (nat3) (nat2) = true
Cond3 : lq (nat3) (nat3) = true
---------------------------------------
nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 29


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
Cond2 : lq (nat3) (nat3) = true
---------------------------------------
lq (nat3) (nat2) = true -> nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
Cond2 : lq (nat3) (nat3) = true
Cond3 : lq (nat3) (nat2) = true
---------------------------------------
nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
End of Lemma List


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
Cond2 : lq (nat3) (nat3) = true
Cond3 : lq (nat3) (nat2) = true
---------------------------------------
nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 30


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat), if nat_eq (nat2) (plus (nat1) (sum (repr (idlist1)))) then tf5 (idlist1) (idlist1) else false = true->lq (tf7 (repr (tf9 (idlist1) (idlist1))) (repr (tf9 (idlist1) (idlist1)))) (plus (nat1) (sum (repr (tf9 (idlist1) (idlist1))))) = true->lq (targetNew (idlist1)) (nat2) = true -> plus (nat1) (sum (repr (tf9 (idlist1) (idlist1)))) = nat2
nat2 : nat
idlist1 : idlist
nat3 : nat
Base1 : idlist1 = Ielt (nat3)
nat1 : nat
Base2 : nat1 = ZERO
Cond1 : if nat_eq (nat2) (nat3) then tf5 (Ielt (nat3)) (Ielt (nat3)) else false = true
Cond2 : lq (nat3) (nat3) = true
Cond3 : lq (nat3) (nat2) = true
---------------------------------------
nat3 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 31


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 32


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 33


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 34


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 35


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
---------------------------------------
lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 36


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
---------------------------------------
lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 37


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
---------------------------------------
lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat1) = true
---------------------------------------
lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 38


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
---------------------------------------
lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat2) = true
---------------------------------------
lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 39


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat1) = true
---------------------------------------
lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat1) = true
Cond3 : lq (nat2) (nat2) = true
---------------------------------------
nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = ZERO
Prop: SUCC (SUCC (ZERO)) = SUCC (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat1) = true
Cond3 : lq (nat2) (nat2) = true
---------------------------------------
nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 40


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat1) = true
Cond3 : lq (nat2) (nat2) = true
---------------------------------------
nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 41


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat2) = true
---------------------------------------
lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat2) = true
Cond3 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (SUCC (ZERO))
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat2) = true
Cond3 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 42


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat2) = true
Cond3 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 43


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat2(rank:9.)
=================================================
Progress: 44


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat2(rank:9.)
=================================================
Progress: 45


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 46


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 47


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
---------------------------------------
lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 48


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
---------------------------------------
lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 49


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
---------------------------------------
lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat1) = true
---------------------------------------
lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:9.)
=================================================
Progress: 50


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
---------------------------------------
lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat2) = true
---------------------------------------
lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:9.)
=================================================
Progress: 51


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat1) = true
---------------------------------------
lq (nat2) (nat2) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat1) = true->lq (nat2) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat1) = true
Cond3 : lq (nat2) (nat2) = true
---------------------------------------
nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (SUCC (ZERO))
Prop: ZERO = ZERO
=================================================
Progress: 52


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat2) = true
---------------------------------------
lq (nat2) (nat1) = true -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true->lq (nat2) (nat2) = true->lq (nat2) (nat1) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : if nat_eq (nat1) (nat2) then tf5 (Ielt (nat2)) (Ielt (nat2)) else false = true
Cond2 : lq (nat2) (nat2) = true
Cond3 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (SUCC (SUCC (SUCC (ZERO)))) = ZERO
Prop: SUCC (SUCC (SUCC (SUCC (ZERO)))) = ZERO
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
