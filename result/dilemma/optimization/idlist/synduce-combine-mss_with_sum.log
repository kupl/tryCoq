Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:idlist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

---------------------------------------
forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

---------------------------------------
forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

---------------------------------------
forall (idlist1:idlist), match (tf3 (repr (idlist1))) with
| Tuple3 _ _ c -> c = match (reprNew (idlist1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:3.)
=================================================
Progress: 3


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

---------------------------------------
forall (idlist1:idlist), match (tf3 (repr (idlist1))) with
| Tuple3 _ _ c -> c = match (reprNew (idlist1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> intro idlist1(rank : 3.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
---------------------------------------
match (tf3 (repr (idlist1))) with
| Tuple3 _ _ c -> c = match (reprNew (idlist1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case reprNew (idlist1)(rank:3.)
case tf3 (repr (idlist1))(rank:3.)
=================================================
Progress: 4


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
---------------------------------------
match (tf3 (repr (idlist1))) with
| Tuple3 _ _ c -> c = match (reprNew (idlist1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> case reprNew (idlist1)(rank : 3.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
Case1 : reprNew (idlist1) = Tuple2 (nat1) (nat2)
---------------------------------------
match (tf3 (repr (idlist1))) with
| Tuple3 _ _ c -> c = nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: match (tf3 (repr (Ielt (ZERO)))) with
| Tuple3 _ _ c -> c = SUCC (ZERO)
Prop: match (tf3 (repr (Ielt (ZERO)))) with
| Tuple3 _ _ c -> c = SUCC (ZERO)
Prop: match (tf3 (repr (Icons (SUCC (ZERO)) (ZERO) (Ielt (ZERO))))) with
| Tuple3 _ _ c -> c = SUCC (ZERO)
asdf
=================================================
Progress: 5


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
---------------------------------------
match (tf3 (repr (idlist1))) with
| Tuple3 _ _ c -> c = match (reprNew (idlist1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> case tf3 (repr (idlist1))(rank : 3.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
Case1 : tf3 (repr (idlist1)) = Tuple3 (nat1) (nat2) (nat3)
---------------------------------------
nat3 = match (reprNew (idlist1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = match (reprNew (Ielt (ZERO))) with
| Tuple2 a _ -> a
Prop: SUCC (ZERO) = match (reprNew (Ielt (ZERO))) with
| Tuple2 a _ -> a
Prop: SUCC (SUCC (ZERO)) = match (reprNew (Ielt (ZERO))) with
| Tuple2 a _ -> a
asdf
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
