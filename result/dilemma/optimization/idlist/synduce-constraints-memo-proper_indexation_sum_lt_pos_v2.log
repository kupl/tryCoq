Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:idlist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

---------------------------------------
forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

---------------------------------------
forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

---------------------------------------
forall (idlist1:idlist), if isindexed (idlist1) then spec (repr (target (idlist1) (idlist1))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist1) then Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction idlist1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)

---------------------------------------
forall (idlist1:idlist), if isindexed (idlist1) then spec (repr (target (idlist1) (idlist1))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist1) then Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)

0 goal(s) more...

0 conjecture(s) more...
>>> induction idlist1(rank : 4.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
Base1 : idlist1 = Inil
---------------------------------------
if isindexed (Inil) then spec (repr (target (Inil) (Inil))) else Tuple2 (ZERO) (ZERO) = if isindexed (Inil) then Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (match (targetNew (Inil)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
Base1 : idlist1 = Inil
---------------------------------------
if isindexed (Inil) then spec (repr (target (Inil) (Inil))) else Tuple2 (ZERO) (ZERO) = if isindexed (Inil) then Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (match (targetNew (Inil)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
---------------------------------------
if isindexed (Icons (nat1) (nat2) (idlist2)) then spec (repr (target (Icons (nat1) (nat2) (idlist2)) (Icons (nat1) (nat2) (idlist2)))) else Tuple2 (ZERO) (ZERO) = if isindexed (Icons (nat1) (nat2) (idlist2)) then Tuple2 (match (targetNew (Icons (nat1) (nat2) (idlist2))) with
| Tuple2 a _ -> a) (match (targetNew (Icons (nat1) (nat2) (idlist2))) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
---------------------------------------
if isindexed (Icons (nat1) (nat2) (idlist2)) then spec (repr (target (Icons (nat1) (nat2) (idlist2)) (Icons (nat1) (nat2) (idlist2)))) else Tuple2 (ZERO) (ZERO) = if isindexed (Icons (nat1) (nat2) (idlist2)) then Tuple2 (match (targetNew (Icons (nat1) (nat2) (idlist2))) with
| Tuple2 a _ -> a) (match (targetNew (Icons (nat1) (nat2) (idlist2))) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
---------------------------------------
if if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false then spec (repr (target (Icons (nat1) (nat2) (idlist2)) (Icons (nat1) (nat2) (idlist2)))) else Tuple2 (ZERO) (ZERO) = if if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false then Tuple2 (match (targetNew (Icons (nat1) (nat2) (idlist2))) with
| Tuple2 a _ -> a) (match (targetNew (Icons (nat1) (nat2) (idlist2))) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false(rank:4.)
=================================================
Progress: 6


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
---------------------------------------
if if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false then spec (repr (target (Icons (nat1) (nat2) (idlist2)) (Icons (nat1) (nat2) (idlist2)))) else Tuple2 (ZERO) (ZERO) = if if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false then Tuple2 (match (targetNew (Icons (nat1) (nat2) (idlist2))) with
| Tuple2 a _ -> a) (match (targetNew (Icons (nat1) (nat2) (idlist2))) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)

0 goal(s) more...

0 conjecture(s) more...
>>> case if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false(rank : 4.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
---------------------------------------
Tuple2 (if gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) then max (plus (fst3 (spec (repr (target (idlist2) (idlist2))))) (nat1)) else fst3 (spec (repr (target (idlist2) (idlist2))))) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (if leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) then fst3 (targetNew (idlist2)) else plus (fst3 (targetNew (idlist2))) (nat1)) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b)(rank:5.)
case leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b)(rank:5.)
=================================================
Progress: 7


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
---------------------------------------
Tuple2 (if gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) then max (plus (fst3 (spec (repr (target (idlist2) (idlist2))))) (nat1)) else fst3 (spec (repr (target (idlist2) (idlist2))))) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (if leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) then fst3 (targetNew (idlist2)) else plus (fst3 (targetNew (idlist2))) (nat1)) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
Tuple2 (if gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) then plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1) else ZERO) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (if leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) then fst3 (targetNew (idlist2)) else plus (fst3 (targetNew (idlist2))) (nat1)) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO)(rank:6.)
case leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b)(rank:6.)
=================================================
Progress: 8


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
---------------------------------------
Tuple2 (if gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) then max (plus (fst3 (spec (repr (target (idlist2) (idlist2))))) (nat1)) else fst3 (spec (repr (target (idlist2) (idlist2))))) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (if leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) then fst3 (targetNew (idlist2)) else plus (fst3 (targetNew (idlist2))) (nat1)) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

1 goal(s) more...

0 conjecture(s) more...
>>> case leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
Tuple2 (if gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) then max (plus (fst3 (spec (repr (target (idlist2) (idlist2))))) (nat1)) else fst3 (spec (repr (target (idlist2) (idlist2))))) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b)(rank:6.)
=================================================
Progress: 9


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
Tuple2 (if gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) then plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1) else ZERO) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (if leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) then fst3 (targetNew (idlist2)) else plus (fst3 (targetNew (idlist2))) (nat1)) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

2 goal(s) more...

0 conjecture(s) more...
>>> case gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO)(rank : 6.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (if leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) then fst3 (targetNew (idlist2)) else plus (fst3 (targetNew (idlist2))) (nat1)) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b)(rank:7.)
=================================================
Progress: 10


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
Tuple2 (if gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) then plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1) else ZERO) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (if leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) then fst3 (targetNew (idlist2)) else plus (fst3 (targetNew (idlist2))) (nat1)) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

2 goal(s) more...

0 conjecture(s) more...
>>> case leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b)(rank : 6.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
Tuple2 (if gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) then plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1) else ZERO) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO)(rank:7.)
=================================================
Progress: 11


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
Tuple2 (if gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) then max (plus (fst3 (spec (repr (target (idlist2) (idlist2))))) (nat1)) else fst3 (spec (repr (target (idlist2) (idlist2))))) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

2 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b)(rank : 6.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case3 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
Tuple2 (if gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) then plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1) else ZERO) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO)(rank:7.)
=================================================
Progress: 12


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (if leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) then fst3 (targetNew (idlist2)) else plus (fst3 (targetNew (idlist2))) (nat1)) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

3 goal(s) more...

0 conjecture(s) more...
>>> case leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b)(rank : 7.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Case4 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case spec (repr (target (idlist2) (idlist2)))(rank:7.)
case targetNew (idlist2)(rank:7.)
=================================================
Progress: 13


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
Tuple2 (if gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) then plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1) else ZERO) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

3 goal(s) more...

0 conjecture(s) more...
>>> case gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO)(rank : 7.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case4 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case spec (repr (target (idlist2) (idlist2)))(rank:7.)
case targetNew (idlist2)(rank:7.)
=================================================
Progress: 14


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case3 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
Tuple2 (if gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) then plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1) else ZERO) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

3 goal(s) more...

0 conjecture(s) more...
>>> case gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO)(rank : 7.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case3 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case4 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case spec (repr (target (idlist2) (idlist2)))(rank:7.)
case targetNew (idlist2)(rank:7.)
=================================================
Progress: 15


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Case4 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
>>> case spec (repr (target (idlist2) (idlist2)))(rank : 7.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then Tuple2 (nat3) (nat4) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (nat4) = true
Case3 : gq (plus (nat3) (nat1)) (ZERO) = true
Case4 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case5 : spec (repr (target (idlist2) (idlist2))) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (nat3) (nat1)) (plus (nat4) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false
case gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b)
case gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO)
case leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b)
case spec (repr (target (idlist2) (idlist2)))
parent
plus (nat3) (nat1)
lower
plus(nat3, _)
upper
Tuple2(_, plus(nat4, SUCC(ZERO())))
remove upper
plus(nat3, nat1)
remove lower
plus(nat3, nat1)
remove upper
plus(nat3, nat1)
remove lower
plus(nat3, nat1)
remove upper
plus(nat3, nat1)
remove lower
plus(nat3, nat1)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO))) = Tuple2 (match (targetNew (Icons (ZERO) (ZERO) (Icons (SUCC (ZERO)) (ZERO) (Inil)))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (ZERO) (ZERO) (Icons (SUCC (ZERO)) (ZERO) (Inil)))) with
| Tuple2 _ b -> b))
Lemma List
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then Tuple2 (nat3) (nat4) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (nat4) = true
Case3 : gq (plus (nat3) (nat1)) (ZERO) = true
Case4 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case5 : spec (repr (target (idlist2) (idlist2))) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (nat3) (nat1)) (plus (nat4) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 16


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then Tuple2 (nat3) (nat4) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (nat4) = true
Case3 : gq (plus (nat3) (nat1)) (ZERO) = true
Case4 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case5 : spec (repr (target (idlist2) (idlist2))) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (nat3) (nat1)) (plus (nat4) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:5.)
=================================================
Progress: 17


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> intro idlist1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 18


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 19


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), gq (nat1) (nat3) = true->gq (plus (ZERO) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (nat3) -> Tuple2 (plus (ZERO) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 20


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), gq (nat1) (nat3) = true->gq (plus (ZERO) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (nat3) -> Tuple2 (plus (ZERO) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), gq (nat1) (nat3) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (nat3) -> Tuple2 (nat1) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat3(rank:7.)
=================================================
Progress: 21


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Case4 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (idlist2)(rank : 7.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (Tuple2 (nat3) (nat4)) with
| Tuple2 a _ -> a) (match (Tuple2 (nat3) (nat4)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Case4 : leq (nat1) (nat4) = true
Case5 : targetNew (idlist2) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat3) (SUCC (nat4))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false
case gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b)
case gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO)
case leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b)
case targetNew (idlist2)
parent
plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)
lower
plus(_, _)
upper
Tuple2(_, plus(_, SUCC(ZERO())))
remove upper
plus(_, nat1)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO))))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO)))) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (ZERO))
Lemma List
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
End of Lemma List


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (Tuple2 (nat3) (nat4)) with
| Tuple2 a _ -> a) (match (Tuple2 (nat3) (nat4)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Case4 : leq (nat1) (nat4) = true
Case5 : targetNew (idlist2) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat3) (SUCC (nat4))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 22


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (Tuple2 (nat3) (nat4)) with
| Tuple2 a _ -> a) (match (Tuple2 (nat3) (nat4)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Case4 : leq (nat1) (nat4) = true
Case5 : targetNew (idlist2) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat3) (SUCC (nat4))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:5.)
=================================================
Progress: 23


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro idlist1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 24


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:5.)
=================================================
Progress: 25


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat3(rank:5.)
=================================================
Progress: 26


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat3(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 27


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 28


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:5.)
=================================================
Progress: 29


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond3 : leq (nat1) (nat3) = true
---------------------------------------
targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:5.)
=================================================
Progress: 30


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond3 : leq (nat1) (nat3) = true
---------------------------------------
targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond3 : leq (nat1) (nat3) = true
Cond4 : targetNew (idlist1) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (match (spec (repr (target (Icons (SUCC (ZERO)) (ZERO) (Inil)) (Icons (SUCC (ZERO)) (ZERO) (Inil))))) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (plus (match (spec (repr (target (Icons (SUCC (ZERO)) (ZERO) (Inil)) (Icons (SUCC (ZERO)) (ZERO) (Inil))))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO))))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
Prop: Tuple2 (plus (match (spec (repr (target (Icons (ZERO) (ZERO) (Icons (ZERO) (ZERO) (Icons (ZERO) (SUCC (ZERO)) (Inil)))) (Icons (ZERO) (ZERO) (Icons (ZERO) (ZERO) (Icons (ZERO) (SUCC (ZERO)) (Inil))))))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Icons (ZERO) (ZERO) (Icons (ZERO) (ZERO) (Icons (ZERO) (SUCC (ZERO)) (Inil)))) (Icons (ZERO) (ZERO) (Icons (ZERO) (ZERO) (Icons (ZERO) (SUCC (ZERO)) (Inil))))))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (SUCC (SUCC (ZERO))) (SUCC (ZERO))
Lemma List
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
End of Lemma List


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond3 : leq (nat1) (nat3) = true
Cond4 : targetNew (idlist1) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 31


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond3 : leq (nat1) (nat3) = true
Cond4 : targetNew (idlist1) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:7.)
=================================================
Progress: 32


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case4 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
>>> case spec (repr (target (idlist2) (idlist2)))(rank : 7.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then Tuple2 (nat3) (nat4) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (nat4) = true
Case3 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case4 : gq (plus (nat3) (nat1)) (ZERO) = true
Case5 : spec (repr (target (idlist2) (idlist2))) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (nat3) (nat1)) (plus (nat4) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false
case gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b)
case leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b)
case gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO)
case spec (repr (target (idlist2) (idlist2)))
parent
plus (nat3) (nat1)
lower
plus(nat3, _)
upper
Tuple2(_, plus(nat4, SUCC(ZERO())))
remove upper
plus(nat3, nat1)
remove lower
plus(nat3, nat1)
remove upper
plus(nat3, nat1)
remove lower
plus(nat3, nat1)
remove upper
plus(nat3, nat1)
remove lower
plus(nat3, nat1)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (plus (SUCC (ZERO)) (SUCC (ZERO))) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO))) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Lemma List
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then Tuple2 (nat3) (nat4) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (nat4) = true
Case3 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case4 : gq (plus (nat3) (nat1)) (ZERO) = true
Case5 : spec (repr (target (idlist2) (idlist2))) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (nat3) (nat1)) (plus (nat4) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 33


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then Tuple2 (nat3) (nat4) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (nat4) = true
Case3 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case4 : gq (plus (nat3) (nat1)) (ZERO) = true
Case5 : spec (repr (target (idlist2) (idlist2))) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (nat3) (nat1)) (plus (nat4) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:5.)
=================================================
Progress: 34


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> intro idlist1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 35


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 36


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (ZERO) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (nat3) -> Tuple2 (plus (ZERO) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 37


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (ZERO) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (nat3) -> Tuple2 (plus (ZERO) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (nat3) -> Tuple2 (nat1) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat3(rank:7.)
=================================================
Progress: 38


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case4 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (idlist2)(rank : 7.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (Tuple2 (nat3) (nat4)) with
| Tuple2 a _ -> a) (match (Tuple2 (nat3) (nat4)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : leq (nat1) (nat4) = true
Case4 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Case5 : targetNew (idlist2) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat3) (SUCC (nat4))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false
case gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b)
case leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b)
case gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO)
case targetNew (idlist2)
parent
plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)
lower
plus(_, _)
upper
Tuple2(_, plus(_, SUCC(ZERO())))
remove upper
plus(_, nat1)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (SUCC (ZERO)))
Prop: Tuple2 (plus (match (spec (repr (target (Icons (SUCC (ZERO)) (ZERO) (Icons (ZERO) (SUCC (ZERO)) (Inil))) (Icons (SUCC (ZERO)) (ZERO) (Icons (ZERO) (SUCC (ZERO)) (Inil)))))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Icons (SUCC (ZERO)) (ZERO) (Icons (ZERO) (SUCC (ZERO)) (Inil))) (Icons (SUCC (ZERO)) (ZERO) (Icons (ZERO) (SUCC (ZERO)) (Inil)))))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (ZERO))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (SUCC (ZERO))
Lemma List
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
End of Lemma List


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (Tuple2 (nat3) (nat4)) with
| Tuple2 a _ -> a) (match (Tuple2 (nat3) (nat4)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : leq (nat1) (nat4) = true
Case4 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Case5 : targetNew (idlist2) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat3) (SUCC (nat4))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 39


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (Tuple2 (nat3) (nat4)) with
| Tuple2 a _ -> a) (match (Tuple2 (nat3) (nat4)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case3 : leq (nat1) (nat4) = true
Case4 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Case5 : targetNew (idlist2) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat3) (SUCC (nat4))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:5.)
=================================================
Progress: 40


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro idlist1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 41


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:5.)
=================================================
Progress: 42


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat3(rank:5.)
=================================================
Progress: 43


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat3(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 44


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 45


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : leq (nat1) (nat3) = true
---------------------------------------
gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:5.)
=================================================
Progress: 46


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : leq (nat1) (nat3) = true
---------------------------------------
gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : leq (nat1) (nat3) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:5.)
=================================================
Progress: 47


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : leq (nat1) (nat3) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : leq (nat1) (nat3) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond4 : targetNew (idlist1) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (SUCC (ZERO)))
Prop: Tuple2 (plus (match (spec (repr (target (Icons (ZERO) (SUCC (ZERO)) (Inil)) (Icons (ZERO) (SUCC (ZERO)) (Inil))))) with
| Tuple2 a _ -> a) (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (plus (match (spec (repr (target (Icons (ZERO) (SUCC (ZERO)) (Inil)) (Icons (ZERO) (SUCC (ZERO)) (Inil))))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (ZERO))
Lemma List
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
End of Lemma List


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : leq (nat1) (nat3) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond4 : targetNew (idlist1) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 48


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : leq (nat1) (nat3) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond4 : targetNew (idlist1) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:7.)
=================================================
Progress: 49


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case3 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case4 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
>>> case spec (repr (target (idlist2) (idlist2)))(rank : 7.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then Tuple2 (nat3) (nat4) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case3 : gq (nat1) (nat4) = true
Case4 : gq (plus (nat3) (nat1)) (ZERO) = true
Case5 : spec (repr (target (idlist2) (idlist2))) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (nat3) (nat1)) (plus (nat4) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false
case leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b)
case gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b)
case gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO)
case spec (repr (target (idlist2) (idlist2)))
parent
plus (nat3) (nat1)
lower
plus(nat3, _)
upper
Tuple2(_, plus(nat4, SUCC(ZERO())))
remove upper
plus(nat3, nat1)
remove lower
plus(nat3, nat1)
remove upper
plus(nat3, nat1)
remove lower
plus(nat3, nat1)
remove upper
plus(nat3, nat1)
remove lower
plus(nat3, nat1)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (match (targetNew (Icons (SUCC (SUCC (SUCC (ZERO)))) (ZERO) (Inil))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (SUCC (SUCC (SUCC (ZERO)))) (ZERO) (Inil))) with
| Tuple2 _ b -> b))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (plus (ZERO) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Lemma List
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then Tuple2 (nat3) (nat4) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case3 : gq (nat1) (nat4) = true
Case4 : gq (plus (nat3) (nat1)) (ZERO) = true
Case5 : spec (repr (target (idlist2) (idlist2))) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (nat3) (nat1)) (plus (nat4) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 50


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then Tuple2 (nat3) (nat4) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case3 : gq (nat1) (nat4) = true
Case4 : gq (plus (nat3) (nat1)) (ZERO) = true
Case5 : spec (repr (target (idlist2) (idlist2))) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (nat3) (nat1)) (plus (nat4) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:5.)
=================================================
Progress: 51


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> intro idlist1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 52


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 53


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (ZERO) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (nat3) -> Tuple2 (plus (ZERO) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 54


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (ZERO) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (nat3) -> Tuple2 (plus (ZERO) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (nat3) -> Tuple2 (nat1) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat3(rank:7.)
=================================================
Progress: 55


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b) = true
Case3 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case4 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist2)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist2)) with
| Tuple2 _ b -> b))

4 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (idlist2)(rank : 7.)


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (Tuple2 (nat3) (nat4)) with
| Tuple2 a _ -> a) (match (Tuple2 (nat3) (nat4)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (nat4) = true
Case3 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case4 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Case5 : targetNew (idlist2) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat3) (SUCC (nat4))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false
case leq (nat1) (match (targetNew (idlist2)) with
| Tuple2 _ b -> b)
case gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b)
case gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO)
case targetNew (idlist2)
parent
plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)
lower
plus(_, _)
upper
Tuple2(_, plus(_, SUCC(ZERO())))
remove upper
plus(_, nat1)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (match (spec (repr (target (Icons (ZERO) (ZERO) (Icons (ZERO) (ZERO) (Inil))) (Icons (ZERO) (ZERO) (Icons (ZERO) (ZERO) (Inil)))))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Icons (ZERO) (ZERO) (Icons (ZERO) (ZERO) (Inil))) (Icons (ZERO) (ZERO) (Icons (ZERO) (ZERO) (Inil)))))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (ZERO))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (ZERO))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (SUCC (ZERO)) (SUCC (ZERO))
Lemma List
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
End of Lemma List


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (Tuple2 (nat3) (nat4)) with
| Tuple2 a _ -> a) (match (Tuple2 (nat3) (nat4)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (nat4) = true
Case3 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case4 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Case5 : targetNew (idlist2) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat3) (SUCC (nat4))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 56


1st goal of : forall (idlist1:idlist), main (idlist1) = mainNew (idlist1)
idlist1 : idlist
nat1 : nat
nat2 : nat
idlist2 : idlist
IH1 : if isindexed (idlist2) then spec (repr (target (idlist2) (idlist2))) else Tuple2 (ZERO) (ZERO) = if isindexed (idlist2) then Tuple2 (match (Tuple2 (nat3) (nat4)) with
| Tuple2 a _ -> a) (match (Tuple2 (nat3) (nat4)) with
| Tuple2 _ b -> b) else Tuple2 (ZERO) (ZERO)
Inductive1 : idlist1 = Icons (nat1) (nat2) (idlist2)
Case1 : if isindexed (idlist2) then nat_eq (nat2) (length (idlist2)) else false = true
Case2 : leq (nat1) (nat4) = true
Case3 : gq (nat1) (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) = true
Case4 : gq (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Case5 : targetNew (idlist2) = Tuple2 (nat3) (nat4)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist2) (idlist2)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat3) (SUCC (nat4))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:5.)
=================================================
Progress: 57


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro idlist1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 58


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:5.)
=================================================
Progress: 59


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat3(rank:5.)
=================================================
Progress: 60


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat3(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 61


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
---------------------------------------
gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 62


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
---------------------------------------
gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
Cond2 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:5.)
=================================================
Progress: 63


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
Cond2 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
Cond2 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:5.)
=================================================
Progress: 64


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
Cond2 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 5.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
Cond2 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond4 : targetNew (idlist1) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (SUCC (SUCC (ZERO))))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (SUCC (ZERO)))
Prop: Tuple2 (plus (match (spec (repr (target (Icons (ZERO) (SUCC (SUCC (ZERO))) (Icons (SUCC (ZERO)) (SUCC (ZERO)) (Icons (SUCC (ZERO)) (ZERO) (Inil)))) (Icons (ZERO) (SUCC (SUCC (ZERO))) (Icons (SUCC (ZERO)) (SUCC (ZERO)) (Icons (SUCC (ZERO)) (ZERO) (Inil))))))) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (plus (match (spec (repr (target (Icons (ZERO) (SUCC (SUCC (ZERO))) (Icons (SUCC (ZERO)) (SUCC (ZERO)) (Icons (SUCC (ZERO)) (ZERO) (Inil)))) (Icons (ZERO) (SUCC (SUCC (ZERO))) (Icons (SUCC (ZERO)) (SUCC (ZERO)) (Icons (SUCC (ZERO)) (ZERO) (Inil))))))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (SUCC (ZERO)))
Lemma List
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
End of Lemma List


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
Cond2 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond4 : targetNew (idlist1) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 65


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
Cond2 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond4 : targetNew (idlist1) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:7.)
=================================================
Progress: 66


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), gq (nat1) (nat3) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (nat3) -> Tuple2 (nat1) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 67


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro idlist1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 68


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (nat3) -> Tuple2 (nat1) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 69


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro idlist1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 70


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (nat3) -> Tuple2 (nat1) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 71


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

---------------------------------------
forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro idlist1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 72


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 73


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 74


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 75


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 76


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 77


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 78


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 79


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat3(rank:7.)
=================================================
Progress: 80


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 81


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat3(rank:7.)
=================================================
Progress: 82


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 83


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat3(rank:7.)
=================================================
Progress: 84


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 85


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 86


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 87


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 88


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
---------------------------------------
gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 89


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 90


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:7.)
=================================================
Progress: 91


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 92


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:7.)
=================================================
Progress: 93


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 94


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
---------------------------------------
gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:7.)
=================================================
Progress: 95


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
---------------------------------------
gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 96


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
intro Cond4
validate generalize_common_subterm_goal
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Icons (ZERO) (ZERO) (Inil))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (ZERO) (ZERO) (Inil))) with
| Tuple2 _ b -> b))
Prop: Tuple2 (SUCC (ZERO)) (SUCC (ZERO)) = Tuple2 (match (targetNew (Icons (ZERO) (ZERO) (Inil))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (ZERO) (ZERO) (Inil))) with
| Tuple2 _ b -> b))
Lemma List
forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 97


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:7.)
=================================================
Progress: 98


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 99


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
intro Cond4
validate generalize_common_subterm_goal
Prop: Tuple2 (SUCC (ZERO)) (SUCC (ZERO)) = Tuple2 (match (targetNew (Icons (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))) (Inil))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))) (Inil))) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Icons (SUCC (ZERO)) (ZERO) (Inil))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (SUCC (ZERO)) (ZERO) (Inil))) with
| Tuple2 _ b -> b))
Lemma List
forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 100


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (nat3) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:7.)
=================================================
Progress: 101


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : leq (nat1) (nat3) = true
---------------------------------------
gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 102


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond4(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
intro Cond4
validate generalize_common_subterm_goal
Prop: Tuple2 (SUCC (ZERO)) (SUCC (ZERO)) = Tuple2 (match (targetNew (Icons (SUCC (ZERO)) (ZERO) (Inil))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (SUCC (ZERO)) (ZERO) (Inil))) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Icons (ZERO) (ZERO) (Inil))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (ZERO) (ZERO) (Inil))) with
| Tuple2 _ b -> b))
Lemma List
forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 103


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (nat3) = true->gq (plus (nat2) (nat1)) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (nat2) (nat1)) (plus (nat3) (SUCC (ZERO))) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat3 : nat
Base2 : nat3 = ZERO
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:7.)
=================================================
Progress: 104


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
---------------------------------------
gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
Cond2 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 105


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro idlist1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 106


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond3 : leq (nat1) (nat3) = true
---------------------------------------
targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:7.)
=================================================
Progress: 107


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro idlist1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 108


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : leq (nat1) (nat3) = true
---------------------------------------
gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : leq (nat1) (nat3) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:7.)
=================================================
Progress: 109


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro idlist1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 110


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
Cond2 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
Cond2 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:7.)
=================================================
Progress: 111


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 112


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond3 : leq (nat1) (nat3) = true
---------------------------------------
targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond4(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->leq (nat1) (nat3) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond3 : leq (nat1) (nat3) = true
Cond4 : targetNew (idlist1) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (ZERO))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
Prop: Tuple2 (plus (match (spec (repr (target (Icons (ZERO) (SUCC (ZERO)) (Inil)) (Icons (ZERO) (SUCC (ZERO)) (Inil))))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO)))) (plus (match (spec (repr (target (Icons (ZERO) (SUCC (ZERO)) (Inil)) (Icons (ZERO) (SUCC (ZERO)) (Inil))))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (SUCC (ZERO)))
=================================================
Progress: 113


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 114


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : leq (nat1) (nat3) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond4(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->leq (nat1) (nat3) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond2 : leq (nat1) (nat3) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond4 : targetNew (idlist1) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (match (spec (repr (target (Icons (ZERO) (ZERO) (Icons (ZERO) (SUCC (ZERO)) (Icons (ZERO) (ZERO) (Inil)))) (Icons (ZERO) (ZERO) (Icons (ZERO) (SUCC (ZERO)) (Icons (ZERO) (ZERO) (Inil))))))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Icons (ZERO) (ZERO) (Icons (ZERO) (SUCC (ZERO)) (Icons (ZERO) (ZERO) (Inil)))) (Icons (ZERO) (ZERO) (Icons (ZERO) (SUCC (ZERO)) (Icons (ZERO) (ZERO) (Inil))))))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (ZERO))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (SUCC (SUCC (ZERO))))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (SUCC (SUCC (SUCC (ZERO))))) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (SUCC (ZERO)) (SUCC (ZERO))
=================================================
Progress: 115


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 116


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
Cond2 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
---------------------------------------
targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond4(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat) (nat2:nat) (nat3:nat), leq (nat1) (nat3) = true->gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true->gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true->targetNew (idlist1) = Tuple2 (nat2) (nat3) -> Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))
idlist1 : idlist
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : leq (nat1) (nat3) = true
Cond2 : gq (nat1) (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) = true
Cond3 : gq (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (ZERO) = true
Cond4 : targetNew (idlist1) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 a _ -> a) (nat1)) (plus (match (spec (repr (target (idlist1) (idlist1)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (nat2) (SUCC (nat3))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (ZERO))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (SUCC (ZERO)) (SUCC (ZERO))
Prop: Tuple2 (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 a _ -> a) (ZERO)) (plus (match (spec (repr (target (Inil) (Inil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))) = Tuple2 (ZERO) (SUCC (ZERO))
=================================================
Progress: 117


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 118


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 119


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 120


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 121


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 122


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
---------------------------------------
gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 123


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:7.)
=================================================
Progress: 124


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:7.)
=================================================
Progress: 125


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
---------------------------------------
gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:7.)
=================================================
Progress: 126


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond4(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = Tuple2 (match (targetNew (Icons (ZERO) (SUCC (ZERO)) (Icons (ZERO) (ZERO) (Inil)))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (ZERO) (SUCC (ZERO)) (Icons (ZERO) (ZERO) (Inil)))) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Icons (SUCC (ZERO)) (SUCC (ZERO)) (Inil))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (SUCC (ZERO)) (SUCC (ZERO)) (Inil))) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Icons (SUCC (ZERO)) (ZERO) (Inil))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (SUCC (ZERO)) (ZERO) (Inil))) with
| Tuple2 _ b -> b))
Lemma List
forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 127


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:9.)
=================================================
Progress: 128


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond4(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Lemma List
forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 129


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:9.)
=================================================
Progress: 130


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond4(rank : 7.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Lemma List
forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 131


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro idlist1(rank:9.)
=================================================
Progress: 132


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro idlist1(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 133


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro idlist1(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 134


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro idlist1(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 135


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 136


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 137


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
---------------------------------------
forall (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 138


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 139


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 140


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 141


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:9.)
=================================================
Progress: 142


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:9.)
=================================================
Progress: 143


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
---------------------------------------
gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:9.)
=================================================
Progress: 144


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
---------------------------------------
leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:9.)
=================================================
Progress: 145


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:9.)
=================================================
Progress: 146


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
---------------------------------------
gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond4(rank:9.)
=================================================
Progress: 147


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond4(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (SUCC (ZERO)) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
=================================================
Progress: 148


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond4(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), gq (nat1) (ZERO) = true->leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : gq (nat1) (ZERO) = true
Cond2 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
=================================================
Progress: 149


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
---------------------------------------
spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond4(rank : 9.)


1st goal of : forall (idlist1:idlist) (nat1:nat), leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true->gq (nat1) (ZERO) = true->gq (nat1) (ZERO) = true->spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO) -> Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))
idlist1 : idlist
nat1 : nat
Cond1 : leq (nat1) (match (targetNew (idlist1)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (nat1) (ZERO) = true
Cond3 : gq (nat1) (ZERO) = true
Cond4 : spec (repr (target (idlist1) (idlist1))) = Tuple2 (ZERO) (ZERO)
---------------------------------------
Tuple2 (nat1) (SUCC (ZERO)) = Tuple2 (match (targetNew (idlist1)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (idlist1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Icons (SUCC (ZERO)) (ZERO) (Inil))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (SUCC (ZERO)) (ZERO) (Inil))) with
| Tuple2 _ b -> b))
Prop: Tuple2 (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = Tuple2 (match (targetNew (Icons (ZERO) (ZERO) (Inil))) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Icons (ZERO) (ZERO) (Inil))) with
| Tuple2 _ b -> b))
Prop: Tuple2 (ZERO) (SUCC (ZERO)) = Tuple2 (match (targetNew (Inil)) with
| Tuple2 a _ -> a) (SUCC (match (targetNew (Inil)) with
| Tuple2 _ b -> b))
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
