Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:nat list), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), sum (map (tf7 (nat_list1) (nat_list1))) = match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), sum (map (tf7 (nat_list1) (nat_list1))) = match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
sum (map (tf7 ((Nil)) ((Nil)))) = match (tailsNew ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
sum (map (tf7 ((Nil)) ((Nil)))) = match (tailsNew ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
sum (map (tf7 ((nat1::nat_list2)) ((nat1::nat_list2)))) = match (tailsNew ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
sum (map (tf7 ((nat1::nat_list2)) ((nat1::nat_list2)))) = match (tailsNew ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 0(rank:11.)
=================================================
Progress: 6


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: plus (times (SUCC (ZERO)) (product ((ZERO::(ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil)))))))) (4) = plus (4) (times (SUCC (ZERO)) (match (tailsNew ((ZERO::(ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil))))))) with
| Tuple2 _ b -> b))
Prop: plus (times (ZERO) (product ((Nil)))) (7) = plus (7) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))
Prop: plus (times (ZERO) (product ((Nil)))) (4) = plus (4) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: plus (times (SUCC (ZERO)) (product ((ZERO::(Nil))))) (3) = plus (3) (times (SUCC (ZERO)) (match (tailsNew ((ZERO::(Nil)))) with
| Tuple2 _ b -> b))
Prop: plus (times (SUCC (ZERO)) (product ((ZERO::(ZERO::(Nil)))))) (0) = plus (0) (times (SUCC (ZERO)) (match (tailsNew ((ZERO::(ZERO::(Nil))))) with
| Tuple2 _ b -> b))
Prop: plus (times (ZERO) (product ((Nil)))) (3) = plus (3) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))
Prop: plus (times (ZERO) (product ((Nil)))) (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))
Prop: plus (times (ZERO) (product ((Nil)))) (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))
Prop: plus (times (SUCC (SUCC (ZERO))) (product ((Nil)))) (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (SUCC (SUCC (ZERO))) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))
previous tactics
simpl in goal
parent
times (nat1) (product (nat_list2))
lower
times(_, product(nat_list2))
upper
plus(_, sum(map(tf7(nat_list2, nat_list2))))
remove upper
times(nat1, product(nat_list2))
remove lower
times(nat1, product(nat_list2))
remove upper
times(nat1, times(nat2, product(nat_list3)))
remove lower
times(nat1, times(nat2, product(nat_list3)))
remove upper
times(nat1, times(nat2, times(nat3, product(nat_list4))))
remove lower
times(nat1, times(nat2, times(nat3, product(nat_list4))))
parent
times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)
lower
times(_, _)
upper
plus(_, _)
remove upper
times(nat1, _)
validate generalize_common_subterm_goal
Prop: plus (times (ZERO) (product ((Nil)))) (sum (map (tf7 ((Nil)) ((Nil))))) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))
Prop: plus (times (ZERO) (product ((ZERO::(Nil))))) (sum (map (tf7 ((ZERO::(Nil))) ((ZERO::(Nil)))))) = plus (match (tailsNew ((ZERO::(Nil)))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew ((ZERO::(Nil)))) with
| Tuple2 _ b -> b))
Prop: plus (times (ZERO) (product ((Nil)))) (sum (map (tf7 ((Nil)) ((Nil))))) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))
Lemma List
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 8


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 9


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (sum (map (tf7 (nat_list2) (nat_list2)))) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: plus (times (ZERO) (product ((SUCC (ZERO)::(Nil))))) (SUCC (ZERO)) = plus (SUCC (ZERO)) (times (ZERO) (match (tailsNew ((SUCC (ZERO)::(Nil)))) with
| Tuple2 _ b -> b))
Prop: plus (times (SUCC (ZERO)) (product ((ZERO::(Nil))))) (ZERO) = plus (ZERO) (times (SUCC (ZERO)) (match (tailsNew ((ZERO::(Nil)))) with
| Tuple2 _ b -> b))
Prop: plus (times (ZERO) (product ((Nil)))) (ZERO) = plus (ZERO) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))
previous tactics
simpl in goal
parent
times (nat1) (product (nat_list2))
lower
times(_, product(nat_list2))
upper
plus(_, sum(map(tf7(nat_list2, nat_list2))))
remove upper
times(nat1, product(nat_list2))
remove lower
times(nat1, product(nat_list2))
remove upper
times(nat1, times(nat2, product(nat_list3)))
remove lower
times(nat1, times(nat2, product(nat_list3)))
remove upper
times(nat1, times(nat2, times(nat3, product(nat_list4))))
remove lower
times(nat1, times(nat2, times(nat3, product(nat_list4))))
parent
times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)
lower
times(_, _)
upper
plus(_, _)
remove upper
times(nat1, _)
validate generalize_common_subterm_goal
Prop: plus (times (ZERO) (product ((Nil)))) (sum (map (tf7 ((Nil)) ((Nil))))) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))
Prop: plus (times (SUCC (ZERO)) (product ((Nil)))) (sum (map (tf7 ((Nil)) ((Nil))))) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (SUCC (ZERO)) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))
Prop: plus (times (SUCC (ZERO)) (product ((Nil)))) (sum (map (tf7 ((Nil)) ((Nil))))) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (SUCC (ZERO)) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (sum (map (tf7 (nat_list2) (nat_list2)))) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 10


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (sum (map (tf7 (nat_list2) (nat_list2)))) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:14.)
induction nat2(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 11


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), plus (times (ZERO) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 12


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), plus (times (ZERO) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), sum (map (tf7 (nat_list1) (nat_list1))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:7.)
=================================================
Progress: 13


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), sum (map (tf7 (nat_list1) (nat_list1))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
sum (map (tf7 ((Nil)) ((Nil)))) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 14


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
sum (map (tf7 ((Nil)) ((Nil)))) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
sum (map (tf7 ((nat2::nat_list2)) ((nat2::nat_list2)))) = plus (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 a _ -> a) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 15


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
sum (map (tf7 ((nat2::nat_list2)) ((nat2::nat_list2)))) = plus (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 a _ -> a) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6.)
=================================================
Progress: 16


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (times (nat2) (product (nat_list2))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: plus (times (ZERO) (product ((Nil)))) (plus (0) (ZERO)) = plus (plus (0) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: plus (times (ZERO) (product ((ZERO::(Nil))))) (plus (6) (ZERO)) = plus (plus (6) (times (ZERO) (match (tailsNew ((ZERO::(Nil)))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: plus (times (ZERO) (product ((Nil)))) (plus (7) (ZERO)) = plus (plus (7) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
validate generalize_common_subterm_goal
Prop: plus (times (ZERO) (product ((Nil)))) (plus (2) (ZERO)) = plus (plus (2) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: plus (times (ZERO) (product ((Nil)))) (plus (0) (ZERO)) = plus (plus (0) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: plus (times (ZERO) (product ((ZERO::(SUCC (ZERO)::(Nil)))))) (plus (0) (ZERO)) = plus (plus (0) (times (ZERO) (match (tailsNew ((ZERO::(SUCC (ZERO)::(Nil))))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: plus (times (ZERO) (product ((SUCC (SUCC (ZERO))::(Nil))))) (plus (match (tailsNew ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 a _ -> a) (ZERO)) = plus (plus (match (tailsNew ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: plus (times (ZERO) (product ((Nil)))) (plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (ZERO)) = plus (plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: plus (times (SUCC (ZERO)) (product ((Nil)))) (plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (ZERO)) = plus (plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (SUCC (ZERO)) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
previous tactics
simpl in goal
parent
times (nat2) (product (nat_list2))
lower
times(_, product(nat_list2))
upper
plus(_, sum(map(tf7(nat_list2, nat_list2))))
remove upper
times(nat2, product(nat_list2))
remove lower
times(nat2, product(nat_list2))
remove upper
times(nat2, times(nat3, product(nat_list3)))
remove lower
times(nat2, times(nat3, product(nat_list3)))
remove upper
times(nat2, times(nat3, times(nat4, product(nat_list4))))
remove lower
times(nat2, times(nat3, times(nat4, product(nat_list4))))
parent
times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)
lower
times(_, _)
upper
plus(plus(_, _), ZERO())
remove upper
times(nat2, _)
validate generalize_common_subterm_goal
Prop: plus (times (ZERO) (product ((ZERO::(ZERO::(ZERO::(Nil))))))) (sum (map (tf7 ((ZERO::(ZERO::(ZERO::(Nil))))) ((ZERO::(ZERO::(ZERO::(Nil)))))))) = plus (plus (match (tailsNew ((ZERO::(ZERO::(ZERO::(Nil)))))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew ((ZERO::(ZERO::(ZERO::(Nil)))))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: plus (times (SUCC (SUCC (ZERO))) (product ((Nil)))) (sum (map (tf7 ((Nil)) ((Nil))))) = plus (plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (SUCC (SUCC (ZERO))) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: plus (times (SUCC (ZERO)) (product ((Nil)))) (sum (map (tf7 ((Nil)) ((Nil))))) = plus (plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (SUCC (ZERO)) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
Lemma List
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO)
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (ZERO)) = plus (plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO)
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (times (nat2) (product (nat_list2))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 17


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
induction nat_list1(rank:16.)
=================================================
Progress: 18


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : sum (map (tf7 (nat_list2) (nat_list2))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (times (nat2) (product (nat_list2))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (ZERO)) = plus (plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (ZERO)) = plus (plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (ZERO)) = plus (plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
induction nat_list1(rank:16.)
=================================================
Progress: 19


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (product ((Nil)))) (sum (map (tf7 ((Nil)) ((Nil))))) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 20


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (product ((Nil)))) (sum (map (tf7 ((Nil)) ((Nil))))) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat1) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 21


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat1) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (ZERO) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 22


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (ZERO) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat2 : nat
IH1 : plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (times (SUCC (nat2)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (SUCC (nat2)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 23


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat2 : nat
IH1 : plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (times (SUCC (nat2)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (SUCC (nat2)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat2 : nat
IH1 : plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
=================================================
Progress: 24


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), plus (times (ZERO) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 25


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), plus (times (ZERO) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (ZERO) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:7.)
=================================================
Progress: 26


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (tailsNew ((Nil))) with
| Tuple2 a _ -> a = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 27


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (tailsNew ((Nil))) with
| Tuple2 a _ -> a = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (tailsNew ((nat2::nat_list2))) with
| Tuple2 a _ -> a = plus (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 a _ -> a) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 28


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (tailsNew ((nat2::nat_list2))) with
| Tuple2 a _ -> a = plus (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 a _ -> a) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
parent
times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)
lower
times(_, _)
upper
plus(_, _)
remove upper
times(nat2, _)
parent
times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)
lower
times(_, _)
upper
plus(plus(_, _), ZERO())
remove upper
times(nat2, _)
Prop: SUCC (ZERO) = plus (SUCC (ZERO)) (ZERO)
Prop: SUCC (SUCC (SUCC (ZERO))) = plus (SUCC (SUCC (SUCC (ZERO)))) (ZERO)
Prop: ZERO = plus (ZERO) (ZERO)
Lemma List
forall (nat1:nat), nat1 = plus (nat1) (ZERO)
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 29


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), nat1 = plus (nat1) (ZERO)(rank : 0.)


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)

---------------------------------------
forall (nat1:nat), nat1 = plus (nat1) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 30


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)

---------------------------------------
forall (nat1:nat), nat1 = plus (nat1) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 31


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
nat2 : nat
IH1 : nat2 = plus (nat2) (ZERO)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = plus (SUCC (nat2)) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 32


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
nat2 : nat
IH1 : nat2 = plus (nat2) (ZERO)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = plus (SUCC (nat2)) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
nat2 : nat
IH1 : nat2 = plus (nat2) (ZERO)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = SUCC (plus (nat2) (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 33


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
nat2 : nat
IH1 : nat2 = plus (nat2) (ZERO)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = SUCC (plus (nat2) (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
nat2 : nat
IH1 : nat2 = plus (nat2) (ZERO)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 34


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
nat2 : nat
IH1 : nat2 = plus (nat2) (ZERO)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
original goal
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
lemma
forall (nat1:nat), nat1 = plus (nat1) (ZERO)
tactics
assert forall (nat1:nat), nat1 = plus (nat1) (ZERO)
induction nat1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
Deduplication: 0
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 35


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 36


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (nat_list1:nat list), plus (times (SUCC (nat2)) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (SUCC (nat2)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 37


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (nat_list1:nat list), plus (times (SUCC (nat2)) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (SUCC (nat2)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (nat_list1:nat list), plus (plus (times (nat2) (product (nat_list1))) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (plus (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 38


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (nat_list1:nat list), plus (plus (times (nat2) (product (nat_list1))) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (plus (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
plus (plus (times (nat2) (product ((Nil)))) (product ((Nil)))) (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (plus (times (nat2) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b)) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 39


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
plus (plus (times (nat2) (product ((Nil)))) (product ((Nil)))) (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (plus (times (nat2) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b)) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
plus (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (SUCC (ZERO))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)
Lemma List
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (nat1)
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
plus (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 40


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
plus (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (nat1)(rank : 0.)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (nat1)

---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 41


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (nat1)

---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (nat1)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 42


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (nat1)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (nat1)
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (nat2)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (SUCC (ZERO)) = SUCC (SUCC (nat2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 43


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (nat1)
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (nat2)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (SUCC (ZERO)) = SUCC (SUCC (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (nat1)
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (nat2)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (SUCC (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 44


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (product ((Nil)))) (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 45


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (product ((Nil)))) (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) = plus (match (tailsNew ((Nil))) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat1) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 46


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat1) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (ZERO) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 47


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (ZERO) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat2 : nat
IH1 : plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (times (SUCC (nat2)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (SUCC (nat2)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 48


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat2 : nat
IH1 : plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (times (SUCC (nat2)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (SUCC (nat2)) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat2 : nat
IH1 : plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
=================================================
Progress: 49


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (ZERO) = plus (ZERO) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 50


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (ZERO) = plus (ZERO) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (ZERO) = times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat2(rank:15.)
induction nat_list1(rank:15.)
=================================================
Progress: 51


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (times (ZERO) (product (nat_list1))) (nat1) = plus (nat1) (times (ZERO) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 52


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (times (ZERO) (product (nat_list1))) (nat1) = plus (nat1) (times (ZERO) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 53


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = plus (ZERO) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 54


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = plus (ZERO) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), SUCC (nat3) = plus (SUCC (nat3)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 55


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), SUCC (nat3) = plus (SUCC (nat3)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 56


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat_list1
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (SUCC (ZERO)) (ZERO)
Prop: ZERO = plus (ZERO) (ZERO)
Prop: ZERO = plus (ZERO) (ZERO)
t is here


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
duplicated tactic
assert forall (nat1:nat), nat1 = plus (nat1) (ZERO)
induction nat1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 57


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : -1.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 58


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 59


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (times (SUCC (nat3)) (product (nat_list1))) (nat1) = plus (nat1) (times (SUCC (nat3)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 60


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (times (SUCC (nat3)) (product (nat_list1))) (nat1) = plus (nat1) (times (SUCC (nat3)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (plus (times (nat3) (product (nat_list1))) (product (nat_list1))) (nat1) = plus (nat1) (plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
induction nat1(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 61


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (plus (times (nat3) (product (nat_list1))) (product (nat_list1))) (nat1) = plus (nat1) (plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (plus (product (nat_list1)) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (nat1) = plus (nat1) (plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 62


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (times (nat2) (product ((Nil)))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 63


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (times (nat2) (product ((Nil)))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (times (nat2) (SUCC (ZERO))) (nat1) = plus (nat1) (times (nat2) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction nat2(rank:15.)
=================================================
Progress: 64


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat2 : nat
IH1 : plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat2 : nat
IH1 : plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (times (nat2) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 65


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat2 : nat
IH1 : plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (times (nat2) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (product ((nat2::nat_list2)))) (sum (map (tf7 ((nat2::nat_list2)) ((nat2::nat_list2))))) = plus (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 66


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (product ((nat2::nat_list2)))) (sum (map (tf7 ((nat2::nat_list2)) ((nat2::nat_list2))))) = plus (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
induction nat1(rank:14.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 67


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 68


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (ZERO) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 69


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (ZERO) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 70


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) = plus (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 71


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) = plus (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (times (nat2) (product (nat_list2)))) (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) = plus (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) (times (ZERO) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 72


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (times (nat2) (product (nat_list2)))) (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) = plus (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) (times (ZERO) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:22.)
rewrite IH1 in goal at 2(rank:22.)
=================================================
Progress: 73


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat2 : nat
IH1 : plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat2 : nat
IH1 : plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (times (nat2) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 74


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat2 : nat
IH1 : plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (times (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (times (nat2) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (times (nat2) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (product ((nat2::nat_list2)))) (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 a _ -> a) = plus (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 75


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (product ((nat2::nat_list2)))) (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 a _ -> a) = plus (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew ((nat2::nat_list2))) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
induction nat1(rank:14.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 76


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (times (nat2) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a)) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 77


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (times (nat2) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a)) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (times (nat2) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a)) (times (ZERO) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 78


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (times (nat2) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a)) (times (ZERO) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (plus (times (nat2) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 79


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (plus (times (nat3) (product (nat_list1))) (product (nat_list1))) (nat1) = plus (nat1) (plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), plus (plus (times (nat3) (product (nat_list1))) (product (nat_list1))) (ZERO) = plus (ZERO) (plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 80


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), plus (plus (times (nat3) (product (nat_list1))) (product (nat_list1))) (ZERO) = plus (ZERO) (plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), plus (plus (times (nat3) (product (nat_list1))) (product (nat_list1))) (ZERO) = plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:14.)
induction nat_list1(rank:15.)
rewrite <- lemma3 in goal at 0(rank:14.)
=================================================
Progress: 81


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (plus (times (nat3) (product (nat_list1))) (product (nat_list1))) (nat1) = plus (nat1) (plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (plus (times (nat3) (product ((Nil)))) (product ((Nil)))) (nat1) = plus (nat1) (plus (times (nat3) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b)) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 82


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (plus (times (nat3) (product ((Nil)))) (product ((Nil)))) (nat1) = plus (nat1) (plus (times (nat3) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b)) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat1) = plus (nat1) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 83


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat1) = plus (nat1) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO) = plus (ZERO) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 84


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO) = plus (ZERO) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO) = plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:7.)
=================================================
Progress: 85


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (ZERO) = plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)) = plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 86


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)) = plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat4) = plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (nat4)) = plus (SUCC (nat4)) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 87


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat4) = plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (nat4)) = plus (SUCC (nat4)) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat4) = plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (nat4)) = SUCC (plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 88


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat4) = plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (nat4)) = SUCC (plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat4) = plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (nat4)) = SUCC (plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat4))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (SUCC (ZERO)) (ZERO))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (SUCC (ZERO)) (ZERO))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (SUCC (ZERO)) (ZERO))
previous tactics
simpl in goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (ZERO))
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = SUCC (plus (SUCC (ZERO)) (ZERO))
Prop: plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (ZERO))) = SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO)))))
Lemma List
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat2) (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat4) = plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (nat4)) = SUCC (plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))))

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat4) = plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (nat4)) = SUCC (plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat4))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 89


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat4) = plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (nat4)) = SUCC (plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat2) (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
induction nat2(rank:16.)
=================================================
Progress: 90


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat4) = plus (nat4) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (nat4)) = SUCC (plus (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))) (nat4))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 91


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (ZERO) (SUCC (nat2)) = SUCC (plus (ZERO) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 92


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (ZERO) (SUCC (nat2)) = SUCC (plus (ZERO) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), plus (SUCC (nat3)) (SUCC (nat2)) = SUCC (plus (SUCC (nat3)) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 93


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), plus (SUCC (nat3)) (SUCC (nat2)) = SUCC (plus (SUCC (nat3)) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (plus (nat3) (SUCC (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat2(rank:7.)
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 94


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (plus (nat3) (SUCC (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (plus (nat3) (SUCC (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 95


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (plus (product (nat_list1)) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (nat1) = plus (nat1) (plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), plus (plus (product (nat_list1)) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO) = plus (ZERO) (plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 96


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), plus (plus (product (nat_list1)) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO) = plus (ZERO) (plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), plus (plus (product (nat_list1)) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO) = plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lemma3 in goal at 0(rank:14.)
induction nat_list1(rank:15.)
=================================================
Progress: 97


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), plus (plus (product (nat_list1)) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))) (nat1) = plus (nat1) (plus (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (plus (product ((Nil))) (times (nat3) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))) (nat1) = plus (nat1) (plus (times (nat3) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b)) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 98


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), plus (plus (product ((Nil))) (times (nat3) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))) (nat1) = plus (nat1) (plus (times (nat3) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b)) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), SUCC (plus (times (nat3) (SUCC (ZERO))) (nat1)) = plus (nat1) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 99


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), SUCC (plus (times (nat3) (SUCC (ZERO))) (nat1)) = plus (nat1) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (times (nat3) (SUCC (ZERO))) (ZERO)) = plus (ZERO) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 100


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (times (nat3) (SUCC (ZERO))) (ZERO)) = plus (ZERO) (plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (times (nat3) (SUCC (ZERO))) (ZERO)) = plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:7.)
=================================================
Progress: 101


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (times (nat3) (SUCC (ZERO))) (ZERO)) = plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (times (nat3) (SUCC (ZERO))) = plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- lemma3 in goal at 0
Prop: SUCC (SUCC (ZERO)) = plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))
previous tactics
simpl in goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (ZERO) (SUCC (ZERO))
Lemma List
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (times (nat3) (SUCC (ZERO))) (ZERO)) = plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (times (nat3) (SUCC (ZERO))) = plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 102


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (times (nat3) (SUCC (ZERO))) (ZERO)) = plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (ZERO)) = plus (nat1) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite <- lemma3 in goal at 0(rank:23.)
=================================================
Progress: 103


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (times (nat2) (product (nat_list1))) (nat1) = plus (nat1) (times (nat2) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), plus (times (nat3) (product (nat_list1))) (nat1) = plus (nat1) (times (nat3) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (times (nat3) (SUCC (ZERO))) = plus (times (nat3) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 104


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 105


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : SUCC (nat2) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (nat2)) = plus (SUCC (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 106


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : SUCC (nat2) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (nat2)) = plus (SUCC (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : SUCC (nat2) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (nat2)) = SUCC (plus (nat2) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 107


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (times (nat2) (product (nat_list2)))) (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (ZERO) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 108


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (times (nat2) (product (nat_list2)))) (plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2))))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (ZERO) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (sum (map (tf7 (nat_list1) (nat_list1)))) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (times (nat2) (product (nat_list2))) (sum (map (tf7 (nat_list2) (nat_list2)))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 109


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), plus (times (nat1) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (nat1) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (ZERO) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 110


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (times (ZERO) (times (nat2) (product (nat_list2)))) (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (times (ZERO) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 111


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (plus (times (nat2) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: ZERO = plus (ZERO) (ZERO)
Prop: ZERO = plus (ZERO) (ZERO)
Prop: SUCC (ZERO) = plus (SUCC (ZERO)) (ZERO)
previous tactics
simpl in goal
Prop: plus (2) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b)) = plus (plus (times (ZERO) (product ((Nil)))) (2)) (ZERO)
Prop: plus (4) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b)) = plus (plus (times (ZERO) (product ((Nil)))) (4)) (ZERO)
Prop: plus (6) (times (ZERO) (match (tailsNew ((Nil))) with
| Tuple2 _ b -> b)) = plus (plus (times (ZERO) (product ((Nil)))) (6)) (ZERO)
Lemma List
forall (any1:any) (nat1:nat) (nat_list1:nat list), plus (any1) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) = plus (plus (times (nat1) (product (nat_list1))) (any1)) (ZERO)
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (plus (times (nat2) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 112


1st goal of : forall (nat1:nat) (nat_list1:nat list), plus (times (nat1) (product (nat_list1))) (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), plus (times (nat1) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) = plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b))
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tailsNew (nat_list2)) with
| Tuple2 _ b -> b)) = plus (plus (times (nat2) (product (nat_list2))) (match (tailsNew (nat_list2)) with
| Tuple2 a _ -> a)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (nat1:nat) (nat_list1:nat list), plus (any1) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) = plus (plus (times (nat1) (product (nat_list1))) (any1)) (ZERO)(rank : 0.)


1st goal of : forall (any1:any) (nat1:nat) (nat_list1:nat list), plus (any1) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) = plus (plus (times (nat1) (product (nat_list1))) (any1)) (ZERO)

---------------------------------------
forall (any1:any) (nat1:nat) (nat_list1:nat list), plus (any1) (times (nat1) (match (tailsNew (nat_list1)) with
| Tuple2 _ b -> b)) = plus (plus (times (nat1) (product (nat_list1))) (any1)) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Fatal error: exception Invalid_argument("option is None")
Raised at Stdlib.invalid_arg in file "stdlib.ml", line 30, characters 20-45
Called from Stdlib__Option.get in file "option.ml" (inlined), line 21, characters 41-69
Called from Dilemma__Prover.rank_tactics in file "lib/prover.ml", line 1356, characters 35-70
Called from Dilemma__Prover.prune_rank_worklist_update_state_list in file "lib/prover.ml", line 1452, characters 4-65
Called from Dilemma__Engine.progress in file "lib/engine.ml", lines 198-202, characters 9-20
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 283, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
