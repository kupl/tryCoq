Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:nat list), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), spec (repr (nat_list1)) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), spec (repr (nat_list1)) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
spec (repr ((Nil))) = mainNew ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
spec (repr ((Nil))) = mainNew ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
spec (repr ((nat1::nat_list2))) = mainNew ((nat1::nat_list2))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
spec (repr ((nat1::nat_list2))) = mainNew ((nat1::nat_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (length (nat_list2)) (nat1)(rank:4.)
rewrite IH1 in goal at 0(rank:11.)
rewrite IH1 in goal at 2(rank:11.)
rewrite <- IH1 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 1(rank:11.)
rewrite <- IH1 in goal at 2(rank:11.)
rewrite IH1 in goal at 1(rank:11.)
case gq (nat1) (length (nat_list2))(rank:4.)
=================================================
Progress: 6


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case gq (nat1) (length (nat_list2))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 7


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (length (nat_list2)) (nat1)(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
=================================================
Progress: 8


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 9


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 10


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list2)) (nat1)(rank:4.)
case gq (nat1) (length (nat_list2))(rank:4.)
=================================================
Progress: 11


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case gq (nat1) (length (nat_list2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 12


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (length (nat_list2)) (nat1)(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 13


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 14


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 15


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat1)(rank:4.)
=================================================
Progress: 16


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case gq (nat1) (length (nat_list2))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 17


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 18


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat1)(rank:4.)
=================================================
Progress: 19


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case gq (nat1) (length (nat_list2))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 20


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 21


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list2)) (nat1)(rank:4.)
case gq (nat1) (length (nat_list2))(rank:4.)
=================================================
Progress: 22


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case gq (nat1) (length (nat_list2))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:20.)
rewrite IH1 in goal at 2(rank:12.)
rewrite IH1 in goal at 3(rank:20.)
=================================================
Progress: 23


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (length (nat_list2)) (nat1)(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:20.)
rewrite IH1 in goal at 2(rank:12.)
rewrite IH1 in goal at 3(rank:12.)
=================================================
Progress: 24


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 25


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 26


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:4.)
=================================================
Progress: 27


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (length (nat_list2)) (nat1)(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
rewrite IH1 in goal at 1(rank:20.)
rewrite IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 28


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 29


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else spec (repr (nat_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:4.)
=================================================
Progress: 30


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else spec (repr (nat_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (length (nat_list2)) (nat1)(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:20.)
rewrite IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 31


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 32


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:5.)
=================================================
Progress: 33


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 34


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (length (nat_list2)) (nat1)
rewrite IH1 in goal at 1
Prop: if gq (SUCC (ZERO)) (length ((SUCC (SUCC (ZERO))::(Nil)))) then plus (SUCC (ZERO)) (SUCC (ZERO)) else spec (repr ((SUCC (SUCC (ZERO))::(Nil)))) = plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: if gq (ZERO) (length ((ZERO::(Nil)))) then plus (ZERO) (ZERO) else spec (repr ((ZERO::(Nil)))) = plus (ZERO) (ZERO)
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (ZERO) else spec (repr ((Nil))) = plus (ZERO) (ZERO)
previous tactics
simpl in goal
case lq (length (nat_list2)) (nat1)
parent
plus (mainNew (nat_list2)) (nat1)
lower
plus(mainNew(nat_list2), _)
upper
_
remove upper
mainNew(nat_list2)
remove lower
mainNew(nat_list2)
remove upper
plus(mainNew(nat_list2), nat1)
remove lower
plus(mainNew(nat_list2), nat1)
remove upper
plus(_, nat1)
remove lower
plus(_, nat1)
remove upper
plus(_, nat1)
remove lower
plus(_, nat1)
validate generalize_common_subterm_goal
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = plus (mainNew ((Nil))) (ZERO)
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = plus (mainNew ((Nil))) (ZERO)
Prop: if gq (SUCC (SUCC (ZERO))) (length ((Nil))) then plus (SUCC (SUCC (ZERO))) (spec (repr ((Nil)))) else spec (repr ((Nil))) = plus (mainNew ((Nil))) (SUCC (SUCC (ZERO)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 35


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 36


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), if gq (ZERO) (length (nat_list1)) then plus (ZERO) (nat1) else spec (repr (nat_list1)) = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 37


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), if gq (ZERO) (length (nat_list1)) then plus (ZERO) (nat1) else spec (repr (nat_list1)) = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), spec (repr (nat_list1)) = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
induction nat_list1(rank:15.)
=================================================
Progress: 38


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (length (nat_list2)) (nat1)
rewrite IH1 in goal at 2
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else SUCC (ZERO) = plus (SUCC (ZERO)) (ZERO)
Prop: if gq (SUCC (ZERO)) (length ((Nil))) then plus (SUCC (ZERO)) (spec (repr ((Nil)))) else ZERO = plus (ZERO) (SUCC (ZERO))
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else ZERO = plus (ZERO) (ZERO)
previous tactics
simpl in goal
case lq (length (nat_list2)) (nat1)
parent
plus (mainNew (nat_list2)) (nat1)
lower
plus(mainNew(nat_list2), _)
upper
_
remove upper
mainNew(nat_list2)
remove lower
mainNew(nat_list2)
remove upper
plus(mainNew(nat_list2), nat1)
remove lower
plus(mainNew(nat_list2), nat1)
remove upper
plus(_, nat1)
remove lower
plus(_, nat1)
remove upper
plus(_, nat1)
remove lower
plus(_, nat1)
validate generalize_common_subterm_goal
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = plus (mainNew ((Nil))) (ZERO)
Prop: if gq (SUCC (ZERO)) (length ((Nil))) then plus (SUCC (ZERO)) (spec (repr ((Nil)))) else spec (repr ((Nil))) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = plus (mainNew ((Nil))) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 39


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 40


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), if gq (ZERO) (length (nat_list1)) then plus (ZERO) (spec (repr (nat_list1))) else nat1 = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 41


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), if gq (ZERO) (length (nat_list1)) then plus (ZERO) (spec (repr (nat_list1))) else nat1 = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 42


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = plus (ZERO) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 43


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = plus (ZERO) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), SUCC (nat3) = plus (SUCC (nat3)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 44


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), SUCC (nat3) = plus (SUCC (nat3)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 45


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat_list1
validate generalize_common_subterm_goal
Prop: ZERO = plus (ZERO) (ZERO)
Prop: ZERO = plus (ZERO) (ZERO)
Prop: ZERO = plus (ZERO) (ZERO)
Lemma List
forall (nat1:nat), nat1 = plus (nat1) (ZERO)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 46


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), nat1 = plus (nat1) (ZERO)(rank : 0.)


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)

---------------------------------------
forall (nat1:nat), nat1 = plus (nat1) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 47


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)

---------------------------------------
forall (nat1:nat), nat1 = plus (nat1) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 48


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
nat2 : nat
IH1 : nat2 = plus (nat2) (ZERO)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = plus (SUCC (nat2)) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 49


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
nat2 : nat
IH1 : nat2 = plus (nat2) (ZERO)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = plus (SUCC (nat2)) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
nat2 : nat
IH1 : nat2 = plus (nat2) (ZERO)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = SUCC (plus (nat2) (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 50


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
nat2 : nat
IH1 : nat2 = plus (nat2) (ZERO)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = SUCC (plus (nat2) (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
nat2 : nat
IH1 : nat2 = plus (nat2) (ZERO)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 51


1st goal of : forall (nat1:nat), nat1 = plus (nat1) (ZERO)
nat1 : nat
nat2 : nat
IH1 : nat2 = plus (nat2) (ZERO)
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
original goal
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
lemma
forall (nat1:nat), nat1 = plus (nat1) (ZERO)
tactics
assert forall (nat1:nat), nat1 = plus (nat1) (ZERO)
induction nat1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
Deduplication: 0
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 52


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 53


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
SUCC (nat3) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), if gq (SUCC (nat3)) (length (nat_list1)) then plus (SUCC (nat3)) (spec (repr (nat_list1))) else nat1 = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 54


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), if gq (SUCC (nat3)) (length (nat_list1)) then plus (SUCC (nat3)) (spec (repr (nat_list1))) else nat1 = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), if gq (SUCC (nat3)) (length ((Nil))) then plus (SUCC (nat3)) (spec (repr ((Nil)))) else nat1 = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 55


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), if gq (SUCC (nat3)) (length ((Nil))) then plus (SUCC (nat3)) (spec (repr ((Nil)))) else nat1 = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (ZERO)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lemma3 in goal at 0(rank:14.)
induction nat1(rank:15.)
=================================================
Progress: 56


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:5.)
=================================================
Progress: 57


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 58


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat1)(rank:5.)
=================================================
Progress: 59


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 60


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 1
Prop: plus (SUCC (ZERO)) (ZERO) = if lq (length ((Nil))) (SUCC (ZERO)) then plus (ZERO) (SUCC (ZERO)) else mainNew ((Nil))
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = if lq (length ((ZERO::(SUCC (ZERO)::(Nil))))) (ZERO) then plus (SUCC (SUCC (ZERO))) (ZERO) else mainNew ((ZERO::(SUCC (ZERO)::(Nil))))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (length ((ZERO::(ZERO::(Nil))))) (SUCC (SUCC (ZERO))) then plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))) else mainNew ((ZERO::(ZERO::(Nil))))
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (ZERO) = if lq (length ((Nil))) (SUCC (ZERO)) then plus (ZERO) (SUCC (ZERO)) else mainNew ((Nil))
Prop: plus (ZERO) (ZERO) = if lq (length ((ZERO::(ZERO::(Nil))))) (ZERO) then plus (ZERO) (ZERO) else mainNew ((ZERO::(ZERO::(Nil))))
Prop: plus (ZERO) (ZERO) = if lq (length ((Nil))) (ZERO) then plus (ZERO) (ZERO) else mainNew ((Nil))
previous tactics
simpl in goal
case gq (nat1) (length (nat_list2))
parent
plus (nat1) (spec (repr (nat_list2)))
lower
plus(_, spec(repr(nat_list2)))
upper
_
remove upper
spec(repr(nat_list2))
remove lower
spec(repr(nat_list2))
remove upper
plus(nat1, spec(repr(nat_list2)))
remove lower
plus(nat1, spec(repr(nat_list2)))
remove upper
plus(nat1, _)
remove lower
plus(nat1, _)
remove upper
plus(nat1, _)
remove lower
plus(nat1, _)
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = if lq (length ((Nil))) (SUCC (ZERO)) then plus (mainNew ((Nil))) (SUCC (ZERO)) else mainNew ((Nil))
Prop: plus (ZERO) (spec (repr ((Nil)))) = if lq (length ((Nil))) (ZERO) then plus (mainNew ((Nil))) (ZERO) else mainNew ((Nil))
Prop: plus (ZERO) (spec (repr ((Nil)))) = if lq (length ((Nil))) (ZERO) then plus (mainNew ((Nil))) (ZERO) else mainNew ((Nil))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 61


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 62


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true -> plus (ZERO) (nat1) = if lq (length (nat_list1)) (ZERO) then plus (nat1) (ZERO) else mainNew (nat_list1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 63


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true -> plus (ZERO) (nat1) = if lq (length (nat_list1)) (ZERO) then plus (nat1) (ZERO) else mainNew (nat_list1)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (SUCC (nat3)) (length (nat_list1)) = true -> plus (SUCC (nat3)) (nat1) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 64


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (SUCC (nat3)) (length (nat_list1)) = true -> plus (SUCC (nat3)) (nat1) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (SUCC (nat3)) (length (nat_list1)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 65


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (SUCC (nat3)) (length (nat_list1)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), gq (SUCC (nat3)) (length ((Nil))) = true -> SUCC (plus (nat3) (nat1)) = if lq (length ((Nil))) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 66


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), gq (SUCC (nat3)) (length ((Nil))) = true -> SUCC (plus (nat3) (nat1)) = if lq (length ((Nil))) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 67


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 68


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 69


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (ZERO) = SUCC (ZERO)
Prop: plus (SUCC (ZERO)) (ZERO) = SUCC (ZERO)
Prop: plus (SUCC (SUCC (ZERO))) (ZERO) = SUCC (SUCC (ZERO))
Lemma List
forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 70


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1(rank : 0.)


1st goal of : forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1

---------------------------------------
forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 71


1st goal of : forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1

---------------------------------------
forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
Cond1 : true = true
---------------------------------------
forall (nat1:nat), plus (nat1) (ZERO) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 72


1st goal of : forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
Cond1 : true = true
---------------------------------------
forall (nat1:nat), plus (nat1) (ZERO) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
Cond1 : true = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (ZERO) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 73


1st goal of : forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
Cond1 : true = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (ZERO) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
Cond1 : true = true
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = nat2
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (ZERO) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 74


1st goal of : forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
Cond1 : true = true
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = nat2
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (ZERO) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
Cond1 : true = true
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = nat2
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (ZERO)) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 75


1st goal of : forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
Cond1 : true = true
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = nat2
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (ZERO)) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
Cond1 : true = true
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = nat2
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 76


1st goal of : forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
Cond1 : true = true
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = nat2
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
original goal
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
lemma
forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
tactics
assert forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
intro Cond1
induction nat1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 0
Tactic List : 1
rewrite lemma3 in goal at 0(rank:8.)
=================================================
Progress: 77


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 78


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 79


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = plus (SUCC (nat4)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 80


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = plus (SUCC (nat4)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 81


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
reflexivity
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (ZERO))
Prop: plus (ZERO) (SUCC (SUCC (SUCC (ZERO)))) = SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
reflexivity
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = plus (SUCC (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 82


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 83


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 84


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))
Cond1 : true = true
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
induction nat2(rank:16.)
=================================================
Progress: 85


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
Cond1 : true = true
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 86


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
Cond1 : true = true
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
Cond1 : true = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (ZERO) (SUCC (nat2)) = SUCC (plus (ZERO) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 87


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
Cond1 : true = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (ZERO) (SUCC (nat2)) = SUCC (plus (ZERO) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
Cond1 : true = true
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), plus (SUCC (nat3)) (SUCC (nat2)) = SUCC (plus (SUCC (nat3)) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 88


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
Cond1 : true = true
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), plus (SUCC (nat3)) (SUCC (nat2)) = SUCC (plus (SUCC (nat3)) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
Cond1 : true = true
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (plus (nat3) (SUCC (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat2(rank:7.)
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 89


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
Cond1 : true = true
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (plus (nat3) (SUCC (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
Cond1 : true = true
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (plus (nat3) (SUCC (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 90


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat1)(rank:5.)
=================================================
Progress: 91


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 92


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:5.)
=================================================
Progress: 93


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 94


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (length (nat_list2)) (nat1)
rewrite IH1 in goal at 0
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (ZERO) else ZERO = plus (ZERO) (ZERO)
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (ZERO) else ZERO = plus (ZERO) (ZERO)
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (ZERO) else ZERO = plus (ZERO) (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (length (nat_list2)) (nat1)
Prop: if gq (ZERO) (length ((ZERO::(ZERO::(ZERO::(Nil)))))) then plus (ZERO) (spec (repr ((ZERO::(ZERO::(ZERO::(Nil))))))) else ZERO = plus (ZERO) (ZERO)
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else SUCC (ZERO) = plus (SUCC (ZERO)) (ZERO)
Prop: if gq (SUCC (ZERO)) (length ((Nil))) then plus (SUCC (ZERO)) (spec (repr ((Nil)))) else ZERO = plus (ZERO) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 95


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:5.)
=================================================
Progress: 96


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 97


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), if gq (ZERO) (length (nat_list1)) then plus (ZERO) (nat1) else nat1 = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 98


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), if gq (ZERO) (length (nat_list1)) then plus (ZERO) (nat1) else nat1 = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), nat1 = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 99


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), nat1 = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 100


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
SUCC (nat3) = plus (SUCC (nat3)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 101


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
SUCC (nat3) = plus (SUCC (nat3)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 102


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
SUCC (nat3) = SUCC (plus (nat3) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
SUCC (nat3) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 103


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
nat3 : nat
IH1 : nat3 = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
SUCC (nat3) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), if gq (SUCC (nat3)) (length (nat_list1)) then plus (SUCC (nat3)) (nat1) else nat1 = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case gq (SUCC (nat3)) (length (nat_list1))(rank:6.)
=================================================
Progress: 104


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), if gq (SUCC (nat3)) (length (nat_list1)) then plus (SUCC (nat3)) (nat1) else nat1 = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> case gq (SUCC (nat3)) (length (nat_list1))(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 105


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 106


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = ZERO
Prop: plus (ZERO) (ZERO) = ZERO
Prop: plus (ZERO) (ZERO) = ZERO
Lemma List
forall (nat1:nat), plus (nat1) (ZERO) = nat1
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 107


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), plus (nat1) (ZERO) = nat1(rank : 0.)


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = nat1

---------------------------------------
forall (nat1:nat), plus (nat1) (ZERO) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 108


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = nat1

---------------------------------------
forall (nat1:nat), plus (nat1) (ZERO) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = nat1
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (ZERO) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 109


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = nat1
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (ZERO) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = nat1
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = nat2
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (ZERO) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 110


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = nat1
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = nat2
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (ZERO) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = nat1
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = nat2
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (ZERO)) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 111


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = nat1
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = nat2
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (ZERO)) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = nat1
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = nat2
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 112


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = nat1
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = nat2
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (nat2) = SUCC (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
original goal
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
lemma
forall (nat1:nat), plus (nat1) (ZERO) = nat1
tactics
assert forall (nat1:nat), plus (nat1) (ZERO) = nat1
induction nat1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 0
Tactic List : 1
rewrite lemma3 in goal at 0(rank:7.)
=================================================
Progress: 113


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 114


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = plus (SUCC (nat4)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 115


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = plus (SUCC (nat4)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 116


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (ZERO))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))) = SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (SUCC (SUCC (ZERO))) (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO)))) = plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = plus (SUCC (ZERO)) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 117


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
induction nat2(rank:16.)
=================================================
Progress: 118


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 119


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (ZERO) (SUCC (nat2)) = SUCC (plus (ZERO) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 120


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (ZERO) (SUCC (nat2)) = SUCC (plus (ZERO) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), plus (SUCC (nat3)) (SUCC (nat2)) = SUCC (plus (SUCC (nat3)) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 121


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), plus (SUCC (nat3)) (SUCC (nat2)) = SUCC (plus (SUCC (nat3)) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (plus (nat3) (SUCC (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat2(rank:7.)
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 122


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (plus (nat3) (SUCC (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
---------------------------------------
SUCC (plus (nat3) (SUCC (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 123


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:5.)
=================================================
Progress: 124


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 125


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:5.)
=================================================
Progress: 126


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 127


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:5.)
=================================================
Progress: 128


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 129


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:5.)
=================================================
Progress: 130


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 131


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat1)(rank:5.)
=================================================
Progress: 132


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 133


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case gq (nat1) (length (nat_list2))
rewrite IH1 in goal at 2
Prop: plus (SUCC (ZERO)) (ZERO) = if lq (length ((Nil))) (SUCC (ZERO)) then plus (mainNew ((Nil))) (SUCC (ZERO)) else ZERO
Prop: plus (ZERO) (ZERO) = if lq (length ((Nil))) (ZERO) then plus (mainNew ((Nil))) (ZERO) else ZERO
Prop: plus (ZERO) (ZERO) = if lq (length ((Nil))) (ZERO) then plus (mainNew ((Nil))) (ZERO) else ZERO
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case gq (nat1) (length (nat_list2))
Prop: plus (ZERO) (ZERO) = if lq (length ((Nil))) (ZERO) then plus (ZERO) (ZERO) else ZERO
Prop: plus (SUCC (SUCC (ZERO))) (ZERO) = if lq (length ((SUCC (SUCC (ZERO))::(SUCC (ZERO)::(Nil))))) (SUCC (SUCC (ZERO))) then plus (ZERO) (SUCC (SUCC (ZERO))) else ZERO
Prop: plus (ZERO) (ZERO) = if lq (length ((SUCC (ZERO)::(Nil)))) (ZERO) then plus (ZERO) (ZERO) else ZERO
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = if lq (length ((Nil))) (ZERO) then plus (ZERO) (ZERO) else ZERO
Prop: plus (ZERO) (SUCC (ZERO)) = if lq (length ((Nil))) (ZERO) then plus (SUCC (ZERO)) (ZERO) else SUCC (ZERO)
Prop: plus (ZERO) (ZERO) = if lq (length ((SUCC (ZERO)::(Nil)))) (ZERO) then plus (ZERO) (ZERO) else ZERO
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 134


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:5.)
=================================================
Progress: 135


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 136


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 137


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 138


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), gq (ZERO) (length (nat_list1)) = true -> plus (ZERO) (nat1) = if lq (length (nat_list1)) (ZERO) then plus (nat1) (ZERO) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 139


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), gq (ZERO) (length (nat_list1)) = true -> plus (ZERO) (nat1) = if lq (length (nat_list1)) (ZERO) then plus (nat1) (ZERO) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list1)) = true -> plus (SUCC (nat3)) (nat1) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 140


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list1)) = true -> plus (SUCC (nat3)) (nat1) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list1)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 141


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list1)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list1)) (SUCC (nat3))(rank:6.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 142


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat2:nat), plus (nat2) (nat1) = if lq (length ((Nil))) (nat2) then plus (mainNew ((Nil))) (nat2) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 143


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list1)) (SUCC (nat3))(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 144


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat2:nat), plus (nat2) (nat1) = if lq (length ((Nil))) (nat2) then plus (mainNew ((Nil))) (nat2) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat2:nat), plus (nat2) (nat1) = if lq (ZERO) (nat2) then plus (mainNew ((Nil))) (nat2) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:7.)
=================================================
Progress: 145


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat2:nat), plus (nat2) (nat1) = if lq (ZERO) (nat2) then plus (mainNew ((Nil))) (nat2) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
plus (ZERO) (nat1) = if lq (ZERO) (ZERO) then plus (mainNew ((Nil))) (ZERO) else nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 146


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
plus (ZERO) (nat1) = if lq (ZERO) (ZERO) then plus (mainNew ((Nil))) (ZERO) else nat1

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = if lq (ZERO) (nat3) then plus (mainNew ((Nil))) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
plus (SUCC (nat3)) (nat1) = if lq (ZERO) (SUCC (nat3)) then plus (mainNew ((Nil))) (SUCC (nat3)) else nat1

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 147


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = if lq (ZERO) (nat3) then plus (mainNew ((Nil))) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
plus (SUCC (nat3)) (nat1) = if lq (ZERO) (SUCC (nat3)) then plus (mainNew ((Nil))) (SUCC (nat3)) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = if lq (ZERO) (nat3) then plus (mainNew ((Nil))) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (plus (nat3) (nat1)) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6.)
=================================================
Progress: 148


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = if lq (ZERO) (nat3) then plus (mainNew ((Nil))) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (plus (nat3) (nat1)) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = if lq (ZERO) (nat3) then plus (mainNew ((Nil))) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (if lq (ZERO) (nat3) then plus (mainNew ((Nil))) (nat3) else nat1) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat3)(rank:7.)
=================================================
Progress: 149


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = if lq (ZERO) (nat3) then plus (mainNew ((Nil))) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (if lq (ZERO) (nat3) then plus (mainNew ((Nil))) (nat3) else nat1) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (nat3)(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = nat3
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (nat3) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 150


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = nat3
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (nat3) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (ZERO) (nat3) = false
---------------------------------------
SUCC (nat1) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (ZERO) (nat3)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (ZERO) (nat3) = false
---------------------------------------
SUCC (nat1) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 151


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (mainNew (nat_list1)) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (ZERO) (nat3) = false
---------------------------------------
SUCC (nat1) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 152


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 153


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
Cond1 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 154


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
Cond1 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
Cond1 : lq (ZERO) (nat2) = false
nat1 : nat
---------------------------------------
nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
Cond1 : lq (ZERO) (nat2) = false
nat1 : nat
---------------------------------------
nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 155


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
Cond1 : lq (ZERO) (nat2) = false
nat1 : nat
---------------------------------------
nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat2(rank:9.)
=================================================
Progress: 156


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 157


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
Cond1 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 158


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
Cond1 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
Cond1 : lq (ZERO) (nat2) = false
nat1 : nat
---------------------------------------
nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
asdf
=================================================
Progress: 159


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 3(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat1)(rank:5.)
=================================================
Progress: 160


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 161


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat1)(rank:5.)
=================================================
Progress: 162


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 163


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (length (nat_list2)) (nat1)
case gq (nat1) (length (nat_list2))
rewrite IH1 in goal at 0
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (SUCC (SUCC (SUCC (SUCC (ZERO))))) = plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
previous tactics
simpl in goal
case lq (length (nat_list2)) (nat1)
case gq (nat1) (length (nat_list2))
parent
plus (nat1) (spec (repr (nat_list2)))
lower
plus(_, spec(repr(nat_list2)))
upper
_
remove upper
spec(repr(nat_list2))
remove lower
spec(repr(nat_list2))
remove upper
plus(nat1, spec(repr(nat_list2)))
remove lower
plus(nat1, spec(repr(nat_list2)))
remove upper
plus(nat1, _)
remove lower
plus(nat1, _)
remove upper
plus(nat1, _)
remove lower
plus(nat1, _)
parent
plus (mainNew (nat_list2)) (nat1)
lower
plus(mainNew(nat_list2), _)
upper
_
remove upper
mainNew(nat_list2)
remove lower
mainNew(nat_list2)
remove upper
plus(mainNew(nat_list2), nat1)
remove lower
plus(mainNew(nat_list2), nat1)
remove upper
plus(_, nat1)
remove lower
plus(_, nat1)
remove upper
plus(_, nat1)
remove lower
plus(_, nat1)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (ZERO)) (spec (repr ((ZERO::(Nil))))) = plus (mainNew ((ZERO::(Nil)))) (SUCC (ZERO))
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 164


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction nat2(rank:14.)
=================================================
Progress: 165


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (length (nat_list2)) (nat1)
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 0
Prop: plus (ZERO) (SUCC (SUCC (SUCC (ZERO)))) = plus (SUCC (SUCC (SUCC (ZERO)))) (ZERO)
Prop: plus (SUCC (ZERO)) (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
previous tactics
simpl in goal
case lq (length (nat_list2)) (nat1)
case gq (nat1) (length (nat_list2))
parent
plus (nat1) (spec (repr (nat_list2)))
lower
plus(_, spec(repr(nat_list2)))
upper
_
remove upper
spec(repr(nat_list2))
remove lower
spec(repr(nat_list2))
remove upper
plus(nat1, spec(repr(nat_list2)))
remove lower
plus(nat1, spec(repr(nat_list2)))
remove upper
plus(nat1, _)
remove lower
plus(nat1, _)
remove upper
plus(nat1, _)
remove lower
plus(nat1, _)
parent
plus (mainNew (nat_list2)) (nat1)
lower
plus(mainNew(nat_list2), _)
upper
_
remove upper
mainNew(nat_list2)
remove lower
mainNew(nat_list2)
remove upper
plus(mainNew(nat_list2), nat1)
remove lower
plus(mainNew(nat_list2), nat1)
remove upper
plus(_, nat1)
remove lower
plus(_, nat1)
remove upper
plus(_, nat1)
remove lower
plus(_, nat1)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((ZERO::(Nil))))) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 166


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (nat1) (length (nat_list2))
case lq (length (nat_list2)) (nat1)
rewrite IH1 in goal at 0
Prop: plus (ZERO) (SUCC (ZERO)) = plus (SUCC (ZERO)) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
previous tactics
simpl in goal
case gq (nat1) (length (nat_list2))
case lq (length (nat_list2)) (nat1)
parent
plus (nat1) (spec (repr (nat_list2)))
lower
plus(_, spec(repr(nat_list2)))
upper
_
remove upper
spec(repr(nat_list2))
remove lower
spec(repr(nat_list2))
remove upper
plus(nat1, spec(repr(nat_list2)))
remove lower
plus(nat1, spec(repr(nat_list2)))
remove upper
plus(nat1, _)
remove lower
plus(nat1, _)
remove upper
plus(nat1, _)
remove lower
plus(nat1, _)
parent
plus (mainNew (nat_list2)) (nat1)
lower
plus(mainNew(nat_list2), _)
upper
_
remove upper
mainNew(nat_list2)
remove lower
mainNew(nat_list2)
remove upper
plus(mainNew(nat_list2), nat1)
remove lower
plus(mainNew(nat_list2), nat1)
remove upper
plus(_, nat1)
remove lower
plus(_, nat1)
remove upper
plus(_, nat1)
remove lower
plus(_, nat1)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((SUCC (ZERO)::(ZERO::(ZERO::(Nil))))))) = plus (mainNew ((SUCC (ZERO)::(ZERO::(ZERO::(Nil)))))) (ZERO)
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (ZERO)) (spec (repr ((SUCC (ZERO)::(Nil))))) = plus (mainNew ((SUCC (ZERO)::(Nil)))) (SUCC (ZERO))
=================================================
Progress: 167


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (nat1) (length (nat_list2))
case lq (length (nat_list2)) (nat1)
rewrite <- IH1 in goal at 0
Prop: plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO)) = plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO))))
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
previous tactics
simpl in goal
case gq (nat1) (length (nat_list2))
case lq (length (nat_list2)) (nat1)
parent
plus (nat1) (spec (repr (nat_list2)))
lower
plus(_, spec(repr(nat_list2)))
upper
_
remove upper
spec(repr(nat_list2))
remove lower
spec(repr(nat_list2))
remove upper
plus(nat1, spec(repr(nat_list2)))
remove lower
plus(nat1, spec(repr(nat_list2)))
remove upper
plus(nat1, _)
remove lower
plus(nat1, _)
remove upper
plus(nat1, _)
remove lower
plus(nat1, _)
parent
plus (mainNew (nat_list2)) (nat1)
lower
plus(mainNew(nat_list2), _)
upper
_
remove upper
mainNew(nat_list2)
remove lower
mainNew(nat_list2)
remove upper
plus(mainNew(nat_list2), nat1)
remove lower
plus(mainNew(nat_list2), nat1)
remove upper
plus(_, nat1)
remove lower
plus(_, nat1)
remove upper
plus(_, nat1)
remove lower
plus(_, nat1)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (ZERO)) (spec (repr ((SUCC (ZERO)::(Nil))))) = plus (mainNew ((SUCC (ZERO)::(Nil)))) (SUCC (ZERO))
=================================================
Progress: 168


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (length (nat_list2)) (nat1)
case gq (nat1) (length (nat_list2))
rewrite IH1 in goal at 0
Prop: plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))) = plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (length (nat_list2)) (nat1)
case gq (nat1) (length (nat_list2))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((ZERO::(Nil))))) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (SUCC (ZERO))) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (SUCC (SUCC (ZERO)))
=================================================
Progress: 169


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (length (nat_list2)) (nat1)
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 0
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (length (nat_list2)) (nat1)
case gq (nat1) (length (nat_list2))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (spec (repr ((ZERO::(Nil))))) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
=================================================
Progress: 170


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case gq (nat1) (length (nat_list2))
case lq (length (nat_list2)) (nat1)
rewrite IH1 in goal at 0
Prop: plus (SUCC (ZERO)) (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case gq (nat1) (length (nat_list2))
case lq (length (nat_list2)) (nat1)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 171


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case gq (nat1) (length (nat_list2))
case lq (length (nat_list2)) (nat1)
rewrite <- IH1 in goal at 0
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case gq (nat1) (length (nat_list2))
case lq (length (nat_list2)) (nat1)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((ZERO::(SUCC (SUCC (ZERO))::(ZERO::(ZERO::(Nil)))))))) = plus (mainNew ((ZERO::(SUCC (SUCC (ZERO))::(ZERO::(ZERO::(Nil))))))) (ZERO)
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: plus (ZERO) (spec (repr ((ZERO::(Nil))))) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
=================================================
Progress: 172


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 2
case lq (length (nat_list2)) (nat1)
rewrite IH1 in goal at 0
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
previous tactics
simpl in goal
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 2
case lq (length (nat_list2)) (nat1)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 173


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 2
case lq (length (nat_list2)) (nat1)
rewrite <- IH1 in goal at 0
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (SUCC (ZERO)) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (SUCC (ZERO)) (ZERO)
previous tactics
simpl in goal
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 2
case lq (length (nat_list2)) (nat1)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 174


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (ZERO)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), SUCC (nat3) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 175


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), SUCC (nat3) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 176


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : SUCC (nat3) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (nat3) = plus (SUCC (nat4)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 177


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : SUCC (nat3) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (nat3) = plus (SUCC (nat4)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : SUCC (nat3) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (nat3) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 178


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : SUCC (nat3) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (nat3) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : SUCC (nat3) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (nat3) = SUCC (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
Prop: ZERO = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (SUCC (ZERO))
Prop: ZERO = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (SUCC (ZERO))
Prop: ZERO = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (SUCC (ZERO)) = SUCC (SUCC (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
Prop: SUCC (ZERO) = SUCC (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: ZERO = SUCC (plus (ZERO) (ZERO))
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (plus (ZERO) (ZERO))
Prop: ZERO = SUCC (plus (SUCC (ZERO)) (ZERO))
Prop: ZERO = SUCC (plus (SUCC (SUCC (ZERO))) (ZERO))
Prop: SUCC (ZERO) = plus (ZERO) (SUCC (SUCC (ZERO)))
Prop: ZERO = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (ZERO) = SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: SUCC (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))
Prop: SUCC (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))
asdf
=================================================
Progress: 179


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), SUCC (if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list1)) (nat3)(rank:7.)
case lq (length (nat_list1)) (SUCC (nat3))(rank:7.)
=================================================
Progress: 180


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), SUCC (if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list1)) (nat3)(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list1)) (SUCC (nat3))(rank:8.)
=================================================
Progress: 181


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), SUCC (if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list1)) (SUCC (nat3))(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list1)) (nat3)(rank:8.)
=================================================
Progress: 182


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list1)) (SUCC (nat3))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (nat1) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:9.)
=================================================
Progress: 183


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list1)) (nat3)(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (nat1) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:9.)
=================================================
Progress: 184


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (nat1) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (ZERO) (SUCC (nat3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 185


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (ZERO) (SUCC (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (SUCC (nat4)) (nat3)) = plus (SUCC (nat4)) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 186


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (SUCC (nat4)) (nat3)) = plus (SUCC (nat4)) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat4) (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 187


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (nat1) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (ZERO) (SUCC (nat3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 188


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (ZERO) (SUCC (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (SUCC (nat4)) (nat3)) = plus (SUCC (nat4)) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 189


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (SUCC (nat4)) (nat3)) = plus (SUCC (nat4)) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat4) (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 190


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (nat2) (ZERO) = plus (ZERO) (nat2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 191


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (nat2) (ZERO) = plus (ZERO) (nat2)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (nat2) (ZERO) = nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:7.)
=================================================
Progress: 192


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), plus (nat2) (ZERO) = nat2

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
plus (ZERO) (ZERO) = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 193


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
plus (ZERO) (ZERO) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (ZERO) = nat3
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
plus (SUCC (nat3)) (ZERO) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 194


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (ZERO) = nat3
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
plus (SUCC (nat3)) (ZERO) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (ZERO) = nat3
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6.)
=================================================
Progress: 195


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (ZERO) = nat3
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (ZERO) = nat3
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (nat3) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 196


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (ZERO) = nat3
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (nat3) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (nat3)) = plus (SUCC (nat3)) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 197


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (nat3)) = plus (SUCC (nat3)) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (nat3)) = SUCC (plus (nat3) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13.)
induction nat2(rank:14.)
=================================================
Progress: 198


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (nat3)) = SUCC (plus (nat3) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (nat3)) = SUCC (plus (nat2) (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 199


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), plus (nat2) (SUCC (nat3)) = SUCC (plus (nat2) (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = SUCC (plus (ZERO) (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 200


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = SUCC (plus (ZERO) (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
nat4 : nat
IH2 : plus (nat4) (SUCC (nat3)) = SUCC (plus (nat4) (nat3))
Inductive2 : nat2 = SUCC (nat4)
---------------------------------------
plus (SUCC (nat4)) (SUCC (nat3)) = SUCC (plus (SUCC (nat4)) (nat3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 201


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
nat4 : nat
IH2 : plus (nat4) (SUCC (nat3)) = SUCC (plus (nat4) (nat3))
Inductive2 : nat2 = SUCC (nat4)
---------------------------------------
plus (SUCC (nat4)) (SUCC (nat3)) = SUCC (plus (SUCC (nat4)) (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
nat4 : nat
IH2 : plus (nat4) (SUCC (nat3)) = SUCC (plus (nat4) (nat3))
Inductive2 : nat2 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat4) (SUCC (nat3))) = SUCC (SUCC (plus (nat4) (nat3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 202


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
nat4 : nat
IH2 : plus (nat4) (SUCC (nat3)) = SUCC (plus (nat4) (nat3))
Inductive2 : nat2 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat4) (SUCC (nat3))) = SUCC (SUCC (plus (nat4) (nat3)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
nat4 : nat
IH2 : plus (nat4) (SUCC (nat3)) = SUCC (plus (nat4) (nat3))
Inductive2 : nat2 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat4) (nat3))) = SUCC (SUCC (plus (nat4) (nat3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 203


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat2) (nat3) = plus (nat3) (nat2)
Inductive1 : nat1 = SUCC (nat3)
nat2 : nat
nat4 : nat
IH2 : plus (nat4) (SUCC (nat3)) = SUCC (plus (nat4) (nat3))
Inductive2 : nat2 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat4) (nat3))) = SUCC (SUCC (plus (nat4) (nat3)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
original goal
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
lemma
forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
tactics
assert forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = plus (nat1) (nat2)
induction nat1
simpl in goal
induction nat2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
induction nat2
reflexivity
simpl in goal
rewrite IH2 in goal at 0
reflexivity
Deduplication: 4
Tactic List : 3
rewrite lemma3 in goal at 1(rank:13.)
rewrite lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 2(rank:13.)
=================================================
Progress: 204


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (mainNew (nat_list2)) (nat1) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 205


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (mainNew (nat_list2)) (nat1) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 2
Tactic List : 3
rewrite IH1 in goal at 0(rank:12.)
rewrite lemma3 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 206


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4.)
=================================================
Progress: 207


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
mainNew (nat_list2) = plus (nat1) (mainNew (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 0
Prop: SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: ZERO = plus (ZERO) (ZERO)
Prop: ZERO = plus (SUCC (ZERO)) (ZERO)
validate generalize_common_subterm_goal
Prop: ZERO = plus (SUCC (ZERO)) (ZERO)
Prop: ZERO = plus (ZERO) (ZERO)
Prop: SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH2 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
Prop: ZERO = plus (ZERO) (ZERO)
Prop: SUCC (ZERO) = plus (SUCC (ZERO)) (ZERO)
Prop: ZERO = plus (ZERO) (ZERO)
previous tactics
simpl in goal
rewrite IH2 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: spec (repr ((Nil))) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: spec (repr ((Nil))) = plus (mainNew ((Nil))) (ZERO)
Prop: spec (repr ((Nil))) = plus (mainNew ((Nil))) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat), nat1 = plus (nat1) (nat2)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
mainNew (nat_list2) = plus (nat1) (mainNew (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 208


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), nat1 = plus (nat1) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 209


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
mainNew (nat_list2) = plus (nat1) (mainNew (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat1(rank:9.)
intro nat_list1(rank:9.)
induction nat2(rank:18.)
rewrite lemma3 in goal at 0(rank:25.)
intro nat2(rank:9.)
=================================================
Progress: 210


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat), nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), ZERO = plus (ZERO) (nat2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 211


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), ZERO = plus (ZERO) (nat2)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), ZERO = nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:6.)
=================================================
Progress: 212


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), ZERO = nat2

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = plus (nat1) (nat2)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
---------------------------------------
ZERO = nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = ZERO
Prop: ZERO = ZERO
asdf
=================================================
Progress: 213


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro nat2(rank:9.)
intro nat_list1(rank:9.)
induction nat2(rank:18.)
rewrite lemma3 in goal at 0(rank:25.)
=================================================
Progress: 214


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 215


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat2(rank:18.)
rewrite lemma3 in goal at 0(rank:25.)
=================================================
Progress: 216


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 217


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:10.)
=================================================
Progress: 218


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 219


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 220


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 221


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 222


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:9.)
=================================================
Progress: 223


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
---------------------------------------
nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:9.)
=================================================
Progress: 224


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:10.)
=================================================
Progress: 225


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
---------------------------------------
nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
---------------------------------------
nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = plus (ZERO) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
Prop: ZERO = plus (ZERO) (ZERO)
Prop: ZERO = plus (ZERO) (ZERO)
asdf
validate generalize_common_subterm_goal
Prop: ZERO = plus (ZERO) (ZERO)
Prop: SUCC (ZERO) = plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (SUCC (ZERO)) (ZERO)
asdf
=================================================
Progress: 226


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = false -> nat1 = plus (ZERO) (nat1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 227


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = false -> nat1 = plus (ZERO) (nat1)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = plus (SUCC (nat3)) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 228


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = plus (SUCC (nat3)) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 229


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 230


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:19.)
rewrite lemma3 in goal at 0(rank:25.)
=================================================
Progress: 231


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (nat2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 232


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (nat2)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), ZERO = nat1
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = nat2

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 233


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = nat2

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), ZERO = nat1(rank : 0.)


1st goal of : forall (nat1:nat), ZERO = nat1

---------------------------------------
forall (nat1:nat), ZERO = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 234


1st goal of : forall (nat1:nat), ZERO = nat1

---------------------------------------
forall (nat1:nat), ZERO = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat), ZERO = nat1
nat1 : nat
---------------------------------------
ZERO = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = SUCC (SUCC (ZERO))
asdf
=================================================
Progress: 235


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
spec (repr (nat_list2)) = plus (nat1) (mainNew (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 236


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
spec (repr (nat_list2)) = plus (nat1) (mainNew (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
spec (repr (nat_list2)) = plus (nat1) (spec (repr (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 0
rewrite <- IH1 in goal at 0
Prop: SUCC (SUCC (ZERO)) = plus (ZERO) (SUCC (SUCC (ZERO)))
Prop: SUCC (ZERO) = plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = plus (ZERO) (ZERO)
validate generalize_common_subterm_goal
Prop: ZERO = plus (ZERO) (ZERO)
Prop: SUCC (SUCC (ZERO)) = plus (ZERO) (SUCC (SUCC (ZERO)))
Prop: SUCC (ZERO) = plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH2 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (repr ((Nil))) = plus (ZERO) (mainNew ((Nil)))
Prop: spec (repr ((Nil))) = plus (ZERO) (mainNew ((Nil)))
Prop: spec (repr ((ZERO::(ZERO::(SUCC (ZERO)::(Nil)))))) = plus (SUCC (ZERO)) (mainNew ((ZERO::(ZERO::(SUCC (ZERO)::(Nil))))))
previous tactics
simpl in goal
rewrite IH2 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: spec (repr ((ZERO::(Nil)))) = plus (mainNew ((ZERO::(Nil)))) (SUCC (ZERO))
Prop: spec (repr ((ZERO::(Nil)))) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: spec (repr ((Nil))) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 237


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- IH1 in goal at 0
Prop: ZERO = plus (ZERO) (ZERO)
Prop: ZERO = plus (ZERO) (ZERO)
Prop: ZERO = plus (ZERO) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: ZERO = plus (ZERO) (ZERO)
Prop: ZERO = plus (ZERO) (ZERO)
Prop: ZERO = plus (ZERO) (ZERO)
previous tactics
simpl in goal
rewrite IH2 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: spec (repr ((Nil))) = plus (mainNew ((Nil))) (SUCC (SUCC (SUCC (ZERO))))
Prop: spec (repr ((ZERO::(Nil)))) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: spec (repr ((SUCC (SUCC (ZERO))::(Nil)))) = plus (mainNew ((SUCC (SUCC (ZERO))::(Nil)))) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 238


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = false
---------------------------------------
spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:9.)
=================================================
Progress: 239


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 240


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 241


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 242


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:18.)
rewrite lemma3 in goal at 0(rank:25.)
=================================================
Progress: 243


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), spec (repr (nat_list1)) = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), spec (repr (nat_list1)) = plus (ZERO) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 244


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), spec (repr (nat_list1)) = plus (ZERO) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), spec (repr (nat_list1)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 245


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), spec (repr (nat_list1)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
Base3 : nat_list1 = (Nil)
---------------------------------------
spec (repr ((Nil))) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 246


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
Base3 : nat_list1 = (Nil)
---------------------------------------
spec (repr ((Nil))) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
spec (repr ((nat3::nat_list2))) = ZERO

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 247


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
spec (repr ((nat3::nat_list2))) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case gq (nat3) (length (nat_list2))(rank:8.)
rewrite IH1 in goal at 0(rank:15.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 248


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (nat3) (length (nat_list2))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
plus (nat3) (spec (repr (nat_list2))) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 0(rank:16.)
=================================================
Progress: 249


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), spec (repr (nat_list1)) = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), spec (repr ((Nil))) = plus (nat1) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 250


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), spec (repr ((Nil))) = plus (nat1) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), ZERO = plus (nat1) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 251


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), ZERO = plus (nat1) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 252


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat1 : nat
nat3 : nat
IH1 : ZERO = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
ZERO = plus (SUCC (nat3)) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 253


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat1 : nat
nat3 : nat
IH1 : ZERO = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
ZERO = plus (SUCC (nat3)) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat1 : nat
nat3 : nat
IH1 : ZERO = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
ZERO = SUCC (plus (nat3) (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 254


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat1 : nat
nat3 : nat
IH1 : ZERO = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
ZERO = SUCC (plus (nat3) (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
nat1 : nat
nat3 : nat
IH1 : ZERO = plus (nat3) (ZERO)
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
ZERO = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (plus (SUCC (ZERO)) (ZERO))
Prop: ZERO = SUCC (plus (ZERO) (ZERO))
Prop: ZERO = SUCC (plus (ZERO) (ZERO))
asdf
=================================================
Progress: 255


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (ZERO)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 256


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:7.)
=================================================
Progress: 257


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 258


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (SUCC (nat4)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 259


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (SUCC (nat4)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- lemma3 in goal at 0(rank:22.)
=================================================
Progress: 260


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
plus (nat4) (SUCC (nat3)) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH2 in goal at 0
Prop: SUCC (ZERO) = SUCC (SUCC (ZERO))
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))) = SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))
asdf
=================================================
Progress: 261


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (SUCC (plus (nat3) (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:22.)
rewrite <- lemma3 in goal at 1(rank:22.)
rewrite <- lemma3 in goal at 2(rank:22.)
=================================================
Progress: 262


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
Cond1 : true = true
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (plus (nat3) (SUCC (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
Cond1 : true = true
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (SUCC (plus (nat3) (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 263


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
Cond1 : true = true
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (SUCC (plus (nat3) (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
original goal
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
lemma
forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
tactics
assert forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
intro Cond1
induction nat1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 7
Tactic List : 4
rewrite lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 1(rank:23.)
=================================================
Progress: 264


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (plus (nat3) (SUCC (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (SUCC (plus (nat3) (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 265


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
nat1 : nat
nat3 : nat
IH1 : forall (nat2:nat), plus (nat3) (SUCC (nat2)) = SUCC (plus (nat3) (nat2))
Inductive1 : nat1 = SUCC (nat3)
---------------------------------------
forall (nat2:nat), SUCC (SUCC (plus (nat3) (nat2))) = SUCC (SUCC (plus (nat3) (nat2)))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
original goal
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
lemma
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
tactics
assert forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
induction nat1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 7
Tactic List : 4
rewrite lemma4 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 0(rank:22.)
rewrite <- lemma4 in goal at 2(rank:14.)
rewrite <- lemma4 in goal at 1(rank:22.)
=================================================
Progress: 266


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 267


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 5
Tactic List : 2
induction nat1(rank:14.)
rewrite lemma4 in goal at 0(rank:21.)
=================================================
Progress: 268


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 269


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else nat1 = plus (nat1) (nat2)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
Case1 : gq (SUCC (nat3)) (length (nat_list1)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (SUCC (ZERO))
asdf
=================================================
Progress: 270


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 271


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 272


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (if lq (length (nat_list1)) (nat3) then plus (ZERO) (nat3) else ZERO) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list1)) (nat3)(rank:9.)
=================================================
Progress: 273


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (if lq (length (nat_list1)) (nat3) then plus (ZERO) (nat3) else ZERO) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list1)) (nat3)(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
Case2 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
SUCC (nat3) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 274


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
Case2 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
SUCC (nat3) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
Case2 : lq (length (nat_list1)) (nat3) = false
---------------------------------------
SUCC (ZERO) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (length (nat_list1)) (nat3)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (ZERO)
Lemma List
forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
Case2 : lq (length (nat_list1)) (nat3) = false
---------------------------------------
SUCC (ZERO) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 275


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
Case2 : lq (length (nat_list1)) (nat3) = false
---------------------------------------
SUCC (ZERO) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)(rank : 0.)


1st goal of : forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)

---------------------------------------
forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 276


1st goal of : forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)

---------------------------------------
forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)
nat1 : nat
---------------------------------------
SUCC (ZERO) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), ZERO = nat1
End of Lemma List


1st goal of : forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)
nat1 : nat
---------------------------------------
SUCC (ZERO) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 277


1st goal of : forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)
nat1 : nat
---------------------------------------
SUCC (ZERO) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat), ZERO = nat1(rank : 0.)


1st goal of : forall (nat1:nat), ZERO = nat1

---------------------------------------
forall (nat1:nat), ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 278


1st goal of : forall (nat1:nat), ZERO = nat1

---------------------------------------
forall (nat1:nat), ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat), ZERO = nat1
nat1 : nat
---------------------------------------
ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = ZERO
Prop: ZERO = ZERO
asdf
=================================================
Progress: 279


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (ZERO) else ZERO = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case gq (nat3) (length (nat_list2))(rank:8.)
=================================================
Progress: 280


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (ZERO) else ZERO = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (nat3) (length (nat_list2))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
plus (nat3) (ZERO) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 2(rank:24.)
=================================================
Progress: 281


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (ZERO) else spec (repr (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: if gq (ZERO) (length ((SUCC (SUCC (ZERO))::(Nil)))) then plus (ZERO) (ZERO) else spec (repr ((SUCC (SUCC (ZERO))::(Nil)))) = ZERO
Prop: if gq (ZERO) (length ((SUCC (ZERO)::(Nil)))) then plus (ZERO) (ZERO) else spec (repr ((SUCC (ZERO)::(Nil)))) = ZERO
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (ZERO) else spec (repr ((Nil))) = ZERO
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = ZERO
Prop: if gq (ZERO) (length ((ZERO::(ZERO::(Nil))))) then plus (ZERO) (spec (repr ((ZERO::(ZERO::(Nil)))))) else spec (repr ((ZERO::(ZERO::(Nil))))) = ZERO
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = ZERO
Lemma List
forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 282


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 283


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), if gq (ZERO) (length (nat_list1)) then plus (ZERO) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 284


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), if gq (ZERO) (length (nat_list1)) then plus (ZERO) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), spec (repr (nat_list1)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:9.)
=================================================
Progress: 285


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), spec (repr (nat_list1)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
spec (repr ((Nil))) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 286


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
spec (repr ((Nil))) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
spec (repr ((nat2::nat_list2))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 287


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
spec (repr ((nat2::nat_list2))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if gq (nat2) (length (nat_list2)) then plus (nat2) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case gq (nat2) (length (nat_list2))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite <- IH1 in goal at 0(rank:16.)
=================================================
Progress: 288


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if gq (nat2) (length (nat_list2)) then plus (nat2) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> case gq (nat2) (length (nat_list2))(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
Case1 : gq (nat2) (length (nat_list2)) = true
---------------------------------------
plus (nat2) (spec (repr (nat_list2))) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 289


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else ZERO = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else ZERO = ZERO
Prop: if gq (SUCC (ZERO)) (length ((Nil))) then plus (SUCC (ZERO)) (spec (repr ((Nil)))) else ZERO = ZERO
Prop: if gq (SUCC (ZERO)) (length ((Nil))) then plus (SUCC (ZERO)) (spec (repr ((Nil)))) else ZERO = ZERO
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = ZERO
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = ZERO
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = ZERO
=================================================
Progress: 290


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = spec (repr (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case gq (nat3) (length (nat_list2))(rank:8.)
=================================================
Progress: 291


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = spec (repr (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (nat3) (length (nat_list2))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
plus (nat3) (spec (repr (nat_list2))) = spec (repr (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:24.)
rewrite IH1 in goal at 1(rank:24.)
rewrite IH1 in goal at 2(rank:24.)
=================================================
Progress: 292


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 293


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
true = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 294


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
true = true

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat), gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true -> SUCC (plus (nat3) (nat1)) = if lq (length ((nat4::nat_list2))) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 5
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 295


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat), gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true -> SUCC (plus (nat3) (nat1)) = if lq (length ((nat4::nat_list2))) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat), gq (nat3) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 296


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat), gq (nat3) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (length (nat_list2)) (nat3)(rank:6.)
rewrite <- lemma4 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite lemma4 in goal at 0(rank:14.)
=================================================
Progress: 297


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction nat1(rank:15.)
rewrite IH2 in goal at 0(rank:23.)
rewrite lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:15.)
=================================================
Progress: 298


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (length (nat_list2)) (nat3)(rank:7.)
rewrite lemma4 in goal at 2(rank:23.)
case lq (length (nat_list2)) (SUCC (nat3))(rank:7.)
rewrite lemma4 in goal at 0(rank:23.)
rewrite lemma4 in goal at 1(rank:23.)
=================================================
Progress: 299


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (length (nat_list2)) (SUCC (nat3))(rank:8.)
rewrite lemma4 in goal at 2(rank:24.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma4 in goal at 1(rank:24.)
=================================================
Progress: 300


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (SUCC (nat3))(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (length (nat_list2)) (nat3)(rank:8.)
rewrite lemma4 in goal at 2(rank:24.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma4 in goal at 1(rank:24.)
=================================================
Progress: 301


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (SUCC (nat3))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (nat1) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 302


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (nat1) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), mainNew (nat_list2) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
induction nat1(rank:16.)
rewrite lemma4 in goal at 0(rank:16.)
=================================================
Progress: 303


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (nat1) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 304


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (nat1) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case lq (length (nat_list2)) (nat4)(rank:8.)
rewrite lemma4 in goal at 0(rank:16.)
=================================================
Progress: 305


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:17.)
rewrite lemma4 in goal at 0(rank:25.)
=================================================
Progress: 306


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (nat3)(rank:7.)
rewrite IH2 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 1(rank:23.)
=================================================
Progress: 307


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = SUCC (plus (nat1) (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
induction nat1(rank:16.)
rewrite <- lemma4 in goal at 0(rank:24.)
rewrite <- lemma4 in goal at 1(rank:24.)
rewrite <- lemma4 in goal at 2(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 308


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), plus (nat3) (SUCC (nat1)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list2)) (nat3)(rank:7.)
rewrite lemma4 in goal at 0(rank:15.)
=================================================
Progress: 309


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), plus (nat3) (SUCC (nat1)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat3) (SUCC (nat1)) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction nat1(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite lemma4 in goal at 1(rank:24.)
rewrite lemma4 in goal at 2(rank:24.)
=================================================
Progress: 310


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 311


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 312


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = SUCC (plus (nat1) (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
rewrite <- lemma4 in goal at 1(rank:24.)
=================================================
Progress: 313


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat3) (SUCC (nat1)) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
=================================================
Progress: 314


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list2)) (nat3)(rank:8.)
case lq (length (nat_list2)) (SUCC (nat3))(rank:8.)
=================================================
Progress: 315


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = SUCC (plus (nat1) (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (SUCC (nat3))(rank:9.)
rewrite lemma4 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 0(rank:25.)
=================================================
Progress: 316


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (SUCC (nat3))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (nat3)(rank:9.)
rewrite lemma4 in goal at 0(rank:17.)
rewrite <- lemma4 in goal at 0(rank:17.)
=================================================
Progress: 317


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = SUCC (plus (nat1) (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (SUCC (nat3))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = SUCC (plus (nat1) (nat3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:18.)
rewrite lemma4 in goal at 0(rank:18.)
rewrite <- lemma4 in goal at 0(rank:18.)
=================================================
Progress: 318


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = SUCC (plus (nat1) (nat3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:18.)
rewrite lemma4 in goal at 0(rank:18.)
rewrite <- lemma4 in goal at 0(rank:18.)
=================================================
Progress: 319


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), plus (nat3) (SUCC (nat1)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list2)) (nat3)(rank:8.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 320


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = SUCC (plus (nat1) (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
induction nat1(rank:17.)
rewrite <- lemma4 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 1(rank:25.)
rewrite <- lemma4 in goal at 2(rank:25.)
rewrite IH2 in goal at 0(rank:25.)
=================================================
Progress: 321


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat4) (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat4) (SUCC (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 322


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat4) (SUCC (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = nat1

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 323


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 324


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (SUCC (ZERO)) = ZERO
Prop: SUCC (ZERO) = ZERO
asdf
=================================================
Progress: 325


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat4) (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat4) (SUCC (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 326


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat4) (SUCC (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 327


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 328


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Cond1 : gq (SUCC (nat3)) (length (nat_list1)) = true
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (SUCC (ZERO))
Prop: SUCC (ZERO) = SUCC (ZERO)
asdf
=================================================
Progress: 329


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
plus (nat3) (spec (repr (nat_list2))) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
plus (nat3) (ZERO) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (nat3) (length (nat_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (ZERO) = ZERO
Prop: plus (SUCC (ZERO)) (ZERO) = ZERO
Prop: plus (ZERO) (ZERO) = ZERO
asdf
previous tactics
simpl in goal
case gq (nat3) (length (nat_list2))
parent
plus (nat3) (spec (repr (nat_list2)))
lower
plus(_, spec(repr(nat_list2)))
upper
_
remove upper
spec(repr(nat_list2))
remove lower
spec(repr(nat_list2))
remove upper
plus(nat3, spec(repr(nat_list2)))
remove lower
plus(nat3, spec(repr(nat_list2)))
remove upper
plus(nat3, _)
remove lower
plus(nat3, _)
remove upper
plus(nat3, _)
remove lower
plus(nat3, _)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((Nil)))) = ZERO
Prop: plus (SUCC (SUCC (SUCC (ZERO)))) (spec (repr ((Nil)))) = ZERO
Prop: plus (SUCC (SUCC (ZERO))) (spec (repr ((Nil)))) = ZERO
asdf
=================================================
Progress: 330


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
plus (nat3) (spec (repr (nat_list2))) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
plus (nat3) (spec (repr (nat_list2))) = spec (repr (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (nat3) (length (nat_list2))
rewrite <- IH1 in goal at 0
Prop: plus (ZERO) (ZERO) = ZERO
Prop: plus (ZERO) (ZERO) = ZERO
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = ZERO
Prop: plus (SUCC (ZERO)) (ZERO) = ZERO
Prop: plus (ZERO) (ZERO) = ZERO
Prop: plus (ZERO) (spec (repr ((Nil)))) = spec (repr ((Nil)))
Prop: plus (ZERO) (spec (repr ((ZERO::(Nil))))) = spec (repr ((ZERO::(Nil))))
Prop: plus (ZERO) (spec (repr ((ZERO::(ZERO::(Nil)))))) = spec (repr ((ZERO::(ZERO::(Nil)))))
previous tactics
simpl in goal
case gq (nat3) (length (nat_list2))
parent
plus (nat3) (spec (repr (nat_list2)))
lower
plus(_, spec(repr(nat_list2)))
upper
_
remove upper
spec(repr(nat_list2))
remove lower
spec(repr(nat_list2))
remove upper
plus(nat3, spec(repr(nat_list2)))
remove lower
plus(nat3, spec(repr(nat_list2)))
remove upper
plus(nat3, _)
remove lower
plus(nat3, _)
remove upper
plus(nat3, _)
remove lower
plus(nat3, _)
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (spec (repr ((ZERO::(Nil))))) = ZERO
Prop: plus (ZERO) (spec (repr ((Nil)))) = ZERO
Prop: plus (ZERO) (spec (repr ((SUCC (ZERO)::(Nil))))) = ZERO
Lemma List
forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
plus (nat3) (spec (repr (nat_list2))) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
plus (nat3) (spec (repr (nat_list2))) = spec (repr (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 331


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
plus (nat3) (spec (repr (nat_list2))) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 332


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
nat1 : nat
Base2 : nat1 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat3::nat_list2)
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
plus (nat3) (spec (repr (nat_list2))) = spec (repr (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 333


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true -> plus (ZERO) (spec (repr (nat_list1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 334


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true -> plus (ZERO) (spec (repr (nat_list1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = ZERO
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (SUCC (nat2)) (spec (repr (nat_list1))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 335


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = ZERO
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (SUCC (nat2)) (spec (repr (nat_list1))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = ZERO
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat2)) (length (nat_list1)) = true -> SUCC (plus (nat2) (spec (repr (nat_list1)))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 336


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true -> plus (ZERO) (spec (repr (nat_list1))) = spec (repr (nat_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 337


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true -> plus (ZERO) (spec (repr (nat_list1))) = spec (repr (nat_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = spec (repr (nat_list1))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (SUCC (nat2)) (spec (repr (nat_list1))) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 338


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = spec (repr (nat_list1))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (SUCC (nat2)) (spec (repr (nat_list1))) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = spec (repr (nat_list1))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat2)) (length (nat_list1)) = true -> SUCC (plus (nat2) (spec (repr (nat_list1)))) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 339


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = ZERO
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat2)) (length (nat_list1)) = true -> SUCC (plus (nat2) (spec (repr (nat_list1)))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = ZERO
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat2)) (length ((Nil))) = true -> SUCC (plus (nat2) (spec (repr ((Nil))))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 340


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = spec (repr (nat_list1))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat2)) (length (nat_list1)) = true -> SUCC (plus (nat2) (spec (repr (nat_list1)))) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = spec (repr (nat_list1))
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat2)) (length ((Nil))) = true -> SUCC (plus (nat2) (spec (repr ((Nil))))) = spec (repr ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 341


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = ZERO
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat2)) (length ((Nil))) = true -> SUCC (plus (nat2) (spec (repr ((Nil))))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = ZERO
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true -> SUCC (plus (nat2) (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 342


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = spec (repr (nat_list1))
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat2)) (length ((Nil))) = true -> SUCC (plus (nat2) (spec (repr ((Nil))))) = spec (repr ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = spec (repr (nat_list1))
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true -> SUCC (plus (nat2) (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 343


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = ZERO
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true -> SUCC (plus (nat2) (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = ZERO
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = ZERO
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
SUCC (plus (nat2) (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
asdf
=================================================
Progress: 344


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = spec (repr (nat_list1))
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true -> SUCC (plus (nat2) (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true -> plus (nat1) (spec (repr (nat_list1))) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
IH1 : forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = spec (repr (nat_list1))
Inductive1 : nat1 = SUCC (nat2)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
SUCC (plus (nat2) (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
Prop: SUCC (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (ZERO)) = ZERO
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = ZERO
asdf
=================================================
Progress: 345


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if gq (nat2) (length (nat_list2)) then plus (nat2) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if gq (nat2) (length (nat_list2)) then plus (nat2) (ZERO) else ZERO = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case gq (nat2) (length (nat_list2))(rank:9.)
=================================================
Progress: 346


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if gq (nat2) (length (nat_list2)) then plus (nat2) (ZERO) else ZERO = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> case gq (nat2) (length (nat_list2))(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
Case1 : gq (nat2) (length (nat_list2)) = true
---------------------------------------
plus (nat2) (ZERO) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 2(rank:25.)
=================================================
Progress: 347


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if gq (nat2) (length (nat_list2)) then plus (nat2) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if gq (nat2) (length (nat_list2)) then plus (nat2) (ZERO) else spec (repr (nat_list2)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: if gq (ZERO) (length ((ZERO::(Nil)))) then plus (ZERO) (ZERO) else spec (repr ((ZERO::(Nil)))) = ZERO
Prop: if gq (ZERO) (length ((ZERO::(Nil)))) then plus (ZERO) (ZERO) else spec (repr ((ZERO::(Nil)))) = ZERO
Prop: if gq (SUCC (ZERO)) (length ((Nil))) then plus (SUCC (ZERO)) (ZERO) else spec (repr ((Nil))) = ZERO
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = ZERO
Prop: if gq (ZERO) (length ((SUCC (ZERO)::(Nil)))) then plus (ZERO) (spec (repr ((SUCC (ZERO)::(Nil))))) else spec (repr ((SUCC (ZERO)::(Nil)))) = ZERO
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = ZERO
asdf
=================================================
Progress: 348


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if gq (nat2) (length (nat_list2)) then plus (nat2) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if gq (nat2) (length (nat_list2)) then plus (nat2) (spec (repr (nat_list2))) else ZERO = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
validate generalize_common_subterm_goal
Prop: if gq (SUCC (SUCC (ZERO))) (length ((ZERO::(SUCC (ZERO)::(Nil))))) then plus (SUCC (SUCC (ZERO))) (spec (repr ((ZERO::(SUCC (ZERO)::(Nil)))))) else ZERO = ZERO
Prop: if gq (ZERO) (length ((ZERO::(Nil)))) then plus (ZERO) (spec (repr ((ZERO::(Nil))))) else ZERO = ZERO
Prop: if gq (SUCC (ZERO)) (length ((Nil))) then plus (SUCC (ZERO)) (spec (repr ((Nil)))) else ZERO = ZERO
asdf
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = ZERO
Prop: if gq (ZERO) (length ((SUCC (ZERO)::(ZERO::(Nil))))) then plus (ZERO) (spec (repr ((SUCC (ZERO)::(ZERO::(Nil)))))) else spec (repr ((SUCC (ZERO)::(ZERO::(Nil))))) = ZERO
Prop: if gq (SUCC (ZERO)) (length ((Nil))) then plus (SUCC (ZERO)) (spec (repr ((Nil)))) else spec (repr ((Nil))) = ZERO
asdf
=================================================
Progress: 349


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if gq (nat2) (length (nat_list2)) then plus (nat2) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if gq (nat2) (length (nat_list2)) then plus (nat2) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = spec (repr (nat_list2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case gq (nat2) (length (nat_list2))(rank:9.)
=================================================
Progress: 350


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if gq (nat2) (length (nat_list2)) then plus (nat2) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = spec (repr (nat_list2))

1 goal(s) more...

2 conjecture(s) more...
>>> case gq (nat2) (length (nat_list2))(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
Case1 : gq (nat2) (length (nat_list2)) = true
---------------------------------------
plus (nat2) (spec (repr (nat_list2))) = spec (repr (nat_list2))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:25.)
rewrite IH1 in goal at 1(rank:25.)
rewrite IH1 in goal at 2(rank:25.)
=================================================
Progress: 351


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), mainNew (nat_list2) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 352


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew ((Nil)) = SUCC (ZERO)
Prop: mainNew ((Nil)) = SUCC (SUCC (SUCC (ZERO)))
Prop: mainNew ((Nil)) = SUCC (ZERO)
Lemma List
forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 353


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:15.)
=================================================
Progress: 354


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:16.)
=================================================
Progress: 355


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), mainNew (nat_list2) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), mainNew (nat_list2) = SUCC (plus (nat1) (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:9.)
=================================================
Progress: 356


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), mainNew (nat_list2) = SUCC (plus (nat1) (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = SUCC (plus (ZERO) (nat3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 357


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = SUCC (plus (ZERO) (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew ((Nil)) = SUCC (ZERO)
Prop: mainNew ((ZERO::(ZERO::(Nil)))) = SUCC (ZERO)
Prop: mainNew ((Nil)) = SUCC (ZERO)
=================================================
Progress: 358


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat4)(rank:9.)
=================================================
Progress: 359


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:18.)
rewrite <- lemma4 in goal at 0(rank:18.)
=================================================
Progress: 360


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = SUCC (plus (nat1) (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (ZERO) (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 361


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (ZERO) (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:17.)
rewrite IH2 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 0(rank:25.)
=================================================
Progress: 362


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat3) (SUCC (nat1)) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat3) (SUCC (ZERO)) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 363


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat3) (SUCC (ZERO)) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat3) (SUCC (ZERO)) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:9.)
=================================================
Progress: 364


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat3) (SUCC (ZERO)) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:18.)
rewrite IH2 in goal at 0(rank:26.)
=================================================
Progress: 365


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 366


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 367


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = plus (nat5) (SUCC (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = plus (SUCC (nat5)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 368


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = plus (nat5) (SUCC (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = plus (SUCC (nat5)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = plus (nat5) (SUCC (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (nat5) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite <- IH3 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:23.)
rewrite lemma4 in goal at 1(rank:23.)
rewrite lemma4 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
=================================================
Progress: 369


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = SUCC (plus (nat1) (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (ZERO) (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 370


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (ZERO) (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:17.)
rewrite IH2 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 0(rank:25.)
=================================================
Progress: 371


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat3) (SUCC (nat1)) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat3) (SUCC (ZERO)) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 372


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat3) (SUCC (ZERO)) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat3) (SUCC (ZERO)) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:9.)
=================================================
Progress: 373


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat3) (SUCC (ZERO)) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:18.)
rewrite IH2 in goal at 0(rank:26.)
=================================================
Progress: 374


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list2)) (nat3)(rank:9.)
case lq (length (nat_list2)) (SUCC (nat3))(rank:9.)
=================================================
Progress: 375


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = SUCC (plus (nat1) (nat3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (SUCC (nat3))(rank:10.)
rewrite lemma4 in goal at 0(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 376


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (SUCC (nat3))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (nat3)(rank:10.)
rewrite lemma4 in goal at 0(rank:18.)
rewrite <- lemma4 in goal at 0(rank:18.)
=================================================
Progress: 377


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = SUCC (plus (nat1) (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (SUCC (nat3))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = SUCC (plus (nat1) (nat3))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:19.)
rewrite lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 0(rank:19.)
=================================================
Progress: 378


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = SUCC (plus (nat1) (nat3))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:19.)
rewrite lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 0(rank:19.)
=================================================
Progress: 379


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat1) (length ((Nil))) = true->lq (length ((Nil))) (nat1) = true->lq (length ((Nil))) (SUCC (nat1)) = false -> mainNew ((Nil)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16.)
=================================================
Progress: 380


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat1) (length ((Nil))) = true->lq (length ((Nil))) (nat1) = true->lq (length ((Nil))) (SUCC (nat1)) = false -> mainNew ((Nil)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat1) (ZERO) = true->lq (ZERO) (nat1) = true->true = false -> ZERO = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:16.)
=================================================
Progress: 381


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat1) (ZERO) = true->lq (ZERO) (nat1) = true->true = false -> ZERO = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
lq (ZERO) (nat1) = true->true = false -> ZERO = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:16.)
=================================================
Progress: 382


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat1) (ZERO) = true
---------------------------------------
lq (ZERO) (nat1) = true->true = false -> ZERO = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat1) (ZERO) = true
Cond2 : lq (ZERO) (nat1) = true
---------------------------------------
true = false -> ZERO = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:15.)
=================================================
Progress: 383


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat1) (ZERO) = true
Cond2 : lq (ZERO) (nat1) = true
---------------------------------------
true = false -> ZERO = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : gq (nat1) (length (nat_list2)) = true->lq (length (nat_list2)) (nat1) = true->lq (length (nat_list2)) (SUCC (nat1)) = false -> mainNew (nat_list2) = SUCC (nat1)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
gq (nat1) (length ((nat2::nat_list2))) = true->lq (length ((nat2::nat_list2))) (nat1) = true->lq (length ((nat2::nat_list2))) (SUCC (nat1)) = false -> mainNew ((nat2::nat_list2)) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 384


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : gq (nat1) (length (nat_list2)) = true->lq (length (nat_list2)) (nat1) = true->lq (length (nat_list2)) (SUCC (nat1)) = false -> mainNew (nat_list2) = SUCC (nat1)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
gq (nat1) (length ((nat2::nat_list2))) = true->lq (length ((nat2::nat_list2))) (nat1) = true->lq (length ((nat2::nat_list2))) (SUCC (nat1)) = false -> mainNew ((nat2::nat_list2)) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : gq (nat1) (length (nat_list2)) = true->lq (length (nat_list2)) (nat1) = true->lq (length (nat_list2)) (SUCC (nat1)) = false -> mainNew (nat_list2) = SUCC (nat1)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
gq (nat1) (SUCC (length (nat_list2))) = true->lq (SUCC (length (nat_list2))) (nat1) = true->lq (length (nat_list2)) (nat1) = false -> if lq (length (nat_list2)) (nat2) then plus (mainNew (nat_list2)) (nat2) else mainNew (nat_list2) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 385


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : gq (nat1) (length (nat_list2)) = true->lq (length (nat_list2)) (nat1) = true->lq (length (nat_list2)) (SUCC (nat1)) = false -> mainNew (nat_list2) = SUCC (nat1)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
gq (nat1) (SUCC (length (nat_list2))) = true->lq (SUCC (length (nat_list2))) (nat1) = true->lq (length (nat_list2)) (nat1) = false -> if lq (length (nat_list2)) (nat2) then plus (mainNew (nat_list2)) (nat2) else mainNew (nat_list2) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : gq (nat1) (length (nat_list2)) = true->lq (length (nat_list2)) (nat1) = true->lq (length (nat_list2)) (SUCC (nat1)) = false -> mainNew (nat_list2) = SUCC (nat1)
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : gq (nat1) (SUCC (length (nat_list2))) = true
---------------------------------------
lq (SUCC (length (nat_list2))) (nat1) = true->lq (length (nat_list2)) (nat1) = false -> if lq (length (nat_list2)) (nat2) then plus (mainNew (nat_list2)) (nat2) else mainNew (nat_list2) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 386


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : gq (nat1) (length (nat_list2)) = true->lq (length (nat_list2)) (nat1) = true->lq (length (nat_list2)) (SUCC (nat1)) = false -> mainNew (nat_list2) = SUCC (nat1)
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : gq (nat1) (SUCC (length (nat_list2))) = true
---------------------------------------
lq (SUCC (length (nat_list2))) (nat1) = true->lq (length (nat_list2)) (nat1) = false -> if lq (length (nat_list2)) (nat2) then plus (mainNew (nat_list2)) (nat2) else mainNew (nat_list2) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : gq (nat1) (length (nat_list2)) = true->lq (length (nat_list2)) (nat1) = true->lq (length (nat_list2)) (SUCC (nat1)) = false -> mainNew (nat_list2) = SUCC (nat1)
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : gq (nat1) (SUCC (length (nat_list2))) = true
Cond2 : lq (SUCC (length (nat_list2))) (nat1) = true
---------------------------------------
lq (length (nat_list2)) (nat1) = false -> if lq (length (nat_list2)) (nat2) then plus (mainNew (nat_list2)) (nat2) else mainNew (nat_list2) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 387


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : gq (nat1) (length (nat_list2)) = true->lq (length (nat_list2)) (nat1) = true->lq (length (nat_list2)) (SUCC (nat1)) = false -> mainNew (nat_list2) = SUCC (nat1)
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : gq (nat1) (SUCC (length (nat_list2))) = true
Cond2 : lq (SUCC (length (nat_list2))) (nat1) = true
---------------------------------------
lq (length (nat_list2)) (nat1) = false -> if lq (length (nat_list2)) (nat2) then plus (mainNew (nat_list2)) (nat2) else mainNew (nat_list2) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : gq (nat1) (length (nat_list2)) = true->lq (length (nat_list2)) (nat1) = true->lq (length (nat_list2)) (SUCC (nat1)) = false -> mainNew (nat_list2) = SUCC (nat1)
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : gq (nat1) (SUCC (length (nat_list2))) = true
Cond2 : lq (SUCC (length (nat_list2))) (nat1) = true
Cond3 : lq (length (nat_list2)) (nat1) = false
---------------------------------------
if lq (length (nat_list2)) (nat2) then plus (mainNew (nat_list2)) (nat2) else mainNew (nat_list2) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (length (nat_list2)) (nat2)(rank:16.)
rewrite IH1 in goal at 0(rank:26.)
rewrite IH1 in goal at 1(rank:26.)
rewrite IH1 in goal at 2(rank:26.)
rewrite <- IH1 in goal at 0(rank:26.)
=================================================
Progress: 388


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : gq (nat1) (length (nat_list2)) = true->lq (length (nat_list2)) (nat1) = true->lq (length (nat_list2)) (SUCC (nat1)) = false -> mainNew (nat_list2) = SUCC (nat1)
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : gq (nat1) (SUCC (length (nat_list2))) = true
Cond2 : lq (SUCC (length (nat_list2))) (nat1) = true
Cond3 : lq (length (nat_list2)) (nat1) = false
---------------------------------------
if lq (length (nat_list2)) (nat2) then plus (mainNew (nat_list2)) (nat2) else mainNew (nat_list2) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat2)(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (nat1) = true->lq (length (nat_list1)) (SUCC (nat1)) = false -> mainNew (nat_list1) = SUCC (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : gq (nat1) (length (nat_list2)) = true->lq (length (nat_list2)) (nat1) = true->lq (length (nat_list2)) (SUCC (nat1)) = false -> mainNew (nat_list2) = SUCC (nat1)
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : gq (nat1) (SUCC (length (nat_list2))) = true
Cond2 : lq (SUCC (length (nat_list2))) (nat1) = true
Cond3 : lq (length (nat_list2)) (nat1) = false
Case1 : lq (length (nat_list2)) (nat2) = true
---------------------------------------
plus (mainNew (nat_list2)) (nat2) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 389


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
Case1 : gq (nat2) (length (nat_list2)) = true
---------------------------------------
plus (nat2) (spec (repr (nat_list2))) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
Case1 : gq (nat2) (length (nat_list2)) = true
---------------------------------------
plus (nat2) (ZERO) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (nat2) (length (nat_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = ZERO
Prop: plus (ZERO) (ZERO) = ZERO
Prop: plus (ZERO) (ZERO) = ZERO
previous tactics
simpl in goal
case gq (nat2) (length (nat_list2))
parent
plus (nat2) (spec (repr (nat_list2)))
lower
plus(_, spec(repr(nat_list2)))
upper
_
remove upper
spec(repr(nat_list2))
remove lower
spec(repr(nat_list2))
remove upper
plus(nat2, spec(repr(nat_list2)))
remove lower
plus(nat2, spec(repr(nat_list2)))
remove upper
plus(nat2, _)
remove lower
plus(nat2, _)
remove upper
plus(nat2, _)
remove lower
plus(nat2, _)
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = ZERO
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = ZERO
Prop: plus (ZERO) (spec (repr ((ZERO::(Nil))))) = ZERO
asdf
Lemma List
forall (nat1:nat), plus (nat1) (ZERO) = ZERO
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
Case1 : gq (nat2) (length (nat_list2)) = true
---------------------------------------
plus (nat2) (ZERO) = ZERO

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 390


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
Case1 : gq (nat2) (length (nat_list2)) = true
---------------------------------------
plus (nat2) (ZERO) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat), plus (nat1) (ZERO) = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = ZERO

---------------------------------------
forall (nat1:nat), plus (nat1) (ZERO) = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat1(rank:10.)
=================================================
Progress: 391


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = ZERO

---------------------------------------
forall (nat1:nat), plus (nat1) (ZERO) = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat1(rank : 10.)


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (ZERO) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 392


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (ZERO) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = ZERO
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = ZERO
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (ZERO) = ZERO

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 393


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = ZERO
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = ZERO
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (ZERO) = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = ZERO
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = ZERO
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (ZERO)) = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 394


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = ZERO
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = ZERO
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (ZERO)) = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat), plus (nat1) (ZERO) = ZERO
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (ZERO) = ZERO
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (ZERO) = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
asdf
=================================================
Progress: 395


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
Case1 : gq (nat2) (length (nat_list2)) = true
---------------------------------------
plus (nat2) (spec (repr (nat_list2))) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
Case1 : gq (nat2) (length (nat_list2)) = true
---------------------------------------
plus (nat2) (spec (repr (nat_list2))) = spec (repr (nat_list2))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (nat2) (length (nat_list2))
rewrite <- IH1 in goal at 0
Prop: plus (ZERO) (SUCC (SUCC (SUCC (ZERO)))) = SUCC (SUCC (SUCC (ZERO)))
Prop: plus (ZERO) (ZERO) = ZERO
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)
previous tactics
simpl in goal
case gq (nat2) (length (nat_list2))
parent
plus (nat2) (spec (repr (nat_list2)))
lower
plus(_, spec(repr(nat_list2)))
upper
_
remove upper
spec(repr(nat_list2))
remove lower
spec(repr(nat_list2))
remove upper
plus(nat2, spec(repr(nat_list2)))
remove lower
plus(nat2, spec(repr(nat_list2)))
remove upper
plus(nat2, _)
remove lower
plus(nat2, _)
remove upper
plus(nat2, _)
remove lower
plus(nat2, _)
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (spec (repr ((ZERO::(Nil))))) = ZERO
Prop: plus (ZERO) (spec (repr ((ZERO::(Nil))))) = ZERO
Prop: plus (ZERO) (spec (repr ((ZERO::(Nil))))) = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
Case1 : gq (nat2) (length (nat_list2)) = true
---------------------------------------
plus (nat2) (spec (repr (nat_list2))) = spec (repr (nat_list2))

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 396


1st goal of : forall (nat1:nat) (nat_list1:nat list), if gq (nat1) (length (nat_list1)) then plus (nat1) (spec (repr (nat_list1))) else spec (repr (nat_list1)) = ZERO
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat2::nat_list2)
Case1 : gq (nat2) (length (nat_list2)) = true
---------------------------------------
plus (nat2) (spec (repr (nat_list2))) = spec (repr (nat_list2))

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:10.)
=================================================
Progress: 397


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), plus (ZERO) (nat1) = nat1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 398


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), plus (ZERO) (nat1) = nat1

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), plus (SUCC (nat3)) (nat1) = nat1

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 399


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), plus (SUCC (nat3)) (nat1) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:9.)
rewrite IH1 in goal at 0(rank:17.)
=================================================
Progress: 400


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (nat1)) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 401


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (nat1)) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
---------------------------------------
SUCC (nat1) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
asdf
previous tactics
simpl in goal
intro nat1
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = ZERO
asdf
=================================================
Progress: 402


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 403


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat1)) = true->lq (length (nat_list1)) (nat1) = false->lq (length (nat_list1)) (nat2) = true -> SUCC (nat1) = plus (mainNew (nat_list1)) (nat2)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 404


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat1)) = true->lq (length (nat_list1)) (nat1) = false->lq (length (nat_list1)) (nat2) = true -> SUCC (nat1) = plus (mainNew (nat_list1)) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat1)) = true->lq (length (nat_list1)) (nat1) = false->lq (length (nat_list1)) (nat2) = true -> SUCC (nat1) = plus (mainNew (nat_list1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat1)) = true->lq (length (nat_list1)) (nat1) = false->lq (length (nat_list1)) (nat2) = true -> SUCC (nat1) = plus (mainNew (nat_list1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:19.)
=================================================
Progress: 405


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat3)(rank:10.)
=================================================
Progress: 406


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = SUCC (plus (nat1) (nat3))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 407


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = SUCC (plus (nat1) (nat3))

5 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case lq (length (nat_list2)) (nat4)(rank:10.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 408


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:19.)
rewrite <- lemma4 in goal at 0(rank:19.)
=================================================
Progress: 409


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat3)(rank:10.)
=================================================
Progress: 410


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (nat1) (SUCC (nat3))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 411


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (nat1) (SUCC (nat3))

5 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case lq (length (nat_list2)) (nat4)(rank:10.)
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 412


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:19.)
rewrite lemma4 in goal at 0(rank:27.)
=================================================
Progress: 413


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = SUCC (plus (nat1) (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (ZERO) (nat3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 414


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (ZERO) (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:18.)
rewrite IH2 in goal at 0(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 415


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 416


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 417


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (SUCC (nat5)) (nat3))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 418


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (SUCC (nat5)) (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH3 in goal at 0(rank:15.)
rewrite lemma4 in goal at 0(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
rewrite <- lemma4 in goal at 2(rank:16.)
rewrite <- lemma4 in goal at 1(rank:24.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 419


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH3 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:16.)
rewrite <- lemma4 in goal at 2(rank:16.)
rewrite <- lemma4 in goal at 0(rank:24.)
rewrite <- lemma4 in goal at 1(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
=================================================
Progress: 420


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH3 in goal at 0(rank:16.)
rewrite IH2 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 2(rank:25.)
=================================================
Progress: 421


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (nat5) (SUCC (nat3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 1(rank:25.)
rewrite <- lemma4 in goal at 2(rank:25.)
=================================================
Progress: 422


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 423


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 8
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 424


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 13
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 425


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (nat4)(rank:7.)
rewrite IH2 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
=================================================
Progress: 426


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = plus (mainNew (nat_list2)) (nat4)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 427


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (nat4)(rank:8.)
rewrite lemma4 in goal at 0(rank:24.)
case lq (length (nat_list2)) (SUCC (nat3))(rank:8.)
=================================================
Progress: 428


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list2)) (SUCC (nat3))(rank:9.)
rewrite lemma4 in goal at 0(rank:25.)
=================================================
Progress: 429


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (SUCC (nat3))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list2)) (nat4)(rank:9.)
rewrite lemma4 in goal at 0(rank:17.)
=================================================
Progress: 430


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (SUCC (nat3))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:10.)
=================================================
Progress: 431


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:10.)
=================================================
Progress: 432


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (nat4)
case lq (length (nat_list2)) (SUCC (nat3))
rewrite lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = plus (mainNew ((Nil))) (ZERO)
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (nat4)
case lq (length (nat_list2)) (SUCC (nat3))
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 433


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:19.)
=================================================
Progress: 434


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:19.)
=================================================
Progress: 435


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (SUCC (nat3))
case lq (length (nat_list2)) (nat4)
rewrite lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (SUCC (nat3))
case lq (length (nat_list2)) (nat4)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (ZERO))) = plus (mainNew ((Nil))) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 436


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:19.)
=================================================
Progress: 437


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:19.)
=================================================
Progress: 438


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = plus (mainNew (nat_list2)) (nat4)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat3) (SUCC (nat1)) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
case lq (length (nat_list2)) (nat4)
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = plus (mainNew ((SUCC (ZERO)::(Nil)))) (ZERO)
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
case lq (length (nat_list2)) (nat4)
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((SUCC (ZERO)::(Nil)))) (ZERO)
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (SUCC (SUCC (ZERO)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = plus (mainNew (nat_list2)) (nat4)

2 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat3) (SUCC (nat1)) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 439


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = plus (mainNew (nat_list2)) (nat4)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat1(rank:15.)
intro nat3(rank:15.)
induction nat2(rank:24.)
induction nat_list1(rank:24.)
rewrite <- lemma4 in goal at 0(rank:24.)
intro nat_list1(rank:15.)
intro nat2(rank:15.)
=================================================
Progress: 440


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat3) (SUCC (nat1)) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat1(rank:15.)
intro nat3(rank:15.)
induction nat2(rank:24.)
induction nat_list1(rank:24.)
rewrite lemma4 in goal at 0(rank:32.)
intro nat_list1(rank:15.)
intro nat2(rank:15.)
=================================================
Progress: 441


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat2(rank:15.)
intro nat_list1(rank:15.)
induction nat2(rank:24.)
induction nat_list1(rank:24.)
rewrite <- lemma4 in goal at 0(rank:24.)
intro nat3(rank:15.)
=================================================
Progress: 442


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat3(rank:15.)
=================================================
Progress: 443


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat_list1(rank:15.)
induction nat2(rank:24.)
induction nat_list1(rank:24.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 444


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat2(rank:24.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 445


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat2(rank:15.)
intro nat_list1(rank:15.)
induction nat2(rank:24.)
induction nat_list1(rank:24.)
rewrite lemma4 in goal at 0(rank:32.)
intro nat3(rank:15.)
=================================================
Progress: 446


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat3(rank:15.)
=================================================
Progress: 447


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat_list1(rank:15.)
induction nat2(rank:24.)
induction nat_list1(rank:24.)
rewrite lemma4 in goal at 0(rank:32.)
=================================================
Progress: 448


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat2(rank:24.)
rewrite lemma4 in goal at 0(rank:32.)
=================================================
Progress: 449


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat3(rank:15.)
=================================================
Progress: 450


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:16.)
=================================================
Progress: 451


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat2(rank:24.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 452


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:15.)
induction nat_list1(rank:24.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 453


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat2(rank:24.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 454


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat3(rank:15.)
=================================================
Progress: 455


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:16.)
=================================================
Progress: 456


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat2(rank:24.)
rewrite lemma4 in goal at 0(rank:32.)
=================================================
Progress: 457


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:15.)
induction nat_list1(rank:24.)
rewrite lemma4 in goal at 0(rank:32.)
=================================================
Progress: 458


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat2(rank:24.)
rewrite lemma4 in goal at 0(rank:32.)
=================================================
Progress: 459


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:16.)
=================================================
Progress: 460


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 461


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:16.)
=================================================
Progress: 462


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 463


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 464


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 465


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 466


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 467


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:15.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 468


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:15.)
rewrite lemma4 in goal at 0(rank:32.)
=================================================
Progress: 469


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:16.)
=================================================
Progress: 470


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:16.)
=================================================
Progress: 471


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true->lq (length (nat_list1)) (ZERO) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (ZERO) (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:15.)
=================================================
Progress: 472


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true->lq (length (nat_list1)) (ZERO) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (ZERO) (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (SUCC (nat4)) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 473


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (SUCC (nat4)) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:16.)
=================================================
Progress: 474


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true->lq (length (nat_list1)) (ZERO) = false->lq (length (nat_list1)) (nat3) = true -> plus (ZERO) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:15.)
=================================================
Progress: 475


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true->lq (length (nat_list1)) (ZERO) = false->lq (length (nat_list1)) (nat3) = true -> plus (ZERO) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> plus (SUCC (nat4)) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 476


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> plus (SUCC (nat4)) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:16.)
=================================================
Progress: 477


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (length ((Nil))) = true->lq (length ((Nil))) (nat2) = false->lq (length ((Nil))) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16.)
=================================================
Progress: 478


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (length ((Nil))) = true->lq (length ((Nil))) (nat2) = false->lq (length ((Nil))) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16.)
=================================================
Progress: 479


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((SUCC (ZERO)::(Nil)))) (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((Nil))) (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (SUCC (SUCC (ZERO)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 480


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
intro nat1(rank:17.)
intro nat3(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
intro nat_list1(rank:17.)
intro nat2(rank:17.)
=================================================
Progress: 481


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
intro nat1(rank:17.)
intro nat3(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
intro nat_list1(rank:17.)
intro nat2(rank:17.)
=================================================
Progress: 482


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((SUCC (ZERO)::(Nil)))) (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = plus (mainNew ((Nil))) (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) = plus (mainNew ((Nil))) (ZERO)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))) = plus (mainNew ((ZERO::(Nil)))) (SUCC (ZERO))
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 483


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
intro nat1(rank:17.)
intro nat3(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
intro nat_list1(rank:17.)
intro nat2(rank:17.)
=================================================
Progress: 484


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
intro nat1(rank:17.)
intro nat3(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
intro nat_list1(rank:17.)
intro nat2(rank:17.)
=================================================
Progress: 485


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat4)) (length ((Nil))) = true->lq (length ((Nil))) (SUCC (nat4)) = false->lq (length ((Nil))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16.)
=================================================
Progress: 486


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat4)) (length ((Nil))) = true->lq (length ((Nil))) (SUCC (nat4)) = false->lq (length ((Nil))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16.)
=================================================
Progress: 487


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (length ((Nil))) = true->lq (length ((Nil))) (nat2) = false->lq (length ((Nil))) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:16.)
=================================================
Progress: 488


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (length ((Nil))) = true->lq (length ((Nil))) (nat2) = false->lq (length ((Nil))) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:16.)
=================================================
Progress: 489


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat4)) (length ((Nil))) = true->lq (length ((Nil))) (SUCC (nat4)) = false->lq (length ((Nil))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:16.)
=================================================
Progress: 490


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat4)) (length ((Nil))) = true->lq (length ((Nil))) (SUCC (nat4)) = false->lq (length ((Nil))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:16.)
=================================================
Progress: 491


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:16.)
=================================================
Progress: 492


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:16.)
=================================================
Progress: 493


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:15.)
=================================================
Progress: 494


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (SUCC (nat4)) (length ((nat5::nat_list2))) = true->lq (length ((nat5::nat_list2))) (SUCC (nat4)) = false->lq (length ((nat5::nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew ((nat5::nat_list2))) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 495


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (SUCC (nat4)) (length ((nat5::nat_list2))) = true->lq (length ((nat5::nat_list2))) (SUCC (nat4)) = false->lq (length ((nat5::nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew ((nat5::nat_list2))) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (nat4) (length (nat_list2)) = true->lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 496


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (nat4) (length (nat_list2)) = true->lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 497


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
---------------------------------------
lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 498


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
---------------------------------------
lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
---------------------------------------
SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (nat5)(rank:16.)
rewrite IH2 in goal at 0(rank:26.)
rewrite <- lemma4 in goal at 0(rank:32.)
=================================================
Progress: 499


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:15.)
=================================================
Progress: 500


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (SUCC (nat4)) (length ((nat5::nat_list2))) = true->lq (length ((nat5::nat_list2))) (SUCC (nat4)) = false->lq (length ((nat5::nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew ((nat5::nat_list2))) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 501


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (SUCC (nat4)) (length ((nat5::nat_list2))) = true->lq (length ((nat5::nat_list2))) (SUCC (nat4)) = false->lq (length ((nat5::nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew ((nat5::nat_list2))) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (nat4) (length (nat_list2)) = true->lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 502


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (nat4) (length (nat_list2)) = true->lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 503


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
---------------------------------------
lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 504


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
---------------------------------------
lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
---------------------------------------
SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (length (nat_list2)) (nat5)(rank:16.)
rewrite <- lemma4 in goal at 0(rank:32.)
rewrite IH2 in goal at 0(rank:26.)
rewrite lemma4 in goal at 0(rank:32.)
=================================================
Progress: 505


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:16.)
=================================================
Progress: 506


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:16.)
=================================================
Progress: 507


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
---------------------------------------
SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat5)(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
Case1 : lq (length (nat_list2)) (nat5) = true
---------------------------------------
SUCC (SUCC (plus (nat4) (nat1))) = plus (plus (mainNew (nat_list2)) (nat5)) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:25.)
rewrite IH2 in goal at 0(rank:27.)
=================================================
Progress: 508


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
---------------------------------------
SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat5)(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
Case1 : lq (length (nat_list2)) (nat5) = true
---------------------------------------
SUCC (plus (nat4) (SUCC (nat1))) = plus (plus (mainNew (nat_list2)) (nat5)) (nat3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:27.)
rewrite lemma4 in goal at 0(rank:33.)
rewrite <- lemma4 in goal at 0(rank:33.)
=================================================
Progress: 509


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:17.)
=================================================
Progress: 510


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:17.)
=================================================
Progress: 511


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 512


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 513


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (SUCC (nat5)) (nat3))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 514


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (SUCC (nat5)) (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH3 in goal at 0(rank:15.)
rewrite lemma4 in goal at 0(rank:16.)
rewrite IH2 in goal at 0(rank:24.)
rewrite <- lemma4 in goal at 2(rank:16.)
rewrite <- lemma4 in goal at 1(rank:24.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 515


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH3 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:16.)
rewrite <- lemma4 in goal at 2(rank:16.)
rewrite <- lemma4 in goal at 0(rank:24.)
rewrite <- lemma4 in goal at 1(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
=================================================
Progress: 516


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH3 in goal at 0(rank:16.)
rewrite IH2 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 2(rank:25.)
=================================================
Progress: 517


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (nat5) (SUCC (nat3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 1(rank:25.)
rewrite <- lemma4 in goal at 2(rank:25.)
=================================================
Progress: 518


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 519


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 8
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 520


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
true = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 14
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 521


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
true = true

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 9
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 522


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (nat4)(rank:6.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- lemma4 in goal at 0(rank:22.)
=================================================
Progress: 523


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = plus (mainNew (nat_list2)) (nat4)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite IH2 in goal at 0(rank:23.)
=================================================
Progress: 524


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (nat4)(rank:7.)
rewrite lemma4 in goal at 0(rank:23.)
case lq (length (nat_list2)) (SUCC (nat3))(rank:7.)
=================================================
Progress: 525


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat4)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list2)) (SUCC (nat3))(rank:8.)
rewrite lemma4 in goal at 0(rank:24.)
=================================================
Progress: 526


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (SUCC (nat3))(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list2)) (nat4)(rank:8.)
rewrite lemma4 in goal at 0(rank:16.)
=================================================
Progress: 527


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat4)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (SUCC (nat3))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:9.)
=================================================
Progress: 528


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:9.)
=================================================
Progress: 529


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (nat4)
case lq (length (nat_list2)) (SUCC (nat3))
rewrite lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (SUCC (SUCC (ZERO)))
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (nat4)
case lq (length (nat_list2)) (SUCC (nat3))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((SUCC (SUCC (SUCC (ZERO)))::(Nil)))) (ZERO)
=================================================
Progress: 530


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (SUCC (nat3))
case lq (length (nat_list2)) (nat4)
rewrite lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (SUCC (SUCC (ZERO)))) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (SUCC (nat3))
case lq (length (nat_list2)) (nat4)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 531


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = plus (mainNew (nat_list2)) (nat4)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat3) (SUCC (nat1)) = plus (mainNew (nat_list2)) (nat4)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
reflexivity
intro nat1
case lq (length (nat_list2)) (nat4)
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((ZERO::(SUCC (SUCC (ZERO))::(Nil))))) (ZERO)
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
reflexivity
intro nat1
case lq (length (nat_list2)) (nat4)
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
=================================================
Progress: 532


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat4)(rank:9.)
=================================================
Progress: 533


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:10.)
=================================================
Progress: 534


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (SUCC (nat3))
rewrite lemma4 in goal at 0
case lq (length (nat_list2)) (nat4)
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (SUCC (nat3))
rewrite lemma4 in goal at 0
case lq (length (nat_list2)) (nat4)
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (ZERO)) = plus (mainNew ((SUCC (ZERO)::(Nil)))) (ZERO)
=================================================
Progress: 535


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = nat1
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (nat1) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
asdf
=================================================
Progress: 536


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat4)(rank:10.)
=================================================
Progress: 537


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:11.)
=================================================
Progress: 538


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (SUCC (nat3))
rewrite lemma4 in goal at 0
case lq (length (nat_list2)) (nat4)
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (SUCC (nat3))
rewrite lemma4 in goal at 0
case lq (length (nat_list2)) (nat4)
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 539


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro nat2(rank:17.)
intro nat_list1(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
intro nat3(rank:17.)
=================================================
Progress: 540


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 541


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat_list1(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 542


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 543


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro nat2(rank:17.)
intro nat_list1(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
intro nat3(rank:17.)
=================================================
Progress: 544


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 545


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat_list1(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 546


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 547


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro nat2(rank:17.)
intro nat_list1(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
intro nat3(rank:17.)
=================================================
Progress: 548


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 549


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat_list1(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 550


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 551


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro nat2(rank:17.)
intro nat_list1(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
intro nat3(rank:17.)
=================================================
Progress: 552


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 553


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat_list1(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 554


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 555


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))) = ZERO
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = ZERO
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = ZERO
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 556


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:17.)
intro nat3(rank:17.)
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:34.)
intro nat2(rank:17.)
=================================================
Progress: 557


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:17.)
intro nat3(rank:17.)
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
intro nat2(rank:17.)
=================================================
Progress: 558


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
rewrite lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (ZERO)) = ZERO
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (ZERO)
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: plus (ZERO) (SUCC (ZERO)) = ZERO
Prop: plus (ZERO) (SUCC (ZERO)) = ZERO
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 559


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:17.)
intro nat3(rank:17.)
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
intro nat2(rank:17.)
=================================================
Progress: 560


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:17.)
intro nat3(rank:17.)
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:34.)
intro nat2(rank:17.)
=================================================
Progress: 561


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 562


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:18.)
=================================================
Progress: 563


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 564


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:17.)
induction nat_list1(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 565


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 566


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 567


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:18.)
=================================================
Progress: 568


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 569


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:17.)
induction nat_list1(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 570


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 571


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 572


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:18.)
=================================================
Progress: 573


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 574


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:17.)
induction nat_list1(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 575


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 576


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 577


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:18.)
=================================================
Progress: 578


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 579


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:17.)
induction nat_list1(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 580


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 581


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:17.)
intro nat3(rank:17.)
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 582


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 583


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 584


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:17.)
intro nat3(rank:17.)
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 585


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 586


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 587


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:17.)
intro nat3(rank:17.)
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 588


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 589


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 590


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:17.)
intro nat3(rank:17.)
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 591


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 592


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 593


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:18.)
=================================================
Progress: 594


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 595


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:18.)
=================================================
Progress: 596


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 597


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:18.)
=================================================
Progress: 598


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 599


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:18.)
=================================================
Progress: 600


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 601


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 602


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:18.)
=================================================
Progress: 603


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 604


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 605


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:18.)
=================================================
Progress: 606


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 607


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 608


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:18.)
=================================================
Progress: 609


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 610


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat3(rank:17.)
=================================================
Progress: 611


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:18.)
=================================================
Progress: 612


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 613


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 614


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 615


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 616


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 617


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 618


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 619


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 620


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 621


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 622


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 623


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 624


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 625


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 626


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 627


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 628


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 629


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 630


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 631


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 632


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 633


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 634


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 635


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 636


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 637


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:17.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 638


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:17.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 639


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:17.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 640


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:17.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 641


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 642


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:18.)
=================================================
Progress: 643


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 644


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 645


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 646


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 647


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 648


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:18.)
=================================================
Progress: 649


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:18.)
=================================================
Progress: 650


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 651


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 652


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:18.)
=================================================
Progress: 653


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:18.)
=================================================
Progress: 654


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 655


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 656


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat2 : nat
nat3 : nat
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:18.)
=================================================
Progress: 657


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = false -> nat1 = plus (ZERO) (nat1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 658


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = false -> nat1 = plus (ZERO) (nat1)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = plus (SUCC (nat3)) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 659


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = plus (SUCC (nat3)) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 660


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 661


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 662


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:9.)
rewrite lemma3 in goal at 0(rank:25.)
=================================================
Progress: 663


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:9.)
=================================================
Progress: 664


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
nat1 = SUCC (plus (nat1) (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat_list1
intro Cond1
intro Cond2
intro nat1
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (plus (ZERO) (ZERO))
Prop: ZERO = SUCC (plus (ZERO) (ZERO))
Prop: ZERO = SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))
asdf
previous tactics
simpl in goal
intro nat_list1
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (plus (ZERO) (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (plus (ZERO) (SUCC (ZERO)))
asdf
=================================================
Progress: 665


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = false -> nat1 = plus (ZERO) (nat1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 666


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = false -> nat1 = plus (ZERO) (nat1)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = plus (SUCC (nat3)) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 667


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = plus (SUCC (nat3)) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 668


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 669


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
---------------------------------------
lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 670


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:9.)
=================================================
Progress: 671


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
nat1 = SUCC (plus (nat1) (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat_list1
intro Cond1
intro Cond2
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (plus (ZERO) (ZERO))
Prop: ZERO = SUCC (plus (ZERO) (ZERO))
Prop: ZERO = SUCC (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
intro nat_list1
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (plus (SUCC (ZERO)) (ZERO))
Prop: ZERO = SUCC (plus (SUCC (ZERO)) (ZERO))
Prop: SUCC (ZERO) = SUCC (plus (ZERO) (SUCC (ZERO)))
asdf
=================================================
Progress: 672


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = false -> nat1 = plus (ZERO) (nat1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 673


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = false -> nat1 = plus (ZERO) (nat1)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = plus (SUCC (nat3)) (nat1)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 674


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = plus (SUCC (nat3)) (nat1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 675


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 676


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list1)) = false -> nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite <- IH1 in goal at 0(rank:19.)
=================================================
Progress: 677


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:19.)
rewrite lemma3 in goal at 0(rank:25.)
=================================================
Progress: 678


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (nat2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 679


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = plus (ZERO) (nat2)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat1) (nat2)
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
ZERO = nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = SUCC (SUCC (SUCC (ZERO)))
Prop: ZERO = ZERO
asdf
=================================================
Progress: 680


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = SUCC (plus (nat1) (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = SUCC (plus (ZERO) (nat3))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 681


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = SUCC (plus (ZERO) (nat3))

5 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
plus (SUCC (nat5)) (SUCC (nat3)) = SUCC (plus (SUCC (nat5)) (nat3))

4 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 682


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
plus (SUCC (nat5)) (SUCC (nat3)) = SUCC (plus (SUCC (nat5)) (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat5) (SUCC (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite IH3 in goal at 0(rank:17.)
rewrite <- IH3 in goal at 0(rank:17.)
rewrite <- lemma4 in goal at 0(rank:26.)
rewrite <- lemma4 in goal at 2(rank:18.)
rewrite <- lemma4 in goal at 1(rank:26.)
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 683


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat5) (SUCC (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH3 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat5) (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 684


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat5) (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), mainNew (nat_list2) = SUCC (plus (nat1) (nat3))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 2
induction nat1(rank:17.)
rewrite <- lemma4 in goal at 0(rank:25.)
=================================================
Progress: 685


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), mainNew (nat_list2) = SUCC (plus (nat1) (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = SUCC (plus (ZERO) (nat3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 686


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = SUCC (plus (ZERO) (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew ((Nil)) = SUCC (ZERO)
Prop: mainNew ((SUCC (ZERO)::(Nil))) = SUCC (ZERO)
Prop: mainNew ((Nil)) = SUCC (SUCC (ZERO))
=================================================
Progress: 687


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = SUCC (plus (nat1) (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = SUCC (plus (ZERO) (nat3))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 688


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = SUCC (plus (ZERO) (nat3))

5 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
plus (SUCC (nat5)) (SUCC (nat3)) = SUCC (plus (SUCC (nat5)) (nat3))

4 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 689


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
plus (SUCC (nat5)) (SUCC (nat3)) = SUCC (plus (SUCC (nat5)) (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat5) (SUCC (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite IH3 in goal at 0(rank:17.)
rewrite <- IH3 in goal at 0(rank:17.)
rewrite <- lemma4 in goal at 0(rank:26.)
rewrite <- lemma4 in goal at 2(rank:18.)
rewrite <- lemma4 in goal at 1(rank:26.)
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 690


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat5) (SUCC (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH3 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat5) (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 691


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat5) (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 2
case lq (length (nat_list2)) (nat4)(rank:9.)
rewrite lemma4 in goal at 0(rank:17.)
=================================================
Progress: 692


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:18.)
rewrite lemma4 in goal at 0(rank:26.)
=================================================
Progress: 693


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat4)(rank:10.)
=================================================
Progress: 694


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:19.)
rewrite <- lemma4 in goal at 0(rank:19.)
=================================================
Progress: 695


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 696


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (SUCC (ZERO))
=================================================
Progress: 697


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:11.)
=================================================
Progress: 698


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 699


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (ZERO) = plus (mainNew ((ZERO::(ZERO::(Nil))))) (ZERO)
Prop: SUCC (ZERO) = plus (mainNew ((ZERO::(Nil)))) (SUCC (ZERO))
=================================================
Progress: 700


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 701


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

5 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

4 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 702


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat3)(rank:11.)
=================================================
Progress: 703


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = SUCC (plus (nat1) (nat3))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 704


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = SUCC (plus (nat1) (nat3))

6 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

5 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case lq (length (nat_list2)) (nat4)(rank:11.)
rewrite <- lemma4 in goal at 0(rank:27.)
=================================================
Progress: 705


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
=================================================
Progress: 706


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then SUCC (plus (nat1) (nat3)) else mainNew ((nat4::nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat3)(rank:11.)
=================================================
Progress: 707


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat3) then plus (nat1) (SUCC (nat3)) else mainNew ((nat4::nat_list2))

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat3)(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (nat1) (SUCC (nat3))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 708


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (nat1) (SUCC (nat3))

6 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

5 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case lq (length (nat_list2)) (nat4)(rank:11.)
rewrite lemma4 in goal at 0(rank:19.)
=================================================
Progress: 709


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:20.)
rewrite lemma4 in goal at 0(rank:28.)
=================================================
Progress: 710


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat4)(rank:11.)
=================================================
Progress: 711


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
=================================================
Progress: 712


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 713


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

5 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

4 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 714


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (SUCC (nat5)) (nat3))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 715


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (SUCC (nat5)) (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH3 in goal at 0(rank:16.)
rewrite lemma4 in goal at 0(rank:17.)
rewrite IH2 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 2(rank:17.)
rewrite <- lemma4 in goal at 1(rank:25.)
rewrite <- lemma4 in goal at 0(rank:25.)
=================================================
Progress: 716


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH3 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:17.)
rewrite <- lemma4 in goal at 2(rank:17.)
rewrite <- lemma4 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 1(rank:25.)
rewrite IH2 in goal at 0(rank:25.)
rewrite IH2 in goal at 1(rank:25.)
rewrite IH2 in goal at 2(rank:25.)
=================================================
Progress: 717


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH3 in goal at 0(rank:17.)
rewrite IH2 in goal at 0(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
rewrite <- lemma4 in goal at 2(rank:26.)
=================================================
Progress: 718


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (nat5) (SUCC (nat3)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:26.)
rewrite <- lemma4 in goal at 0(rank:26.)
rewrite <- lemma4 in goal at 1(rank:26.)
rewrite <- lemma4 in goal at 2(rank:26.)
=================================================
Progress: 719


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 720


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 8
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 721


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 13
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 722


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (nat4)(rank:8.)
rewrite IH2 in goal at 0(rank:16.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 723


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:17.)
rewrite IH2 in goal at 0(rank:25.)
=================================================
Progress: 724


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (nat4)(rank:9.)
rewrite lemma4 in goal at 0(rank:25.)
case lq (length (nat_list2)) (SUCC (nat3))(rank:9.)
=================================================
Progress: 725


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list2)) (SUCC (nat3))(rank:10.)
rewrite lemma4 in goal at 0(rank:26.)
=================================================
Progress: 726


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (SUCC (nat3))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list2)) (nat4)(rank:10.)
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 727


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (SUCC (nat3))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:11.)
=================================================
Progress: 728


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:11.)
=================================================
Progress: 729


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
Case3 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (nat4)
case lq (length (nat_list2)) (SUCC (nat3))
rewrite lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = plus (mainNew ((SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(ZERO::(Nil))))))) (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (nat4)
case lq (length (nat_list2)) (SUCC (nat3))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (SUCC (SUCC (ZERO)))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (ZERO))) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 730


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (SUCC (nat3))
case lq (length (nat_list2)) (nat4)
rewrite lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = plus (mainNew ((ZERO::(ZERO::(Nil))))) (ZERO)
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (SUCC (nat3))
case lq (length (nat_list2)) (nat4)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
Prop: plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))) = plus (mainNew ((Nil))) (SUCC (ZERO))
=================================================
Progress: 731


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = plus (mainNew (nat_list2)) (nat4)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat3) (SUCC (nat1)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
case lq (length (nat_list2)) (nat4)
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))) = plus (mainNew ((SUCC (SUCC (ZERO))::(SUCC (ZERO)::(Nil))))) (ZERO)
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
case lq (length (nat_list2)) (nat4)
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((ZERO::(ZERO::(SUCC (ZERO)::(ZERO::(Nil))))))) (SUCC (ZERO))
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 732


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true->lq (length (nat_list1)) (ZERO) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (ZERO) (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 733


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true->lq (length (nat_list1)) (ZERO) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (ZERO) (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (SUCC (nat4)) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 734


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (SUCC (nat4)) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:18.)
=================================================
Progress: 735


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true->lq (length (nat_list1)) (ZERO) = false->lq (length (nat_list1)) (nat3) = true -> plus (ZERO) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 736


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true->lq (length (nat_list1)) (ZERO) = false->lq (length (nat_list1)) (nat3) = true -> plus (ZERO) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> plus (SUCC (nat4)) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 737


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> plus (SUCC (nat4)) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:18.)
=================================================
Progress: 738


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true->lq (length (nat_list1)) (ZERO) = false->lq (length (nat_list1)) (nat3) = true -> plus (ZERO) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 739


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true->lq (length (nat_list1)) (ZERO) = false->lq (length (nat_list1)) (nat3) = true -> plus (ZERO) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> plus (SUCC (nat4)) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 740


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> plus (SUCC (nat4)) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:18.)
=================================================
Progress: 741


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true->lq (length (nat_list1)) (ZERO) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (ZERO) (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 742


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), gq (ZERO) (length (nat_list1)) = true->lq (length (nat_list1)) (ZERO) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (ZERO) (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (SUCC (nat4)) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 743


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (SUCC (nat4)) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:18.)
=================================================
Progress: 744


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (length ((Nil))) = true->lq (length ((Nil))) (nat2) = false->lq (length ((Nil))) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 745


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (length ((Nil))) = true->lq (length ((Nil))) (nat2) = false->lq (length ((Nil))) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 746


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (length ((Nil))) = true->lq (length ((Nil))) (nat2) = false->lq (length ((Nil))) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 747


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (length ((Nil))) = true->lq (length ((Nil))) (nat2) = false->lq (length ((Nil))) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 748


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
gq (ZERO) (ZERO) = true->lq (ZERO) (ZERO) = false->lq (ZERO) (nat3) = true -> SUCC (plus (ZERO) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 749


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
gq (ZERO) (ZERO) = true->lq (ZERO) (ZERO) = false->lq (ZERO) (nat3) = true -> SUCC (plus (ZERO) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
gq (SUCC (nat4)) (ZERO) = true->lq (ZERO) (SUCC (nat4)) = false->lq (ZERO) (nat3) = true -> SUCC (plus (SUCC (nat4)) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 750


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
gq (SUCC (nat4)) (ZERO) = true->lq (ZERO) (SUCC (nat4)) = false->lq (ZERO) (nat3) = true -> SUCC (plus (SUCC (nat4)) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 751


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:16.)
=================================================
Progress: 752


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
original goal
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
lemma
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
tactics
assert forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
intro nat1
intro nat3
induction nat2
discriminate
simpl in goal
intro Cond1
discriminate
Deduplication: 8
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:17.)
=================================================
Progress: 753


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
discriminate
simpl in goal
intro Cond1
discriminate
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))) = ZERO
Prop: plus (ZERO) (SUCC (SUCC (SUCC (SUCC (ZERO))))) = ZERO
Prop: plus (ZERO) (SUCC (ZERO)) = ZERO
previous tactics
discriminate
simpl in goal
intro Cond1
discriminate
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = ZERO
=================================================
Progress: 754


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
gq (ZERO) (ZERO) = true->lq (ZERO) (ZERO) = false->lq (ZERO) (nat3) = true -> plus (ZERO) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 755


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
gq (ZERO) (ZERO) = true->lq (ZERO) (ZERO) = false->lq (ZERO) (nat3) = true -> plus (ZERO) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> plus (nat4) (SUCC (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
gq (SUCC (nat4)) (ZERO) = true->lq (ZERO) (SUCC (nat4)) = false->lq (ZERO) (nat3) = true -> plus (SUCC (nat4)) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 756


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> plus (nat4) (SUCC (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
gq (SUCC (nat4)) (ZERO) = true->lq (ZERO) (SUCC (nat4)) = false->lq (ZERO) (nat3) = true -> plus (SUCC (nat4)) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> plus (nat4) (SUCC (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 757


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> plus (nat4) (SUCC (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> plus (nat4) (SUCC (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 758


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> plus (nat4) (SUCC (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

2 goal(s) more...

2 conjecture(s) more...
original goal
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
lemma
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
tactics
assert forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
intro nat1
intro nat3
induction nat2
discriminate
simpl in goal
intro Cond1
discriminate
Deduplication: 8
Tactic List : 0
previous tactics
discriminate
simpl in goal
intro Cond1
discriminate
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))) = ZERO
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = ZERO
=================================================
Progress: 759


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
gq (ZERO) (ZERO) = true->lq (ZERO) (ZERO) = false->lq (ZERO) (nat3) = true -> plus (ZERO) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 760


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
gq (ZERO) (ZERO) = true->lq (ZERO) (ZERO) = false->lq (ZERO) (nat3) = true -> plus (ZERO) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> plus (nat4) (SUCC (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
gq (SUCC (nat4)) (ZERO) = true->lq (ZERO) (SUCC (nat4)) = false->lq (ZERO) (nat3) = true -> plus (SUCC (nat4)) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 761


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> plus (nat4) (SUCC (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
gq (SUCC (nat4)) (ZERO) = true->lq (ZERO) (SUCC (nat4)) = false->lq (ZERO) (nat3) = true -> plus (SUCC (nat4)) (SUCC (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> plus (nat4) (SUCC (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 762


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> plus (nat4) (SUCC (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> plus (nat4) (SUCC (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:16.)
=================================================
Progress: 763


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> plus (nat4) (SUCC (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
original goal
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
lemma
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
tactics
assert forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3
intro nat1
intro nat3
induction nat2
discriminate
simpl in goal
intro Cond1
discriminate
Deduplication: 8
Tactic List : 1
rewrite lemma4 in goal at 0(rank:17.)
=================================================
Progress: 764


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
discriminate
simpl in goal
intro Cond1
discriminate
rewrite lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (SUCC (ZERO))) = ZERO
Prop: SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
previous tactics
discriminate
simpl in goal
intro Cond1
discriminate
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = ZERO
=================================================
Progress: 765


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
gq (ZERO) (ZERO) = true->lq (ZERO) (ZERO) = false->lq (ZERO) (nat3) = true -> SUCC (plus (ZERO) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 766


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
gq (ZERO) (ZERO) = true->lq (ZERO) (ZERO) = false->lq (ZERO) (nat3) = true -> SUCC (plus (ZERO) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
gq (SUCC (nat4)) (ZERO) = true->lq (ZERO) (SUCC (nat4)) = false->lq (ZERO) (nat3) = true -> SUCC (plus (SUCC (nat4)) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 767


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
gq (SUCC (nat4)) (ZERO) = true->lq (ZERO) (SUCC (nat4)) = false->lq (ZERO) (nat3) = true -> SUCC (plus (SUCC (nat4)) (nat1)) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 768


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 769


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : gq (nat4) (ZERO) = true->lq (ZERO) (nat4) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (nat1)) = nat3
Inductive1 : nat2 = SUCC (nat4)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

0 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

2 goal(s) more...

2 conjecture(s) more...
original goal
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
lemma
forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
tactics
assert forall (nat1:nat) (nat2:nat) (nat3:nat), gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3
intro nat1
intro nat3
induction nat2
discriminate
simpl in goal
intro Cond1
discriminate
Deduplication: 8
Tactic List : 0
previous tactics
discriminate
simpl in goal
intro Cond1
discriminate
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
=================================================
Progress: 770


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = plus (mainNew ((Nil))) (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = plus (mainNew ((SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil))))) (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (SUCC (ZERO))) = plus (mainNew ((ZERO::(ZERO::(ZERO::(Nil)))))) (ZERO)
=================================================
Progress: 771


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = plus (mainNew ((Nil))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
Prop: plus (ZERO) (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO)))) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 772


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (SUCC (ZERO))) = plus (mainNew ((Nil))) (ZERO)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (SUCC (ZERO))))) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((SUCC (ZERO)::(Nil)))) (ZERO)
=================================================
Progress: 773


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
nat_list1 : nat list
Cond1 : gq (nat2) (length (nat_list1)) = true
Cond2 : lq (length (nat_list1)) (nat2) = false
Cond3 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (ZERO)) = plus (mainNew ((Nil))) (SUCC (SUCC (ZERO)))
Prop: SUCC (plus (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((ZERO::(SUCC (ZERO)::(Nil))))) (ZERO)
=================================================
Progress: 774


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

4 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 775


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 776


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat4)(rank:11.)
=================================================
Progress: 777


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:12.)
=================================================
Progress: 778


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = false
nat1 : nat
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (SUCC (nat3))
rewrite lemma4 in goal at 0
case lq (length (nat_list2)) (nat4)
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (SUCC (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (SUCC (SUCC (ZERO)))) = plus (mainNew ((ZERO::(ZERO::(Nil))))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
intro nat1
rewrite IH2 in goal at 0
case lq (length (nat_list2)) (SUCC (nat3))
rewrite lemma4 in goal at 0
case lq (length (nat_list2)) (nat4)
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = plus (mainNew ((Nil))) (SUCC (SUCC (SUCC (ZERO))))
=================================================
Progress: 779


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat4)) (length ((Nil))) = true->lq (length ((Nil))) (SUCC (nat4)) = false->lq (length ((Nil))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 780


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat4)) (length ((Nil))) = true->lq (length ((Nil))) (SUCC (nat4)) = false->lq (length ((Nil))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 781


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat4)) (length ((Nil))) = true->lq (length ((Nil))) (SUCC (nat4)) = false->lq (length ((Nil))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 782


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
---------------------------------------
forall (nat_list1:nat list), gq (SUCC (nat4)) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat4)) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat4)) (length ((Nil))) = true->lq (length ((Nil))) (SUCC (nat4)) = false->lq (length ((Nil))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 783


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (length ((Nil))) = true->lq (length ((Nil))) (nat2) = false->lq (length ((Nil))) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 784


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (length ((Nil))) = true->lq (length ((Nil))) (nat2) = false->lq (length ((Nil))) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 785


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (length ((Nil))) = true->lq (length ((Nil))) (nat2) = false->lq (length ((Nil))) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 786


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (length ((Nil))) = true->lq (length ((Nil))) (nat2) = false->lq (length ((Nil))) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 787


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat4)) (length ((Nil))) = true->lq (length ((Nil))) (SUCC (nat4)) = false->lq (length ((Nil))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 788


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat4)) (length ((Nil))) = true->lq (length ((Nil))) (SUCC (nat4)) = false->lq (length ((Nil))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 789


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat4)) (length ((Nil))) = true->lq (length ((Nil))) (SUCC (nat4)) = false->lq (length ((Nil))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 790


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (SUCC (nat4)) (length ((Nil))) = true->lq (length ((Nil))) (SUCC (nat4)) = false->lq (length ((Nil))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew ((Nil))) (nat3)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 791


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 792


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 793


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 794


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
gq (nat2) (ZERO) = true->lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 795


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 796


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (SUCC (nat4)) (length ((nat5::nat_list2))) = true->lq (length ((nat5::nat_list2))) (SUCC (nat4)) = false->lq (length ((nat5::nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew ((nat5::nat_list2))) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 797


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (SUCC (nat4)) (length ((nat5::nat_list2))) = true->lq (length ((nat5::nat_list2))) (SUCC (nat4)) = false->lq (length ((nat5::nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew ((nat5::nat_list2))) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (nat4) (length (nat_list2)) = true->lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 798


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (nat4) (length (nat_list2)) = true->lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 799


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
---------------------------------------
lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 800


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
---------------------------------------
lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
---------------------------------------
SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (nat5)(rank:18.)
rewrite IH2 in goal at 0(rank:28.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 801


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 802


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (SUCC (nat4)) (length ((nat5::nat_list2))) = true->lq (length ((nat5::nat_list2))) (SUCC (nat4)) = false->lq (length ((nat5::nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew ((nat5::nat_list2))) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 803


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (SUCC (nat4)) (length ((nat5::nat_list2))) = true->lq (length ((nat5::nat_list2))) (SUCC (nat4)) = false->lq (length ((nat5::nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew ((nat5::nat_list2))) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (nat4) (length (nat_list2)) = true->lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 804


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (nat4) (length (nat_list2)) = true->lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 805


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
---------------------------------------
lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 806


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
---------------------------------------
lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
---------------------------------------
SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case lq (length (nat_list2)) (nat5)(rank:18.)
rewrite <- lemma4 in goal at 0(rank:34.)
rewrite IH2 in goal at 0(rank:28.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 807


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 808


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (SUCC (nat4)) (length ((nat5::nat_list2))) = true->lq (length ((nat5::nat_list2))) (SUCC (nat4)) = false->lq (length ((nat5::nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew ((nat5::nat_list2))) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 809


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (SUCC (nat4)) (length ((nat5::nat_list2))) = true->lq (length ((nat5::nat_list2))) (SUCC (nat4)) = false->lq (length ((nat5::nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew ((nat5::nat_list2))) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (nat4) (length (nat_list2)) = true->lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 810


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (nat4) (length (nat_list2)) = true->lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 811


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
---------------------------------------
lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 812


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
---------------------------------------
lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
---------------------------------------
SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
case lq (length (nat_list2)) (nat5)(rank:18.)
rewrite <- lemma4 in goal at 0(rank:34.)
rewrite IH2 in goal at 0(rank:28.)
rewrite lemma4 in goal at 0(rank:34.)
=================================================
Progress: 813


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 814


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = false->lq (ZERO) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (SUCC (nat4)) (length ((nat5::nat_list2))) = true->lq (length ((nat5::nat_list2))) (SUCC (nat4)) = false->lq (length ((nat5::nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew ((nat5::nat_list2))) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 815


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (SUCC (nat4)) (length ((nat5::nat_list2))) = true->lq (length ((nat5::nat_list2))) (SUCC (nat4)) = false->lq (length ((nat5::nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew ((nat5::nat_list2))) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (nat4) (length (nat_list2)) = true->lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 816


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
---------------------------------------
gq (nat4) (length (nat_list2)) = true->lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 817


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
lq (length (nat_list2)) (nat4) = false->lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
---------------------------------------
lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 818


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
---------------------------------------
lq (SUCC (length (nat_list2))) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
---------------------------------------
SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
case lq (length (nat_list2)) (nat5)(rank:18.)
rewrite IH2 in goal at 0(rank:28.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 819


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:18.)
=================================================
Progress: 820


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:18.)
=================================================
Progress: 821


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:18.)
=================================================
Progress: 822


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
---------------------------------------
lq (ZERO) (nat2) = false->lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:18.)
=================================================
Progress: 823


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
---------------------------------------
SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat5)(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
Case1 : lq (length (nat_list2)) (nat5) = true
---------------------------------------
SUCC (SUCC (plus (nat4) (nat1))) = plus (plus (mainNew (nat_list2)) (nat5)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:27.)
rewrite IH2 in goal at 0(rank:29.)
=================================================
Progress: 824


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
---------------------------------------
SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat5)(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
Case1 : lq (length (nat_list2)) (nat5) = true
---------------------------------------
SUCC (plus (nat4) (SUCC (nat1))) = plus (plus (mainNew (nat_list2)) (nat5)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:29.)
rewrite lemma4 in goal at 0(rank:35.)
rewrite <- lemma4 in goal at 0(rank:35.)
=================================================
Progress: 825


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
---------------------------------------
SUCC (plus (nat4) (SUCC (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat5)(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat4) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (plus (nat4) (SUCC (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
Case1 : lq (length (nat_list2)) (nat5) = true
---------------------------------------
SUCC (plus (nat4) (SUCC (nat1))) = plus (plus (mainNew (nat_list2)) (nat5)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:29.)
rewrite lemma4 in goal at 0(rank:35.)
rewrite <- lemma4 in goal at 0(rank:35.)
=================================================
Progress: 826


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
---------------------------------------
SUCC (SUCC (plus (nat4) (nat1))) = plus (if lq (length (nat_list2)) (nat5) then plus (mainNew (nat_list2)) (nat5) else mainNew (nat_list2)) (nat3)

0 goal(s) more...

3 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat5)(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat3 : nat
nat2 : nat
nat4 : nat
IH1 : forall (nat_list1:nat list), gq (nat4) (length (nat_list1)) = true->lq (length (nat_list1)) (nat4) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat4) (nat1)) = plus (mainNew (nat_list1)) (nat3)
Inductive1 : nat2 = SUCC (nat4)
nat_list1 : nat list
nat5 : nat
nat_list2 : nat list
IH2 : gq (SUCC (nat4)) (length (nat_list2)) = true->lq (length (nat_list2)) (SUCC (nat4)) = false->lq (length (nat_list2)) (nat3) = true -> SUCC (SUCC (plus (nat4) (nat1))) = plus (mainNew (nat_list2)) (nat3)
Inductive2 : nat_list1 = (nat5::nat_list2)
Cond1 : gq (nat4) (length (nat_list2)) = true
Cond2 : lq (length (nat_list2)) (nat4) = false
Cond3 : lq (SUCC (length (nat_list2))) (nat3) = true
Case1 : lq (length (nat_list2)) (nat5) = true
---------------------------------------
SUCC (SUCC (plus (nat4) (nat1))) = plus (plus (mainNew (nat_list2)) (nat5)) (nat3)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:27.)
rewrite IH2 in goal at 0(rank:29.)
=================================================
Progress: 827


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:19.)
=================================================
Progress: 828


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:19.)
=================================================
Progress: 829


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:19.)
=================================================
Progress: 830


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat3) = true -> SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:19.)
=================================================
Progress: 831


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
nat1 = SUCC (nat1)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = SUCC (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))
Prop: SUCC (ZERO) = SUCC (plus (ZERO) (SUCC (ZERO)))
asdf
=================================================
Progress: 832


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = SUCC (plus (nat1) (nat3))

5 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = SUCC (plus (ZERO) (nat3))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 833


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = SUCC (plus (ZERO) (nat3))

6 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
plus (SUCC (nat5)) (SUCC (nat3)) = SUCC (plus (SUCC (nat5)) (nat3))

5 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 834


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
plus (SUCC (nat5)) (SUCC (nat3)) = SUCC (plus (SUCC (nat5)) (nat3))

5 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat5) (SUCC (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite IH3 in goal at 0(rank:18.)
rewrite <- IH3 in goal at 0(rank:18.)
rewrite <- lemma4 in goal at 0(rank:27.)
rewrite <- lemma4 in goal at 2(rank:19.)
rewrite <- lemma4 in goal at 1(rank:27.)
rewrite lemma4 in goal at 0(rank:19.)
=================================================
Progress: 835


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat5) (SUCC (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

5 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH3 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat5) (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 836


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat5) (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

5 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), mainNew (nat_list2) = SUCC (plus (nat1) (nat3))

4 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 2
induction nat1(rank:18.)
rewrite <- lemma4 in goal at 0(rank:26.)
=================================================
Progress: 837


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), mainNew (nat_list2) = SUCC (plus (nat1) (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = SUCC (plus (ZERO) (nat3))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 838


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = SUCC (plus (ZERO) (nat3))

5 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (nat3) = true
Case2 : lq (length (nat_list2)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
mainNew (nat_list2) = SUCC (nat3)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: mainNew ((Nil)) = SUCC (ZERO)
Prop: mainNew ((SUCC (ZERO)::(Nil))) = SUCC (ZERO)
Prop: mainNew ((SUCC (SUCC (ZERO))::(SUCC (ZERO)::(Nil)))) = SUCC (ZERO)
=================================================
Progress: 839


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = SUCC (plus (nat1) (nat3))

5 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = SUCC (plus (ZERO) (nat3))

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 840


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = SUCC (plus (ZERO) (nat3))

6 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
plus (SUCC (nat5)) (SUCC (nat3)) = SUCC (plus (SUCC (nat5)) (nat3))

5 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 841


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
plus (SUCC (nat5)) (SUCC (nat3)) = SUCC (plus (SUCC (nat5)) (nat3))

5 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat5) (SUCC (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite IH3 in goal at 0(rank:18.)
rewrite <- IH3 in goal at 0(rank:18.)
rewrite <- lemma4 in goal at 0(rank:27.)
rewrite <- lemma4 in goal at 2(rank:19.)
rewrite <- lemma4 in goal at 1(rank:27.)
rewrite lemma4 in goal at 0(rank:19.)
=================================================
Progress: 842


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat5) (SUCC (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

5 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH3 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat5) (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 843


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
nat5 : nat
IH3 : plus (nat5) (SUCC (nat3)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat5) (nat3))) = SUCC (SUCC (plus (nat5) (nat3)))

5 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 2
case lq (length (nat_list2)) (nat4)(rank:10.)
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 844


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:19.)
rewrite lemma4 in goal at 0(rank:27.)
=================================================
Progress: 845


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat4)(rank:11.)
=================================================
Progress: 846


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:20.)
rewrite <- lemma4 in goal at 0(rank:20.)
=================================================
Progress: 847


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat1)) = true->lq (length (nat_list1)) (nat1) = false->lq (length (nat_list1)) (nat2) = true -> SUCC (nat1) = plus (mainNew (nat_list1)) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat1)) = true->lq (length (nat_list1)) (nat1) = false->lq (length (nat_list1)) (nat2) = true -> SUCC (nat1) = plus (mainNew (nat_list1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat1)) = true->lq (length (nat_list1)) (nat1) = false->lq (length (nat_list1)) (nat2) = true -> SUCC (nat1) = plus (mainNew (nat_list1)) (nat2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat1)) = true->lq (length (nat_list1)) (nat1) = false->lq (length (nat_list1)) (nat2) = true -> SUCC (nat1) = plus (mainNew (nat_list1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:19.)
=================================================
Progress: 848


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 849


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (SUCC (SUCC (ZERO)))) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 850


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:12.)
=================================================
Progress: 851


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 852


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

7 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (mainNew (nat_list2)) (nat4)

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (SUCC (SUCC (SUCC (ZERO))))
Prop: SUCC (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (SUCC (SUCC (ZERO))) = plus (mainNew ((ZERO::(ZERO::(ZERO::(Nil)))))) (ZERO)
=================================================
Progress: 853


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 854


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 855


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat3(rank:19.)
=================================================
Progress: 856


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat3(rank:19.)
=================================================
Progress: 857


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat3(rank:19.)
=================================================
Progress: 858


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat3(rank:19.)
=================================================
Progress: 859


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = SUCC (nat1)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:11.)
=================================================
Progress: 860


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), nat1 = SUCC (nat1)

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
nat1 = SUCC (nat1)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite <- IH1 in goal at 0
intro nat1
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
asdf
=================================================
Progress: 861


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
nat1 = SUCC (plus (nat3) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false -> nat1 = plus (nat2) (nat1)
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = false -> nat1 = plus (nat3) (nat1)
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Cond2 : gq (SUCC (nat3)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
nat1 = SUCC (nat1)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = SUCC (SUCC (ZERO))
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (plus (ZERO) (ZERO))
Prop: SUCC (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))
Prop: SUCC (ZERO) = SUCC (plus (ZERO) (SUCC (ZERO)))
asdf
=================================================
Progress: 862


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 863


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (SUCC (SUCC (ZERO))) = plus (mainNew ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil))))) (ZERO)
=================================================
Progress: 864


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:12.)
=================================================
Progress: 865


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 866


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

7 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (mainNew (nat_list2)) (nat4)

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (SUCC (ZERO))) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (ZERO) = plus (mainNew ((ZERO::(Nil)))) (ZERO)
Prop: SUCC (SUCC (ZERO)) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 867


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

5 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat4)(rank:12.)
=================================================
Progress: 868


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list2)) (nat4) then plus (mainNew (nat_list2)) (nat4) else mainNew (nat_list2)

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat4)(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (mainNew (nat_list2)) (nat4)

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:21.)
rewrite <- lemma4 in goal at 0(rank:21.)
=================================================
Progress: 869


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = ZERO
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = SUCC (SUCC (ZERO))
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = ZERO
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = ZERO
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = ZERO
=================================================
Progress: 870


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
rewrite lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = ZERO
=================================================
Progress: 871


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> plus (nat2) (SUCC (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
rewrite lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
Prop: SUCC (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) = ZERO
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))) = ZERO
=================================================
Progress: 872


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (plus (nat2) (nat1)) = nat3

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat2) (nat1)) = plus (mainNew (nat_list1)) (nat3)
nat1 : nat
nat2 : nat
nat3 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : gq (nat2) (ZERO) = true
Cond2 : lq (ZERO) (nat2) = false
Cond3 : lq (ZERO) (nat3) = true
---------------------------------------
plus (nat2) (SUCC (nat1)) = nat3

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (SUCC (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = ZERO
Prop: plus (ZERO) (SUCC (ZERO)) = ZERO
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = SUCC (ZERO)
Prop: SUCC (plus (SUCC (ZERO)) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = ZERO
=================================================
Progress: 873


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

5 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 874


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (nat3)) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true -> plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else mainNew (nat_list1)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (nat3) (length (nat_list1)) = true -> plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else mainNew (nat_list1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), gq (SUCC (nat3)) (length (nat_list2)) = true -> SUCC (plus (nat3) (nat1)) = if lq (length (nat_list2)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else mainNew (nat_list2)
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : gq (nat3) (length (nat_list2)) = true
Case1 : lq (length (nat_list2)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list2)) (nat3) = false
Case3 : lq (length (nat_list2)) (nat4) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = plus (mainNew (nat_list2)) (nat4)

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (SUCC (SUCC (ZERO)))) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (SUCC (SUCC (ZERO))) = plus (mainNew ((Nil))) (ZERO)
Prop: SUCC (ZERO) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 875


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat1)) = true->lq (length (nat_list1)) (nat1) = false->lq (length (nat_list1)) (nat2) = true -> SUCC (nat1) = plus (mainNew (nat_list1)) (nat2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat1)) = true->lq (length (nat_list1)) (nat1) = false->lq (length (nat_list1)) (nat2) = true -> SUCC (nat1) = plus (mainNew (nat_list1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat1)) = true->lq (length (nat_list1)) (nat1) = false->lq (length (nat_list1)) (nat2) = true -> SUCC (nat1) = plus (mainNew (nat_list1)) (nat2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), gq (nat1) (length (nat_list1)) = true->lq (length (nat_list1)) (SUCC (nat1)) = true->lq (length (nat_list1)) (nat1) = false->lq (length (nat_list1)) (nat2) = true -> SUCC (nat1) = plus (mainNew (nat_list1)) (nat2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:20.)
=================================================
Progress: 876


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:20.)
=================================================
Progress: 877


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (nat3) = true->lq (length (nat_list1)) (SUCC (nat2)) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:20.)
=================================================
Progress: 878


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> plus (nat1) (SUCC (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:20.)
=================================================
Progress: 879


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (nat2) (length (nat_list1)) = true->lq (length (nat_list1)) (nat2) = false->lq (length (nat_list1)) (SUCC (nat2)) = true->lq (length (nat_list1)) (nat3) = true -> SUCC (plus (nat1) (nat2)) = plus (mainNew (nat_list1)) (nat3)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:20.)
=================================================
Progress: 880


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 0
Prop: plus (ZERO) (ZERO) = if lq (length ((Nil))) (ZERO) then plus (ZERO) (ZERO) else ZERO
Prop: plus (SUCC (ZERO)) (ZERO) = if lq (length ((ZERO::(ZERO::(ZERO::(Nil)))))) (SUCC (ZERO)) then plus (ZERO) (SUCC (ZERO)) else ZERO
Prop: plus (SUCC (ZERO)) (ZERO) = if lq (length ((Nil))) (SUCC (ZERO)) then plus (ZERO) (SUCC (ZERO)) else ZERO
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (ZERO) = if lq (length ((Nil))) (SUCC (ZERO)) then plus (ZERO) (SUCC (ZERO)) else ZERO
Prop: plus (ZERO) (ZERO) = if lq (length ((SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(Nil)))))) (ZERO) then plus (ZERO) (ZERO) else ZERO
Prop: plus (ZERO) (SUCC (SUCC (SUCC (ZERO)))) = if lq (length ((Nil))) (ZERO) then plus (SUCC (SUCC (SUCC (ZERO)))) (ZERO) else SUCC (SUCC (SUCC (ZERO)))
previous tactics
simpl in goal
case gq (nat1) (length (nat_list2))
parent
plus (nat1) (spec (repr (nat_list2)))
lower
plus(_, spec(repr(nat_list2)))
upper
_
remove upper
spec(repr(nat_list2))
remove lower
spec(repr(nat_list2))
remove upper
plus(nat1, spec(repr(nat_list2)))
remove lower
plus(nat1, spec(repr(nat_list2)))
remove upper
plus(nat1, _)
remove lower
plus(nat1, _)
remove upper
plus(nat1, _)
remove lower
plus(nat1, _)
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((Nil)))) = if lq (length ((Nil))) (ZERO) then plus (mainNew ((Nil))) (ZERO) else mainNew ((Nil))
Prop: plus (ZERO) (spec (repr ((ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))))) = if lq (length ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) (ZERO) then plus (mainNew ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) (ZERO) else mainNew ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))
Prop: plus (ZERO) (spec (repr ((Nil)))) = if lq (length ((Nil))) (ZERO) then plus (mainNew ((Nil))) (ZERO) else mainNew ((Nil))
=================================================
Progress: 881


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:5.)
=================================================
Progress: 882


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 883


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 20.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (length (nat_list2)) (nat1)
rewrite <- IH1 in goal at 1
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else SUCC (ZERO) = plus (SUCC (ZERO)) (ZERO)
Prop: if gq (SUCC (ZERO)) (length ((ZERO::(ZERO::(Nil))))) then plus (SUCC (ZERO)) (spec (repr ((ZERO::(ZERO::(Nil)))))) else ZERO = plus (ZERO) (SUCC (ZERO))
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else ZERO = plus (ZERO) (ZERO)
validate generalize_common_subterm_goal
Prop: if gq (ZERO) (length ((ZERO::(Nil)))) then plus (ZERO) (spec (repr ((ZERO::(Nil))))) else ZERO = plus (ZERO) (ZERO)
Prop: if gq (ZERO) (length ((ZERO::(ZERO::(Nil))))) then plus (ZERO) (spec (repr ((ZERO::(ZERO::(Nil)))))) else ZERO = plus (ZERO) (ZERO)
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else ZERO = plus (ZERO) (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (length (nat_list2)) (nat1)
Prop: if gq (SUCC (ZERO)) (length ((Nil))) then plus (SUCC (ZERO)) (ZERO) else ZERO = plus (ZERO) (SUCC (ZERO))
Prop: if gq (ZERO) (length ((SUCC (SUCC (ZERO))::(Nil)))) then plus (ZERO) (ZERO) else ZERO = plus (ZERO) (ZERO)
Prop: if gq (ZERO) (length ((ZERO::(Nil)))) then plus (ZERO) (SUCC (SUCC (ZERO))) else SUCC (SUCC (ZERO)) = plus (SUCC (SUCC (ZERO))) (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 884


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 885


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true -> if gq (ZERO) (length (nat_list1)) then plus (ZERO) (spec (repr (nat_list1))) else nat1 = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 886


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true -> if gq (ZERO) (length (nat_list1)) then plus (ZERO) (spec (repr (nat_list1))) else nat1 = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list1)) then plus (SUCC (nat3)) (spec (repr (nat_list1))) else nat1 = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 887


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list1)) then plus (SUCC (nat3)) (spec (repr (nat_list1))) else nat1 = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), lq (length ((Nil))) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length ((Nil))) then plus (SUCC (nat3)) (spec (repr ((Nil)))) else nat1 = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 888


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), lq (length ((Nil))) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length ((Nil))) then plus (SUCC (nat3)) (spec (repr ((Nil)))) else nat1 = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat3) (ZERO)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 889


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat3) (ZERO)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (ZERO)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 890


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (ZERO)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 891


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (SUCC (SUCC (ZERO))) (ZERO) = SUCC (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = ZERO
Prop: plus (ZERO) (ZERO) = ZERO
t is here


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
duplicated tactic
assert forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
intro Cond1
induction nat1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 892


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : -1.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:8.)
=================================================
Progress: 893


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 894


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 895


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (SUCC (nat4)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 896


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (SUCC (nat4)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:14.)
rewrite lemma3 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 897


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
plus (nat4) (SUCC (nat3)) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite lemma3 in goal at 0
reflexivity
reflexivity
simpl in goal
rewrite IH2 in goal at 0
Prop: SUCC (ZERO) = SUCC (SUCC (ZERO))
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite lemma3 in goal at 0
reflexivity
reflexivity
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: plus (ZERO) (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (plus (ZERO) (ZERO)) = SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))
asdf
=================================================
Progress: 898


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (spec (repr (nat_list1))) else nat1 = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (ZERO)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (SUCC (plus (nat3) (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:23.)
rewrite lemma3 in goal at 1(rank:23.)
rewrite lemma3 in goal at 2(rank:23.)
=================================================
Progress: 899


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 20.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:5.)
=================================================
Progress: 900


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 901


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 20.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:5.)
=================================================
Progress: 902


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else mainNew (nat_list2) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 903


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (length (nat_list2)) (nat1)
rewrite <- IH1 in goal at 3
case gq (nat1) (length (nat_list2))
rewrite IH1 in goal at 0
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (length (nat_list2)) (nat1)
rewrite <- IH1 in goal at 3
case gq (nat1) (length (nat_list2))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (mainNew ((ZERO::(Nil)))) = plus (spec (repr ((ZERO::(Nil))))) (ZERO)
Prop: plus (SUCC (SUCC (ZERO))) (mainNew ((Nil))) = plus (spec (repr ((Nil)))) (SUCC (SUCC (ZERO)))
Prop: plus (ZERO) (mainNew ((ZERO::(Nil)))) = plus (spec (repr ((ZERO::(Nil))))) (ZERO)
=================================================
Progress: 904


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (length (nat_list2)) (nat1)
rewrite <- IH1 in goal at 3
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 0
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (SUCC (SUCC (SUCC (SUCC (ZERO))))) = plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (ZERO)
Prop: plus (ZERO) (SUCC (ZERO)) = plus (SUCC (ZERO)) (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (length (nat_list2)) (nat1)
rewrite <- IH1 in goal at 3
case gq (nat1) (length (nat_list2))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (mainNew ((Nil))) = plus (spec (repr ((Nil)))) (ZERO)
Prop: plus (ZERO) (mainNew ((Nil))) = plus (spec (repr ((Nil)))) (ZERO)
Prop: plus (ZERO) (mainNew ((Nil))) = plus (spec (repr ((Nil)))) (ZERO)
=================================================
Progress: 905


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat1)(rank:5.)
=================================================
Progress: 906


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 907


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 20.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat1)(rank:5.)
=================================================
Progress: 908


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 909


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 1
case lq (length (nat_list2)) (nat1)
rewrite IH1 in goal at 0
Prop: plus (ZERO) (SUCC (ZERO)) = plus (SUCC (ZERO)) (ZERO)
Prop: plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (ZERO) = plus (ZERO) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
Prop: plus (ZERO) (SUCC (ZERO)) = plus (SUCC (ZERO)) (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 1
case lq (length (nat_list2)) (nat1)
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (ZERO)
=================================================
Progress: 910


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 1
case lq (length (nat_list2)) (nat1)
rewrite <- IH1 in goal at 0
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (ZERO) (ZERO) = plus (ZERO) (ZERO)
Prop: plus (SUCC (ZERO)) (ZERO) = plus (ZERO) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 1
case lq (length (nat_list2)) (nat1)
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (SUCC (ZERO))
Prop: plus (SUCC (ZERO)) (spec (repr ((ZERO::(Nil))))) = plus (mainNew ((ZERO::(Nil)))) (SUCC (ZERO))
Prop: plus (SUCC (SUCC (ZERO))) (spec (repr ((Nil)))) = plus (mainNew ((Nil))) (SUCC (SUCC (ZERO)))
=================================================
Progress: 911


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 20.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case gq (nat1) (length (nat_list2))
rewrite <- IH1 in goal at 2
Prop: plus (ZERO) (ZERO) = if lq (length ((Nil))) (ZERO) then plus (spec (repr ((Nil)))) (ZERO) else ZERO
Prop: plus (ZERO) (ZERO) = if lq (length ((Nil))) (ZERO) then plus (spec (repr ((Nil)))) (ZERO) else ZERO
Prop: plus (ZERO) (ZERO) = if lq (length ((ZERO::(Nil)))) (ZERO) then plus (spec (repr ((ZERO::(Nil))))) (ZERO) else ZERO
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case gq (nat1) (length (nat_list2))
Prop: plus (ZERO) (ZERO) = if lq (length ((Nil))) (ZERO) then plus (ZERO) (ZERO) else ZERO
Prop: plus (ZERO) (ZERO) = if lq (length ((ZERO::(Nil)))) (ZERO) then plus (ZERO) (ZERO) else ZERO
Prop: plus (SUCC (SUCC (ZERO))) (ZERO) = if lq (length ((Nil))) (SUCC (SUCC (ZERO))) then plus (ZERO) (SUCC (SUCC (ZERO))) else ZERO
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 912


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:5.)
=================================================
Progress: 913


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (spec (repr (nat_list2))) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 914


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 915


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 916


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), plus (ZERO) (nat1) = if lq (length (nat_list1)) (ZERO) then plus (nat1) (ZERO) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 917


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), plus (ZERO) (nat1) = if lq (length (nat_list1)) (ZERO) then plus (nat1) (ZERO) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), plus (SUCC (nat3)) (nat1) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 918


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), plus (SUCC (nat3)) (nat1) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 919


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (length (nat_list1)) (nat3)(rank:6.)
case lq (length (nat_list1)) (SUCC (nat3))(rank:6.)
=================================================
Progress: 920


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat2:nat), plus (nat2) (nat1) = if lq (length ((Nil))) (nat2) then plus (spec (repr ((Nil)))) (nat2) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 921


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list1)) (nat3)(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list1)) (SUCC (nat3))(rank:7.)
=================================================
Progress: 922


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list1)) (SUCC (nat3))(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list1)) (nat3)(rank:7.)
=================================================
Progress: 923


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat2:nat), plus (nat2) (nat1) = if lq (length ((Nil))) (nat2) then plus (spec (repr ((Nil)))) (nat2) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat2:nat), plus (nat2) (nat1) = if lq (ZERO) (nat2) then plus (spec (repr ((Nil)))) (nat2) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:7.)
=================================================
Progress: 924


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = if lq (length (nat_list1)) (SUCC (nat3)) then plus (nat1) (SUCC (nat3)) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list1)) (SUCC (nat3))(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 925


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (length (nat_list1)) (nat3)(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 926


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat2:nat), plus (nat2) (nat1) = if lq (ZERO) (nat2) then plus (spec (repr ((Nil)))) (nat2) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
plus (ZERO) (nat1) = if lq (ZERO) (ZERO) then plus (spec (repr ((Nil)))) (ZERO) else nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 927


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
plus (ZERO) (nat1) = if lq (ZERO) (ZERO) then plus (spec (repr ((Nil)))) (ZERO) else nat1

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = if lq (ZERO) (nat3) then plus (spec (repr ((Nil)))) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
plus (SUCC (nat3)) (nat1) = if lq (ZERO) (SUCC (nat3)) then plus (spec (repr ((Nil)))) (SUCC (nat3)) else nat1

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 928


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = if lq (ZERO) (nat3) then plus (spec (repr ((Nil)))) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
plus (SUCC (nat3)) (nat1) = if lq (ZERO) (SUCC (nat3)) then plus (spec (repr ((Nil)))) (SUCC (nat3)) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = if lq (ZERO) (nat3) then plus (spec (repr ((Nil)))) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (plus (nat3) (nat1)) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6.)
=================================================
Progress: 929


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = if lq (ZERO) (nat3) then plus (spec (repr ((Nil)))) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (plus (nat3) (nat1)) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = if lq (ZERO) (nat3) then plus (spec (repr ((Nil)))) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (if lq (ZERO) (nat3) then plus (spec (repr ((Nil)))) (nat3) else nat1) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat3)(rank:7.)
=================================================
Progress: 930


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = if lq (ZERO) (nat3) then plus (spec (repr ((Nil)))) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
SUCC (if lq (ZERO) (nat3) then plus (spec (repr ((Nil)))) (nat3) else nat1) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (nat3)(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = nat3
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (nat3) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 931


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = nat3
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (ZERO) (nat3) = true
---------------------------------------
SUCC (nat3) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (ZERO) (nat3) = false
---------------------------------------
SUCC (nat1) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (ZERO) (nat3)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = SUCC (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (ZERO) (nat3) = false
---------------------------------------
SUCC (nat1) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 932


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (spec (repr (nat_list1))) (nat2) else nat1
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat2 : nat
nat3 : nat
IH1 : plus (nat3) (nat1) = nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (ZERO) (nat3) = false
---------------------------------------
SUCC (nat1) = SUCC (nat3)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 933


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 934


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
---------------------------------------
forall (nat1:nat), lq (ZERO) (nat2) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
Cond1 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 935


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
Cond1 : lq (ZERO) (nat2) = false
---------------------------------------
forall (nat1:nat), nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (ZERO) (nat2) = false -> nat1 = nat2
nat2 : nat
Cond1 : lq (ZERO) (nat2) = false
nat1 : nat
---------------------------------------
nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
asdf
=================================================
Progress: 936


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 937


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (SUCC (nat4)) (nat3)) = plus (SUCC (nat4)) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 938


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (SUCC (nat4)) (nat3)) = plus (SUCC (nat4)) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat4) (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 939


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 940


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (SUCC (nat4)) (nat3)) = plus (SUCC (nat4)) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 941


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (SUCC (nat4)) (nat3)) = plus (SUCC (nat4)) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat4) (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 942


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat4) (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat4) (SUCC (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 943


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat4) (SUCC (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = nat1

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 944


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat1) (nat3)) = nat1

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 945


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (ZERO) (nat3)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (nat3) = true
Case2 : lq (length (nat_list1)) (SUCC (nat3)) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (SUCC (ZERO)) = ZERO
asdf
=================================================
Progress: 946


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat4) (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat4) (SUCC (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 947


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat4) (nat3)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat4) (SUCC (nat3))) = SUCC (plus (nat4) (SUCC (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 948


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = false
---------------------------------------
forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 949


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (ZERO)
Lemma List
forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 950


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), plus (nat2) (nat1) = if lq (length (nat_list1)) (nat2) then plus (nat1) (nat2) else nat1
nat_list1 : nat list
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (nat1) = if lq (length (nat_list1)) (nat3) then plus (nat1) (nat3) else nat1
Inductive1 : nat2 = SUCC (nat3)
Case1 : lq (length (nat_list1)) (SUCC (nat3)) = true
Case2 : lq (length (nat_list1)) (nat3) = false
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)(rank : 0.)


1st goal of : forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)

---------------------------------------
forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 951


1st goal of : forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)

---------------------------------------
forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat), SUCC (ZERO) = SUCC (nat1)
nat1 : nat
---------------------------------------
SUCC (ZERO) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (SUCC (ZERO))
asdf
=================================================
Progress: 952


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 20.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (length (nat_list2)) (nat1)(rank:5.)
=================================================
Progress: 953


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = if lq (length (nat_list2)) (nat1) then plus (mainNew (nat_list2)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (length (nat_list2)) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : gq (nat1) (length (nat_list2)) = true
Case2 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
plus (nat1) (mainNew (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 954


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (length (nat_list2))(rank:5.)
=================================================
Progress: 955


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (spec (repr (nat_list2))) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (length (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
Case2 : gq (nat1) (length (nat_list2)) = true
---------------------------------------
plus (nat1) (spec (repr (nat_list2))) = plus (spec (repr (nat_list2))) (nat1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 956


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 20.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (length (nat_list2)) (nat1)
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: if gq (ZERO) (length ((ZERO::(ZERO::(Nil))))) then plus (ZERO) (spec (repr ((ZERO::(ZERO::(Nil)))))) else spec (repr ((ZERO::(ZERO::(Nil))))) = plus (mainNew ((ZERO::(ZERO::(Nil))))) (ZERO)
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (spec (repr ((Nil)))) else spec (repr ((Nil))) = plus (mainNew ((Nil))) (ZERO)
Prop: if gq (SUCC (SUCC (ZERO))) (length ((Nil))) then plus (SUCC (SUCC (ZERO))) (spec (repr ((Nil)))) else spec (repr ((Nil))) = plus (mainNew ((Nil))) (SUCC (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (length (nat_list2)) (nat1)
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (ZERO) else spec (repr ((Nil))) = plus (ZERO) (ZERO)
Prop: if gq (SUCC (ZERO)) (length ((Nil))) then plus (SUCC (ZERO)) (SUCC (ZERO)) else spec (repr ((Nil))) = plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (SUCC (ZERO)) else spec (repr ((Nil))) = plus (SUCC (ZERO)) (ZERO)
validate generalize_common_subterm_goal
Prop: if gq (ZERO) (length ((Nil))) then plus (ZERO) (ZERO) else spec (repr ((Nil))) = plus (ZERO) (ZERO)
Prop: if gq (SUCC (SUCC (ZERO))) (length ((Nil))) then plus (SUCC (SUCC (ZERO))) (ZERO) else spec (repr ((Nil))) = plus (ZERO) (SUCC (SUCC (ZERO)))
Prop: if gq (SUCC (ZERO)) (length ((Nil))) then plus (SUCC (ZERO)) (ZERO) else spec (repr ((Nil))) = plus (ZERO) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 957


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : spec (repr (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (length (nat_list2)) (nat1) = true
---------------------------------------
if gq (nat1) (length (nat_list2)) then plus (nat1) (mainNew (nat_list2)) else spec (repr (nat_list2)) = plus (mainNew (nat_list2)) (nat1)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 958


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true -> if gq (ZERO) (length (nat_list1)) then plus (ZERO) (nat1) else spec (repr (nat_list1)) = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 959


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true -> if gq (ZERO) (length (nat_list1)) then plus (ZERO) (nat1) else spec (repr (nat_list1)) = plus (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list1)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list1)) = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 960


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list1)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list1)) = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), lq (length ((Nil))) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length ((Nil))) then plus (SUCC (nat3)) (nat1) else spec (repr ((Nil))) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 961


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), lq (length ((Nil))) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length ((Nil))) then plus (SUCC (nat3)) (nat1) else spec (repr ((Nil))) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 962


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), true = true -> SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 963


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 964


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (ZERO) (ZERO) = ZERO
Prop: plus (ZERO) (ZERO) = ZERO
Prop: plus (ZERO) (ZERO) = ZERO
t is here


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
duplicated tactic
assert forall (nat1:nat), true = true -> plus (nat1) (ZERO) = nat1
intro Cond1
induction nat1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 965


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : -1.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:8.)
=================================================
Progress: 966


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 967


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 968


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = plus (SUCC (nat4)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 969


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = plus (SUCC (nat4)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 970


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite lemma3 in goal at 0
reflexivity
reflexivity
simpl in goal
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (plus (ZERO) (SUCC (SUCC (SUCC (SUCC (ZERO))))))
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = SUCC (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (SUCC (SUCC (ZERO))) (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite lemma3 in goal at 0
reflexivity
reflexivity
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = plus (ZERO) (SUCC (SUCC (ZERO)))
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = plus (SUCC (ZERO)) (SUCC (ZERO))
t is here


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
duplicated tactic
assert forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = SUCC (plus (nat1) (nat2))
intro Cond1
induction nat1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Lemma List
forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 971


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : -1.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite IH2 in goal at 0(rank:14.)
rewrite lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 2(rank:15.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
=================================================
Progress: 972


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 973


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), true = true -> plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))
Cond1 : true = true
---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat1) (SUCC (nat2)) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
induction nat2(rank:16.)
=================================================
Progress: 974


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (plus (nat4) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma4 in goal at 0(rank:23.)
rewrite lemma4 in goal at 2(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite lemma4 in goal at 1(rank:23.)
=================================================
Progress: 975


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 976


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat4))) = SUCC (SUCC (plus (nat3) (nat4)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
true = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 977


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat4 : nat
IH2 : SUCC (plus (nat3) (nat4)) = plus (nat4) (SUCC (nat3))
Inductive2 : nat1 = SUCC (nat4)
---------------------------------------
true = true

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat), lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length ((nat4::nat_list2))) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 11
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 978


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat), lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length ((nat4::nat_list2))) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat), lq (length (nat_list2)) (nat3) = true -> if gq (nat3) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 979


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat), lq (length (nat_list2)) (nat3) = true -> if gq (nat3) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), if gq (nat3) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case gq (nat3) (length (nat_list2))(rank:6.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite lemma4 in goal at 0(rank:22.)
=================================================
Progress: 980


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), if gq (nat3) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> case gq (nat3) (length (nat_list2))(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
induction nat1(rank:15.)
rewrite lemma4 in goal at 0(rank:15.)
rewrite <- lemma4 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 981


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), if gq (nat3) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), if gq (nat3) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 982


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
forall (nat1:nat), if gq (nat3) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case gq (nat3) (length (nat_list2))(rank:7.)
case gq (SUCC (nat3)) (length (nat_list2))(rank:7.)
=================================================
Progress: 983


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (nat3) (length (nat_list2))(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case gq (SUCC (nat3)) (length (nat_list2))(rank:8.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 984


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (SUCC (nat3)) (length (nat_list2))(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = SUCC (plus (nat3) (nat1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case gq (nat3) (length (nat_list2))(rank:8.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 985


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (SUCC (nat3)) (length (nat_list2))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (nat3) (length (nat_list2)) = true
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 986


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (nat3) (length (nat_list2)) = true
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (nat3) (length (nat_list2)) = true
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (plus (nat3) (nat1)) = spec (repr (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:8.)
=================================================
Progress: 987


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
if gq (nat3) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr ((nat4::nat_list2))) = SUCC (plus (nat3) (nat1))

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (nat3) (length (nat_list2))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 988


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
SUCC (plus (nat3) (nat1)) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case2 : gq (nat3) (length (nat_list2)) = false
---------------------------------------
if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = SUCC (plus (nat3) (nat1))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case gq (nat4) (length (nat_list2))(rank:8.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 989


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (nat3) (length (nat_list2)) = true
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (plus (nat3) (nat1)) = spec (repr (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (nat3) (length (nat_list2)) = true
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
plus (nat3) (SUCC (nat1)) = spec (repr (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite lemma4 in goal at 0
reflexivity
reflexivity
simpl in goal
intro Cond1
rewrite <- IH2 in goal at 0
intro nat1
case gq (nat3) (length (nat_list2))
case gq (SUCC (nat3)) (length (nat_list2))
reflexivity
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = spec (repr ((Nil)))
Prop: plus (ZERO) (SUCC (SUCC (ZERO))) = spec (repr ((ZERO::(ZERO::(Nil)))))
Prop: plus (ZERO) (SUCC (ZERO)) = spec (repr ((Nil)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite lemma4 in goal at 0
reflexivity
reflexivity
simpl in goal
intro Cond1
rewrite <- IH2 in goal at 0
intro nat1
case gq (nat3) (length (nat_list2))
case gq (SUCC (nat3)) (length (nat_list2))
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = spec (repr ((Nil)))
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = spec (repr ((Nil)))
Prop: SUCC (plus (ZERO) (ZERO)) = spec (repr ((Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (nat3) (length (nat_list2)) = true
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (plus (nat3) (nat1)) = spec (repr (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (nat3) (length (nat_list2)) = true
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
plus (nat3) (SUCC (nat1)) = spec (repr (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 990


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (nat3) (length (nat_list2)) = true
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (plus (nat3) (nat1)) = spec (repr (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat1(rank:15.)
intro nat_list1(rank:15.)
induction nat2(rank:24.)
induction nat_list1(rank:24.)
rewrite <- lemma4 in goal at 0(rank:32.)
intro nat2(rank:15.)
=================================================
Progress: 991


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (nat3) (length (nat_list2)) = true
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
plus (nat3) (SUCC (nat1)) = spec (repr (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat1(rank:15.)
intro nat_list1(rank:15.)
induction nat2(rank:24.)
induction nat_list1(rank:24.)
rewrite lemma4 in goal at 0(rank:24.)
intro nat2(rank:15.)
=================================================
Progress: 992


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case2 : gq (nat3) (length (nat_list2)) = false
---------------------------------------
if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = SUCC (plus (nat3) (nat1))

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (nat4) (length (nat_list2))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case2 : gq (nat3) (length (nat_list2)) = false
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:9.)
=================================================
Progress: 993


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case2 : gq (nat3) (length (nat_list2)) = false
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case2 : gq (nat3) (length (nat_list2)) = false
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = plus (nat3) (SUCC (nat1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite lemma4 in goal at 0
reflexivity
reflexivity
simpl in goal
intro Cond1
rewrite <- IH2 in goal at 0
intro nat1
case gq (SUCC (nat3)) (length (nat_list2))
case gq (nat3) (length (nat_list2))
reflexivity
case gq (nat4) (length (nat_list2))
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (ZERO)) (spec (repr ((ZERO::(Nil))))) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = plus (ZERO) (SUCC (SUCC (ZERO)))
Prop: plus (ZERO) (spec (repr ((SUCC (ZERO)::(Nil))))) = plus (ZERO) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite lemma4 in goal at 0
reflexivity
reflexivity
simpl in goal
intro Cond1
rewrite <- IH2 in goal at 0
intro nat1
case gq (SUCC (nat3)) (length (nat_list2))
case gq (nat3) (length (nat_list2))
reflexivity
case gq (nat4) (length (nat_list2))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((ZERO::(Nil))))) = SUCC (plus (ZERO) (ZERO))
Prop: plus (ZERO) (spec (repr ((Nil)))) = SUCC (plus (ZERO) (ZERO))
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = SUCC (plus (ZERO) (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case2 : gq (nat3) (length (nat_list2)) = false
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case2 : gq (nat3) (length (nat_list2)) = false
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = plus (nat3) (SUCC (nat1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 994


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case2 : gq (nat3) (length (nat_list2)) = false
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat1(rank:19.)
intro nat3(rank:19.)
induction nat2(rank:28.)
induction nat3(rank:28.)
induction nat_list1(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
intro nat_list1(rank:19.)
intro nat2(rank:19.)
=================================================
Progress: 995


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
nat1 : nat
Case1 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case2 : gq (nat3) (length (nat_list2)) = false
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = plus (nat3) (SUCC (nat1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat1(rank:19.)
intro nat3(rank:19.)
induction nat2(rank:28.)
induction nat3(rank:28.)
induction nat_list1(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
intro nat_list1(rank:19.)
intro nat2(rank:19.)
=================================================
Progress: 996


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 997


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:16.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 998


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = SUCC (plus (nat1) (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
rewrite <- lemma4 in goal at 1(rank:24.)
=================================================
Progress: 999


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), plus (nat3) (SUCC (nat1)) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:16.)
rewrite lemma4 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1000


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:16.)
=================================================
Progress: 1001


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:15.)
induction nat_list1(rank:24.)
rewrite <- lemma4 in goal at 0(rank:32.)
=================================================
Progress: 1002


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat2(rank:24.)
rewrite <- lemma4 in goal at 0(rank:32.)
=================================================
Progress: 1003


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:16.)
=================================================
Progress: 1004


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:15.)
induction nat_list1(rank:24.)
rewrite lemma4 in goal at 0(rank:24.)
=================================================
Progress: 1005


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat2(rank:24.)
rewrite lemma4 in goal at 0(rank:24.)
=================================================
Progress: 1006


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 1007


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 1008


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 1009


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 1010


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 1011


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 1012


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:15.)
rewrite <- lemma4 in goal at 0(rank:32.)
=================================================
Progress: 1013


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:15.)
rewrite lemma4 in goal at 0(rank:24.)
=================================================
Progress: 1014


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:16.)
=================================================
Progress: 1015


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:16.)
=================================================
Progress: 1016


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1017


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 1018


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = plus (nat5) (SUCC (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = plus (SUCC (nat5)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1019


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = plus (nat5) (SUCC (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = plus (SUCC (nat5)) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = plus (nat5) (SUCC (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (nat5) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite <- IH3 in goal at 0(rank:22.)
rewrite lemma4 in goal at 0(rank:23.)
rewrite lemma4 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 2(rank:23.)
rewrite lemma4 in goal at 1(rank:23.)
rewrite <- lemma4 in goal at 0(rank:23.)
=================================================
Progress: 1020


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (nat1)) = SUCC (plus (nat1) (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (ZERO) (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1021


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (plus (ZERO) (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:17.)
rewrite <- lemma4 in goal at 0(rank:25.)
=================================================
Progress: 1022


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), plus (nat3) (SUCC (nat1)) = plus (nat1) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat3) (SUCC (ZERO)) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1023


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat3) (SUCC (ZERO)) = plus (ZERO) (SUCC (nat3))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat3) (SUCC (ZERO)) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:9.)
=================================================
Progress: 1024


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat3) (SUCC (ZERO)) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:10.)
=================================================
Progress: 1025


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1026


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

5 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

4 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Cond1 in goal at 0(rank:25.)
rewrite <- Cond1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 2(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 1027


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = true->gq (SUCC (ZERO)) (length (nat_list1)) = false -> SUCC (plus (ZERO) (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:15.)
=================================================
Progress: 1028


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = true->gq (SUCC (ZERO)) (length (nat_list1)) = false -> SUCC (plus (ZERO) (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (plus (SUCC (nat3)) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1029


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (plus (SUCC (nat3)) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:16.)
=================================================
Progress: 1030


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = true->gq (SUCC (ZERO)) (length (nat_list1)) = false -> plus (ZERO) (SUCC (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:15.)
=================================================
Progress: 1031


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = true->gq (SUCC (ZERO)) (length (nat_list1)) = false -> plus (ZERO) (SUCC (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> plus (SUCC (nat3)) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1032


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> plus (SUCC (nat3)) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:16.)
=================================================
Progress: 1033


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = spec (repr ((Nil)))
Prop: plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (ZERO))) = spec (repr ((Nil)))
Prop: plus (ZERO) (SUCC (ZERO)) = spec (repr ((Nil)))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = spec (repr ((Nil)))
Prop: SUCC (plus (ZERO) (ZERO)) = spec (repr ((Nil)))
Prop: SUCC (plus (ZERO) (ZERO)) = spec (repr ((Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1034


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro nat1(rank:17.)
intro nat_list1(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite <- lemma4 in goal at 0(rank:34.)
intro nat2(rank:17.)
=================================================
Progress: 1035


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro nat1(rank:17.)
intro nat_list1(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite lemma4 in goal at 0(rank:26.)
intro nat2(rank:17.)
=================================================
Progress: 1036


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (SUCC (ZERO))) (ZERO)) = spec (repr ((Nil)))
Prop: SUCC (plus (ZERO) (ZERO)) = spec (repr ((Nil)))
Prop: SUCC (plus (SUCC (ZERO)) (SUCC (ZERO))) = spec (repr ((Nil)))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (ZERO)) = spec (repr ((Nil)))
Prop: plus (ZERO) (SUCC (ZERO)) = spec (repr ((Nil)))
Prop: plus (ZERO) (SUCC (ZERO)) = spec (repr ((SUCC (ZERO)::(Nil))))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1037


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro nat1(rank:17.)
intro nat_list1(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite lemma4 in goal at 0(rank:26.)
intro nat2(rank:17.)
=================================================
Progress: 1038


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro nat1(rank:17.)
intro nat_list1(rank:17.)
induction nat2(rank:26.)
induction nat_list1(rank:26.)
rewrite <- lemma4 in goal at 0(rank:34.)
intro nat2(rank:17.)
=================================================
Progress: 1039


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((Nil))) = true->gq (SUCC (SUCC (nat3))) (length ((Nil))) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16.)
=================================================
Progress: 1040


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((Nil))) = true->gq (SUCC (SUCC (nat3))) (length ((Nil))) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16.)
=================================================
Progress: 1041


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((Nil))) = true->gq (SUCC (SUCC (nat3))) (length ((Nil))) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = true->true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:16.)
=================================================
Progress: 1042


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((Nil))) = true->gq (SUCC (SUCC (nat3))) (length ((Nil))) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = true->true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:16.)
=================================================
Progress: 1043


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = true->true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = true->true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:16.)
=================================================
Progress: 1044


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = true->true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = true->true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:16.)
=================================================
Progress: 1045


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = true->true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
Cond2 : true = true
---------------------------------------
true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:15.)
=================================================
Progress: 1046


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
Cond2 : true = true
---------------------------------------
true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true->gq (SUCC (SUCC (nat3))) (length ((nat4::nat_list2))) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr ((nat4::nat_list2)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1047


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true->gq (SUCC (SUCC (nat3))) (length ((nat4::nat_list2))) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr ((nat4::nat_list2)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length (nat_list2)) (nat3) = true->gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 1048


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length (nat_list2)) (nat3) = true->gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 1049


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 1050


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case gq (nat4) (length (nat_list2))(rank:16.)
rewrite IH2 in goal at 0(rank:26.)
rewrite <- IH1 in goal at 1(rank:26.)
rewrite <- IH2 in goal at 1(rank:26.)
rewrite <- IH2 in goal at 0(rank:34.)
rewrite <- IH2 in goal at 2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:32.)
rewrite <- IH1 in goal at 2(rank:26.)
rewrite <- IH1 in goal at 0(rank:26.)
=================================================
Progress: 1051


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = true->true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
Cond2 : true = true
---------------------------------------
true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:15.)
=================================================
Progress: 1052


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
Cond2 : true = true
---------------------------------------
true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true->gq (SUCC (SUCC (nat3))) (length ((nat4::nat_list2))) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr ((nat4::nat_list2)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1053


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true->gq (SUCC (SUCC (nat3))) (length ((nat4::nat_list2))) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr ((nat4::nat_list2)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length (nat_list2)) (nat3) = true->gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 1054


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length (nat_list2)) (nat3) = true->gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 1055


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 1056


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case gq (nat4) (length (nat_list2))(rank:16.)
rewrite IH2 in goal at 0(rank:26.)
rewrite <- IH1 in goal at 0(rank:26.)
rewrite <- IH1 in goal at 2(rank:26.)
rewrite <- IH2 in goal at 0(rank:34.)
rewrite <- IH2 in goal at 1(rank:26.)
rewrite <- IH2 in goal at 2(rank:26.)
rewrite <- IH1 in goal at 1(rank:26.)
rewrite lemma4 in goal at 0(rank:32.)
rewrite <- lemma4 in goal at 0(rank:32.)
=================================================
Progress: 1057


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> case gq (nat4) (length (nat_list2))(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
Case1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
SUCC (SUCC (plus (nat3) (nat1))) = plus (nat4) (spec (repr (nat_list2)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 0(rank:25.)
rewrite <- IH2 in goal at 0(rank:27.)
rewrite IH2 in goal at 0(rank:27.)
rewrite <- IH1 in goal at 0(rank:27.)
=================================================
Progress: 1058


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> case gq (nat4) (length (nat_list2))(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
Case1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
SUCC (plus (nat3) (SUCC (nat1))) = plus (nat4) (spec (repr (nat_list2)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:25.)
rewrite IH2 in goal at 0(rank:27.)
rewrite lemma4 in goal at 0(rank:33.)
rewrite <- IH1 in goal at 0(rank:27.)
rewrite <- IH2 in goal at 0(rank:27.)
=================================================
Progress: 1059


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1060


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (nat3) = SUCC (nat3)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1061


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
true = true

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (SUCC (nat5)) (nat3))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1062


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (SUCC (nat5)) (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH3 in goal at 0(rank:15.)
rewrite lemma4 in goal at 0(rank:16.)
rewrite <- lemma4 in goal at 2(rank:16.)
rewrite <- lemma4 in goal at 0(rank:24.)
rewrite <- lemma4 in goal at 1(rank:24.)
=================================================
Progress: 1063


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH3 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 0(rank:16.)
rewrite <- lemma4 in goal at 0(rank:24.)
rewrite <- lemma4 in goal at 2(rank:16.)
rewrite <- lemma4 in goal at 1(rank:24.)
=================================================
Progress: 1064


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH3 in goal at 0(rank:16.)
rewrite <- lemma4 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 2(rank:25.)
=================================================
Progress: 1065


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat5) (nat3)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (plus (nat5) (SUCC (nat3)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH2 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 1(rank:25.)
rewrite <- lemma4 in goal at 2(rank:25.)
=================================================
Progress: 1066


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (plus (nat3) (SUCC (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1067


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
SUCC (SUCC (plus (nat3) (nat5))) = SUCC (SUCC (plus (nat3) (nat5)))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 1068


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
nat1 : nat
nat5 : nat
IH3 : SUCC (plus (nat3) (nat5)) = SUCC (plus (nat5) (nat3))
Inductive3 : nat1 = SUCC (nat5)
---------------------------------------
true = true

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
true = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 14
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 1069


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
true = true

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
---------------------------------------
forall (nat1:nat), if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 9
Tactic List : 3
case gq (nat4) (length (nat_list2))(rank:6.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite lemma4 in goal at 0(rank:22.)
=================================================
Progress: 1070


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
---------------------------------------
forall (nat1:nat), if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> case gq (nat4) (length (nat_list2))(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
Case2 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), plus (nat4) (spec (repr (nat_list2))) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:15.)
rewrite lemma4 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 1071


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
---------------------------------------
forall (nat1:nat), if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
---------------------------------------
forall (nat1:nat), if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 1072


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
---------------------------------------
forall (nat1:nat), if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
---------------------------------------
if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case gq (nat4) (length (nat_list2))(rank:7.)
case gq (SUCC (nat3)) (length (nat_list2))(rank:7.)
=================================================
Progress: 1073


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
---------------------------------------
if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (nat4) (length (nat_list2))(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case gq (SUCC (nat3)) (length (nat_list2))(rank:8.)
=================================================
Progress: 1074


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
---------------------------------------
if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (SUCC (nat3)) (length (nat_list2))(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = SUCC (plus (nat3) (nat1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case gq (nat4) (length (nat_list2))(rank:8.)
rewrite <- lemma4 in goal at 0(rank:24.)
=================================================
Progress: 1075


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (SUCC (nat3)) (length (nat_list2))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (nat4) (length (nat_list2)) = true
Case3 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:9.)
=================================================
Progress: 1076


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = SUCC (plus (nat3) (nat1))

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (nat4) (length (nat_list2))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:9.)
=================================================
Progress: 1077


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (nat4) (length (nat_list2)) = true
Case3 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (nat4) (length (nat_list2)) = true
Case3 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = plus (nat3) (SUCC (nat1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
reflexivity
rewrite <- IH2 in goal at 0
intro nat1
case gq (nat4) (length (nat_list2))
case gq (SUCC (nat3)) (length (nat_list2))
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (ZERO) (SUCC (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = plus (ZERO) (SUCC (ZERO))
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
reflexivity
rewrite <- IH2 in goal at 0
intro nat1
case gq (nat4) (length (nat_list2))
case gq (SUCC (nat3)) (length (nat_list2))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((Nil)))) = SUCC (plus (SUCC (ZERO)) (ZERO))
Prop: plus (SUCC (SUCC (ZERO))) (spec (repr ((Nil)))) = SUCC (plus (ZERO) (ZERO))
Prop: plus (SUCC (ZERO)) (spec (repr ((ZERO::(ZERO::(SUCC (SUCC (ZERO))::(ZERO::(SUCC (ZERO)::(Nil))))))))) = SUCC (plus (ZERO) (SUCC (ZERO)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (nat4) (length (nat_list2)) = true
Case3 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (nat4) (length (nat_list2)) = true
Case3 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = plus (nat3) (SUCC (nat1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1078


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (nat4) (length (nat_list2)) = true
Case3 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat1(rank:19.)
intro nat3(rank:19.)
induction nat2(rank:28.)
induction nat3(rank:28.)
induction nat_list1(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
intro nat_list1(rank:19.)
intro nat2(rank:19.)
=================================================
Progress: 1079


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (nat4) (length (nat_list2)) = true
Case3 : gq (SUCC (nat3)) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = plus (nat3) (SUCC (nat1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat1(rank:19.)
intro nat3(rank:19.)
induction nat2(rank:28.)
induction nat3(rank:28.)
induction nat_list1(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
intro nat_list1(rank:19.)
intro nat2(rank:19.)
=================================================
Progress: 1080


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = plus (nat3) (SUCC (nat1))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
reflexivity
rewrite <- IH2 in goal at 0
intro nat1
case gq (SUCC (nat3)) (length (nat_list2))
case gq (nat4) (length (nat_list2))
rewrite <- lemma4 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((SUCC (ZERO)::(Nil))))) = plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (ZERO) (SUCC (ZERO))
Prop: plus (ZERO) (spec (repr ((Nil)))) = plus (ZERO) (SUCC (ZERO))
previous tactics
reflexivity
simpl in goal
rewrite <- IH3 in goal at 0
rewrite lemma4 in goal at 0
reflexivity
reflexivity
reflexivity
rewrite <- IH2 in goal at 0
intro nat1
case gq (SUCC (nat3)) (length (nat_list2))
case gq (nat4) (length (nat_list2))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((Nil)))) = SUCC (plus (ZERO) (ZERO))
Prop: plus (ZERO) (spec (repr ((ZERO::(Nil))))) = SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = SUCC (plus (ZERO) (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = plus (nat3) (SUCC (nat1))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1081


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (plus (nat3) (nat1))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat1(rank:19.)
intro nat3(rank:19.)
induction nat2(rank:28.)
induction nat3(rank:28.)
induction nat_list1(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
intro nat_list1(rank:19.)
intro nat2(rank:19.)
=================================================
Progress: 1082


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
nat1 : nat
Case2 : gq (SUCC (nat3)) (length (nat_list2)) = true
Case3 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = plus (nat3) (SUCC (nat1))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat1(rank:19.)
intro nat3(rank:19.)
induction nat2(rank:28.)
induction nat3(rank:28.)
induction nat_list1(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
intro nat_list1(rank:19.)
intro nat2(rank:19.)
=================================================
Progress: 1083


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
Case2 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
forall (nat1:nat), plus (nat4) (spec (repr (nat_list2))) = plus (nat1) (SUCC (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
Case2 : gq (nat4) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1084


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
Case2 : gq (nat4) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = plus (ZERO) (SUCC (nat3))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
Case2 : gq (nat4) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: plus (ZERO) (spec (repr ((Nil)))) = SUCC (SUCC (ZERO))
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = SUCC (ZERO)
Prop: plus (SUCC (ZERO)) (spec (repr ((Nil)))) = SUCC (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
Case2 : gq (nat4) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1085


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true -> if gq (nat2) (length (nat_list1)) then plus (nat2) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat2)
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true -> if gq (nat3) (length (nat_list1)) then plus (nat3) (nat1) else spec (repr (nat_list1)) = plus (nat1) (nat3)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : forall (nat1:nat), lq (length (nat_list2)) (SUCC (nat3)) = true -> if gq (SUCC (nat3)) (length (nat_list2)) then plus (SUCC (nat3)) (nat1) else spec (repr (nat_list2)) = plus (nat1) (SUCC (nat3))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Case1 : gq (nat3) (length (nat_list2)) = false
Case2 : gq (nat4) (length (nat_list2)) = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (nat4) (spec (repr (nat_list2))) = SUCC (nat3)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:15.)
=================================================
Progress: 1086


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:16.)
=================================================
Progress: 1087


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (ZERO) (length (nat_list1)) = true -> plus (ZERO) (spec (repr (nat_list1))) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16.)
=================================================
Progress: 1088


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (ZERO) (length (nat_list1)) = true -> plus (ZERO) (spec (repr (nat_list1))) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->false = true -> spec (repr (nat_list1)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:17.)
=================================================
Progress: 1089


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:18.)
=================================================
Progress: 1090


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:17.)
induction nat_list1(rank:26.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 1091


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 1092


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:18.)
=================================================
Progress: 1093


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:17.)
induction nat_list1(rank:26.)
rewrite lemma4 in goal at 0(rank:26.)
=================================================
Progress: 1094


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:26.)
=================================================
Progress: 1095


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:18.)
=================================================
Progress: 1096


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:17.)
induction nat_list1(rank:26.)
rewrite lemma4 in goal at 0(rank:26.)
=================================================
Progress: 1097


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite lemma4 in goal at 0(rank:26.)
=================================================
Progress: 1098


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat2(rank:18.)
=================================================
Progress: 1099


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:17.)
induction nat_list1(rank:26.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 1100


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat2(rank:26.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 1101


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->false = true -> spec (repr (nat_list1)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (nat1) = true->gq (nat1) (length ((Nil))) = false->false = true -> spec (repr ((Nil))) = SUCC (nat1)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1102


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1103


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1104


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1105


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1106


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (nat1) = true->gq (nat1) (length ((Nil))) = false->false = true -> spec (repr ((Nil))) = SUCC (nat1)

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (nat1) = true->gq (nat1) (ZERO) = false->false = true -> ZERO = SUCC (nat1)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1107


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1108


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1109


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1110


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1111


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (nat1) = true->gq (nat1) (ZERO) = false->false = true -> ZERO = SUCC (nat1)

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
gq (nat1) (ZERO) = false->false = true -> ZERO = SUCC (nat1)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1112


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 1113


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 1114


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 1115


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
---------------------------------------
forall (nat1:nat), gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 1116


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
gq (nat1) (ZERO) = false->false = true -> ZERO = SUCC (nat1)

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
Cond1 : lq (ZERO) (nat1) = true
Cond2 : gq (nat1) (ZERO) = false
---------------------------------------
false = true -> ZERO = SUCC (nat1)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:16.)
=================================================
Progress: 1117


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
Cond1 : lq (ZERO) (nat1) = true
Cond2 : gq (nat1) (ZERO) = false
---------------------------------------
false = true -> ZERO = SUCC (nat1)

2 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : lq (length (nat_list2)) (nat1) = true->gq (nat1) (length (nat_list2)) = false->false = true -> spec (repr (nat_list2)) = SUCC (nat1)
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
lq (length ((nat3::nat_list2))) (nat1) = true->gq (nat1) (length ((nat3::nat_list2))) = false->false = true -> spec (repr ((nat3::nat_list2))) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:16.)
=================================================
Progress: 1118


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : lq (length (nat_list2)) (nat1) = true->gq (nat1) (length (nat_list2)) = false->false = true -> spec (repr (nat_list2)) = SUCC (nat1)
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
lq (length ((nat3::nat_list2))) (nat1) = true->gq (nat1) (length ((nat3::nat_list2))) = false->false = true -> spec (repr ((nat3::nat_list2))) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : lq (length (nat_list2)) (nat1) = true->gq (nat1) (length (nat_list2)) = false->false = true -> spec (repr (nat_list2)) = SUCC (nat1)
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
lq (SUCC (length (nat_list2))) (nat1) = true->gq (nat1) (SUCC (length (nat_list2))) = false->false = true -> if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:16.)
=================================================
Progress: 1119


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : lq (length (nat_list2)) (nat1) = true->gq (nat1) (length (nat_list2)) = false->false = true -> spec (repr (nat_list2)) = SUCC (nat1)
Inductive1 : nat_list1 = (nat3::nat_list2)
---------------------------------------
lq (SUCC (length (nat_list2))) (nat1) = true->gq (nat1) (SUCC (length (nat_list2))) = false->false = true -> if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : lq (length (nat_list2)) (nat1) = true->gq (nat1) (length (nat_list2)) = false->false = true -> spec (repr (nat_list2)) = SUCC (nat1)
Inductive1 : nat_list1 = (nat3::nat_list2)
Cond1 : lq (SUCC (length (nat_list2))) (nat1) = true
---------------------------------------
gq (nat1) (SUCC (length (nat_list2))) = false->false = true -> if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:16.)
=================================================
Progress: 1120


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : lq (length (nat_list2)) (nat1) = true->gq (nat1) (length (nat_list2)) = false->false = true -> spec (repr (nat_list2)) = SUCC (nat1)
Inductive1 : nat_list1 = (nat3::nat_list2)
Cond1 : lq (SUCC (length (nat_list2))) (nat1) = true
---------------------------------------
gq (nat1) (SUCC (length (nat_list2))) = false->false = true -> if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : lq (length (nat_list2)) (nat1) = true->gq (nat1) (length (nat_list2)) = false->false = true -> spec (repr (nat_list2)) = SUCC (nat1)
Inductive1 : nat_list1 = (nat3::nat_list2)
Cond1 : lq (SUCC (length (nat_list2))) (nat1) = true
Cond2 : gq (nat1) (SUCC (length (nat_list2))) = false
---------------------------------------
false = true -> if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:15.)
=================================================
Progress: 1121


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
nat_list1 : nat list
nat3 : nat
nat_list2 : nat list
IH1 : lq (length (nat_list2)) (nat1) = true->gq (nat1) (length (nat_list2)) = false->false = true -> spec (repr (nat_list2)) = SUCC (nat1)
Inductive1 : nat_list1 = (nat3::nat_list2)
Cond1 : lq (SUCC (length (nat_list2))) (nat1) = true
Cond2 : gq (nat1) (SUCC (length (nat_list2))) = false
---------------------------------------
false = true -> if gq (nat3) (length (nat_list2)) then plus (nat3) (spec (repr (nat_list2))) else spec (repr (nat_list2)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (SUCC (nat3)) (length (nat_list1)) = true -> plus (SUCC (nat3)) (spec (repr (nat_list1))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 1122


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (SUCC (nat3)) (length (nat_list1)) = true -> plus (SUCC (nat3)) (spec (repr (nat_list1))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (SUCC (nat3)) (length (nat_list1)) = true -> SUCC (plus (nat3) (spec (repr (nat_list1)))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:16.)
=================================================
Progress: 1123


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (SUCC (nat3)) (length (nat_list1)) = true -> SUCC (plus (nat3) (spec (repr (nat_list1)))) = SUCC (nat1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (nat1) = true->gq (nat1) (length ((Nil))) = false->gq (SUCC (nat3)) (length ((Nil))) = true -> SUCC (plus (nat3) (spec (repr ((Nil))))) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16.)
=================================================
Progress: 1124


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (nat1) = true->gq (nat1) (length ((Nil))) = false->gq (SUCC (nat3)) (length ((Nil))) = true -> SUCC (plus (nat3) (spec (repr ((Nil))))) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (nat1) = true->gq (nat1) (ZERO) = false->true = true -> SUCC (plus (nat3) (ZERO)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:16.)
=================================================
Progress: 1125


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (nat1) = true->gq (nat1) (ZERO) = false->true = true -> SUCC (plus (nat3) (ZERO)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
gq (nat1) (ZERO) = false->true = true -> SUCC (plus (nat3) (ZERO)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:16.)
=================================================
Progress: 1126


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
gq (nat1) (ZERO) = false->true = true -> SUCC (plus (nat3) (ZERO)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : lq (ZERO) (nat1) = true
Cond2 : gq (nat1) (ZERO) = false
---------------------------------------
true = true -> SUCC (plus (nat3) (ZERO)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:16.)
=================================================
Progress: 1127


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : lq (ZERO) (nat1) = true
Cond2 : gq (nat1) (ZERO) = false
---------------------------------------
true = true -> SUCC (plus (nat3) (ZERO)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 16.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat2) (length (nat_list1)) = true -> plus (nat2) (spec (repr (nat_list1))) = SUCC (nat1)
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat1) = true->gq (nat1) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (nat1)
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : lq (ZERO) (nat1) = true
Cond2 : gq (nat1) (ZERO) = false
Cond3 : true = true
---------------------------------------
SUCC (plus (nat3) (ZERO)) = SUCC (nat1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:25.)
rewrite <- lemma4 in goal at 0(rank:33.)
=================================================
Progress: 1128


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:17.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 1129


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:17.)
rewrite lemma4 in goal at 0(rank:26.)
=================================================
Progress: 1130


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:17.)
rewrite lemma4 in goal at 0(rank:26.)
=================================================
Progress: 1131


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
---------------------------------------
forall (nat1:nat), gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:17.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 1132


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:18.)
=================================================
Progress: 1133


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 1134


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite lemma4 in goal at 0(rank:18.)
=================================================
Progress: 1135


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
---------------------------------------
forall (nat1:nat), SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 0(rank:18.)
=================================================
Progress: 1136


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = true->gq (SUCC (ZERO)) (length (nat_list1)) = false -> SUCC (plus (ZERO) (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 1137


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = true->gq (SUCC (ZERO)) (length (nat_list1)) = false -> SUCC (plus (ZERO) (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (plus (SUCC (nat3)) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1138


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (plus (SUCC (nat3)) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:18.)
=================================================
Progress: 1139


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = true->gq (SUCC (ZERO)) (length (nat_list1)) = false -> plus (ZERO) (SUCC (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 1140


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = true->gq (SUCC (ZERO)) (length (nat_list1)) = false -> plus (ZERO) (SUCC (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> plus (SUCC (nat3)) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1141


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> plus (SUCC (nat3)) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:18.)
=================================================
Progress: 1142


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = true->gq (SUCC (ZERO)) (length (nat_list1)) = false -> plus (ZERO) (SUCC (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 1143


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = true->gq (SUCC (ZERO)) (length (nat_list1)) = false -> plus (ZERO) (SUCC (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> plus (SUCC (nat3)) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1144


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> plus (SUCC (nat3)) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:18.)
=================================================
Progress: 1145


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = true->gq (SUCC (ZERO)) (length (nat_list1)) = false -> SUCC (plus (ZERO) (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 1146


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (ZERO) = true->gq (ZERO) (length (nat_list1)) = true->gq (SUCC (ZERO)) (length (nat_list1)) = false -> SUCC (plus (ZERO) (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (plus (SUCC (nat3)) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1147


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (plus (SUCC (nat3)) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:18.)
=================================================
Progress: 1148


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (ZERO)))) = spec (repr ((Nil)))
Prop: plus (ZERO) (SUCC (ZERO)) = spec (repr ((Nil)))
Prop: plus (ZERO) (SUCC (ZERO)) = spec (repr ((Nil)))
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = spec (repr ((Nil)))
Prop: SUCC (plus (ZERO) (ZERO)) = spec (repr ((ZERO::(Nil))))
Prop: SUCC (plus (ZERO) (ZERO)) = spec (repr ((ZERO::(Nil))))
=================================================
Progress: 1149


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = spec (repr ((ZERO::(Nil))))
Prop: SUCC (plus (ZERO) (SUCC (SUCC (ZERO)))) = spec (repr ((Nil)))
Prop: SUCC (plus (ZERO) (ZERO)) = spec (repr ((Nil)))
validate generalize_common_subterm_goal
Prop: plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = spec (repr ((Nil)))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = spec (repr ((Nil)))
Prop: plus (ZERO) (SUCC (ZERO)) = spec (repr ((Nil)))
=================================================
Progress: 1150


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = spec (repr ((Nil)))
Prop: SUCC (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))) = spec (repr ((Nil)))
Prop: SUCC (plus (ZERO) (SUCC (SUCC (ZERO)))) = spec (repr ((ZERO::(Nil))))
validate generalize_common_subterm_goal
Prop: plus (ZERO) (SUCC (SUCC (SUCC (ZERO)))) = spec (repr ((Nil)))
Prop: plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))) = spec (repr ((SUCC (SUCC (ZERO))::(Nil))))
Prop: plus (SUCC (ZERO)) (SUCC (ZERO)) = spec (repr ((Nil)))
=================================================
Progress: 1151


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat2 : nat
nat_list1 : nat list
Cond1 : lq (length (nat_list1)) (nat2) = true
Cond2 : gq (nat2) (length (nat_list1)) = true
Cond3 : gq (SUCC (nat2)) (length (nat_list1)) = false
nat1 : nat
---------------------------------------
plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (SUCC (SUCC (ZERO)))) = spec (repr ((Nil)))
Prop: plus (ZERO) (SUCC (ZERO)) = spec (repr ((Nil)))
Prop: plus (ZERO) (SUCC (ZERO)) = spec (repr ((ZERO::(Nil))))
validate generalize_common_subterm_goal
Prop: SUCC (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (ZERO)) = spec (repr ((Nil)))
Prop: SUCC (plus (ZERO) (SUCC (SUCC (ZERO)))) = spec (repr ((Nil)))
Prop: SUCC (plus (ZERO) (SUCC (ZERO))) = spec (repr ((Nil)))
=================================================
Progress: 1152


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((Nil))) = true->gq (SUCC (SUCC (nat3))) (length ((Nil))) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 1153


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((Nil))) = true->gq (SUCC (SUCC (nat3))) (length ((Nil))) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 1154


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((Nil))) = true->gq (SUCC (SUCC (nat3))) (length ((Nil))) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 1155


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list1)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list1)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((Nil))) = true->gq (SUCC (SUCC (nat3))) (length ((Nil))) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18.)
=================================================
Progress: 1156


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((Nil))) = true->gq (SUCC (SUCC (nat3))) (length ((Nil))) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = true->true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 1157


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((Nil))) = true->gq (SUCC (SUCC (nat3))) (length ((Nil))) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = true->true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 1158


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((Nil))) = true->gq (SUCC (SUCC (nat3))) (length ((Nil))) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = true->true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 1159


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (length ((Nil))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((Nil))) = true->gq (SUCC (SUCC (nat3))) (length ((Nil))) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = true->true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:18.)
=================================================
Progress: 1160


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = true->true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = true->true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 1161


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = true->true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = true->true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 1162


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = true->true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = true->true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 1163


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
true = true->true = true->true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = true->true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:18.)
=================================================
Progress: 1164


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = true->true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
Cond2 : true = true
---------------------------------------
true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 1165


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
Cond2 : true = true
---------------------------------------
true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true->gq (SUCC (SUCC (nat3))) (length ((nat4::nat_list2))) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr ((nat4::nat_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1166


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true->gq (SUCC (SUCC (nat3))) (length ((nat4::nat_list2))) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr ((nat4::nat_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length (nat_list2)) (nat3) = true->gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1167


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length (nat_list2)) (nat3) = true->gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1168


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 1169


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 9
case gq (nat4) (length (nat_list2))(rank:18.)
rewrite IH2 in goal at 0(rank:28.)
rewrite <- IH1 in goal at 1(rank:28.)
rewrite <- IH2 in goal at 1(rank:28.)
rewrite <- IH2 in goal at 0(rank:36.)
rewrite <- IH2 in goal at 2(rank:28.)
rewrite <- lemma4 in goal at 0(rank:34.)
rewrite <- IH1 in goal at 2(rank:28.)
rewrite <- IH1 in goal at 0(rank:28.)
=================================================
Progress: 1170


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = true->true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
Cond2 : true = true
---------------------------------------
true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 1171


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
Cond2 : true = true
---------------------------------------
true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true->gq (SUCC (SUCC (nat3))) (length ((nat4::nat_list2))) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr ((nat4::nat_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1172


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true->gq (SUCC (SUCC (nat3))) (length ((nat4::nat_list2))) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr ((nat4::nat_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length (nat_list2)) (nat3) = true->gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1173


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length (nat_list2)) (nat3) = true->gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1174


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 1175


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
case gq (nat4) (length (nat_list2))(rank:18.)
rewrite IH2 in goal at 0(rank:28.)
rewrite <- IH1 in goal at 0(rank:28.)
rewrite <- IH1 in goal at 2(rank:28.)
rewrite <- IH2 in goal at 0(rank:36.)
rewrite <- IH2 in goal at 1(rank:28.)
rewrite <- IH2 in goal at 2(rank:28.)
rewrite <- IH1 in goal at 1(rank:28.)
rewrite lemma4 in goal at 0(rank:34.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 1176


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = true->true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
Cond2 : true = true
---------------------------------------
true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 1177


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
Cond2 : true = true
---------------------------------------
true = false -> SUCC (plus (nat3) (SUCC (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true->gq (SUCC (SUCC (nat3))) (length ((nat4::nat_list2))) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr ((nat4::nat_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1178


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true->gq (SUCC (SUCC (nat3))) (length ((nat4::nat_list2))) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr ((nat4::nat_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length (nat_list2)) (nat3) = true->gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1179


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length (nat_list2)) (nat3) = true->gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1180


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 1181


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
case gq (nat4) (length (nat_list2))(rank:18.)
rewrite IH2 in goal at 0(rank:28.)
rewrite <- IH1 in goal at 0(rank:28.)
rewrite <- IH1 in goal at 2(rank:28.)
rewrite <- IH2 in goal at 0(rank:36.)
rewrite <- IH2 in goal at 1(rank:28.)
rewrite <- IH2 in goal at 2(rank:28.)
rewrite <- IH1 in goal at 1(rank:28.)
rewrite lemma4 in goal at 0(rank:34.)
rewrite <- lemma4 in goal at 0(rank:34.)
=================================================
Progress: 1182


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
true = true->true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
Cond2 : true = true
---------------------------------------
true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:17.)
=================================================
Progress: 1183


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
Cond2 : true = true
---------------------------------------
true = false -> SUCC (SUCC (plus (nat3) (nat1))) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true->gq (SUCC (SUCC (nat3))) (length ((nat4::nat_list2))) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr ((nat4::nat_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17.)
=================================================
Progress: 1184


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length ((nat4::nat_list2))) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length ((nat4::nat_list2))) = true->gq (SUCC (SUCC (nat3))) (length ((nat4::nat_list2))) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr ((nat4::nat_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length (nat_list2)) (nat3) = true->gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 1185


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
---------------------------------------
lq (length (nat_list2)) (nat3) = true->gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1186


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
---------------------------------------
gq (nat3) (length (nat_list2)) = true->gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:17.)
=================================================
Progress: 1187


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
---------------------------------------
gq (SUCC (nat3)) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond3(rank : 17.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 9
case gq (nat4) (length (nat_list2))(rank:18.)
rewrite IH2 in goal at 0(rank:28.)
rewrite <- IH1 in goal at 1(rank:28.)
rewrite <- IH2 in goal at 1(rank:28.)
rewrite <- IH2 in goal at 0(rank:36.)
rewrite <- IH2 in goal at 2(rank:28.)
rewrite <- lemma4 in goal at 0(rank:34.)
rewrite <- IH1 in goal at 2(rank:28.)
rewrite <- IH1 in goal at 0(rank:28.)
=================================================
Progress: 1188


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> case gq (nat4) (length (nat_list2))(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
Case1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
SUCC (SUCC (plus (nat3) (nat1))) = plus (nat4) (spec (repr (nat_list2)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 0(rank:27.)
rewrite <- IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 0(rank:29.)
rewrite <- IH1 in goal at 0(rank:29.)
=================================================
Progress: 1189


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> case gq (nat4) (length (nat_list2))(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
Case1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
SUCC (plus (nat3) (SUCC (nat1))) = plus (nat4) (spec (repr (nat_list2)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:27.)
rewrite IH2 in goal at 0(rank:29.)
rewrite lemma4 in goal at 0(rank:35.)
rewrite <- IH1 in goal at 0(rank:29.)
rewrite <- IH2 in goal at 0(rank:29.)
=================================================
Progress: 1190


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (plus (nat3) (SUCC (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> case gq (nat4) (length (nat_list2))(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> plus (nat2) (SUCC (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> plus (nat3) (SUCC (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (plus (nat3) (SUCC (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
Case1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
SUCC (plus (nat3) (SUCC (nat1))) = plus (nat4) (spec (repr (nat_list2)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
rewrite <- lemma4 in goal at 0(rank:27.)
rewrite IH2 in goal at 0(rank:29.)
rewrite lemma4 in goal at 0(rank:35.)
rewrite <- IH1 in goal at 0(rank:29.)
rewrite <- IH2 in goal at 0(rank:29.)
=================================================
Progress: 1191


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
---------------------------------------
SUCC (SUCC (plus (nat3) (nat1))) = if gq (nat4) (length (nat_list2)) then plus (nat4) (spec (repr (nat_list2))) else spec (repr (nat_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> case gq (nat4) (length (nat_list2))(rank : 18.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = false -> SUCC (plus (nat2) (nat1)) = spec (repr (nat_list1))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : forall (nat_list1:nat list), lq (length (nat_list1)) (nat3) = true->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat3)) (length (nat_list1)) = false -> SUCC (plus (nat3) (nat1)) = spec (repr (nat_list1))
Inductive1 : nat2 = SUCC (nat3)
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH2 : lq (length (nat_list2)) (SUCC (nat3)) = true->gq (SUCC (nat3)) (length (nat_list2)) = true->gq (SUCC (SUCC (nat3))) (length (nat_list2)) = false -> SUCC (SUCC (plus (nat3) (nat1))) = spec (repr (nat_list2))
Inductive2 : nat_list1 = (nat4::nat_list2)
Cond1 : lq (length (nat_list2)) (nat3) = true
Cond2 : gq (nat3) (length (nat_list2)) = true
Cond3 : gq (SUCC (nat3)) (length (nat_list2)) = false
Case1 : gq (nat4) (length (nat_list2)) = true
---------------------------------------
SUCC (SUCC (plus (nat3) (nat1))) = plus (nat4) (spec (repr (nat_list2)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 0(rank:27.)
rewrite <- IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 0(rank:29.)
rewrite <- IH1 in goal at 0(rank:29.)
=================================================
Progress: 1192


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:20.)
=================================================
Progress: 1193


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat3(rank:19.)
induction nat3(rank:28.)
induction nat_list1(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
intro nat_list1(rank:19.)
=================================================
Progress: 1194


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat_list1(rank:19.)
induction nat2(rank:28.)
induction nat_list1(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1195


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
induction nat2(rank:28.)
induction nat3(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1196


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:20.)
=================================================
Progress: 1197


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat3(rank:19.)
induction nat3(rank:28.)
induction nat_list1(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
intro nat_list1(rank:19.)
=================================================
Progress: 1198


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat_list1(rank:19.)
induction nat2(rank:28.)
induction nat_list1(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1199


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
induction nat2(rank:28.)
induction nat3(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1200


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:20.)
=================================================
Progress: 1201


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat3(rank:19.)
induction nat3(rank:28.)
induction nat_list1(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
intro nat_list1(rank:19.)
=================================================
Progress: 1202


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat_list1(rank:19.)
induction nat2(rank:28.)
induction nat_list1(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1203


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
induction nat2(rank:28.)
induction nat3(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1204


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:20.)
=================================================
Progress: 1205


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat3(rank:19.)
induction nat3(rank:28.)
induction nat_list1(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
intro nat_list1(rank:19.)
=================================================
Progress: 1206


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat_list1(rank:19.)
induction nat2(rank:28.)
induction nat_list1(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1207


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
induction nat2(rank:28.)
induction nat3(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1208


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:20.)
=================================================
Progress: 1209


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat3(rank:19.)
induction nat3(rank:28.)
induction nat_list1(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
intro nat_list1(rank:19.)
=================================================
Progress: 1210


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat_list1(rank:19.)
induction nat2(rank:28.)
induction nat_list1(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1211


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
induction nat2(rank:28.)
induction nat3(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1212


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:20.)
=================================================
Progress: 1213


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat3(rank:19.)
induction nat3(rank:28.)
induction nat_list1(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
intro nat_list1(rank:19.)
=================================================
Progress: 1214


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat_list1(rank:19.)
induction nat2(rank:28.)
induction nat_list1(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1215


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
induction nat2(rank:28.)
induction nat3(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1216


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:19.)
intro nat_list1(rank:19.)
induction nat_list1(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1217


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:19.)
induction nat3(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1218


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:19.)
induction nat2(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1219


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:19.)
intro nat_list1(rank:19.)
induction nat_list1(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1220


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:19.)
induction nat3(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1221


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:19.)
induction nat2(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1222


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:19.)
intro nat_list1(rank:19.)
induction nat_list1(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1223


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:19.)
induction nat3(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1224


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:19.)
induction nat2(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1225


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:19.)
intro nat_list1(rank:19.)
induction nat_list1(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1226


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:19.)
induction nat3(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1227


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:19.)
induction nat2(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1228


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:19.)
intro nat_list1(rank:19.)
induction nat_list1(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1229


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:19.)
induction nat3(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1230


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:19.)
induction nat2(rank:28.)
rewrite <- lemma4 in goal at 0(rank:28.)
=================================================
Progress: 1231


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:19.)
intro nat_list1(rank:19.)
induction nat_list1(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1232


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:19.)
induction nat3(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1233


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:19.)
induction nat2(rank:28.)
rewrite lemma4 in goal at 0(rank:36.)
=================================================
Progress: 1234


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:20.)
=================================================
Progress: 1235


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 1236


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat_list1 : nat list
nat1 : nat
---------------------------------------
forall (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat3(rank:20.)
=================================================
Progress: 1237


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
nat_list1 : nat list
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:20.)
=================================================
Progress: 1238


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:20.)
=================================================
Progress: 1239


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 1240


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat_list1 : nat list
nat1 : nat
---------------------------------------
forall (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat3(rank:20.)
=================================================
Progress: 1241


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
nat_list1 : nat list
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:20.)
=================================================
Progress: 1242


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:20.)
=================================================
Progress: 1243


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 1244


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat_list1 : nat list
nat1 : nat
---------------------------------------
forall (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat3(rank:20.)
=================================================
Progress: 1245


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat3 : nat
nat_list1 : nat list
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:20.)
=================================================
Progress: 1246


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:20.)
=================================================
Progress: 1247


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 1248


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat2 : nat
nat_list1 : nat list
nat1 : nat
---------------------------------------
forall (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat3(rank:20.)
=================================================
Progress: 1249


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))
nat3 : nat
nat_list1 : nat list
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (nat3) (length (nat_list1)) = true->gq (SUCC (nat2)) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = plus (nat2) (SUCC (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:20.)
=================================================
Progress: 1250


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:20.)
=================================================
Progress: 1251


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:19.)
=================================================
Progress: 1252


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 19.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat_list1 : nat list
nat1 : nat
---------------------------------------
forall (nat3:nat), lq (length (nat_list1)) (nat2) = true->gq (nat2) (length (nat_list1)) = false->gq (SUCC (nat2)) (length (nat_list1)) = true->gq (nat3) (length (nat_list1)) = true -> plus (nat3) (spec (repr (nat_list1))) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

2 conjecture(s) more...
