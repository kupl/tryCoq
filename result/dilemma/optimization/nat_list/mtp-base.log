Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:nat list), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), maximum (map (tf7 (nat_list1) (nat_list1))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), maximum (map (tf7 (nat_list1) (nat_list1))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
maximum (map (tf7 ((Nil)) ((Nil)))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
maximum (map (tf7 ((Nil)) ((Nil)))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
maximum (map (tf7 ((nat1::nat_list2)) ((nat1::nat_list2)))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
maximum (map (tf7 ((nat1::nat_list2)) ((nat1::nat_list2)))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
max (times (nat1) (product (nat_list2))) (maximum (map (tf7 (nat_list2) (nat_list2)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 0(rank:11.)
=================================================
Progress: 6


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
max (times (nat1) (product (nat_list2))) (maximum (map (tf7 (nat_list2) (nat_list2)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
max (times (nat1) (product (nat_list2))) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: max (times (SUCC (ZERO)) (product ((Nil)))) (0) = max (0) (times (SUCC (ZERO)) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))
Prop: max (times (SUCC (ZERO)) (product ((SUCC (SUCC (ZERO))::(SUCC (SUCC (ZERO))::(Nil)))))) (2) = max (2) (times (SUCC (ZERO)) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((SUCC (SUCC (ZERO))::(SUCC (SUCC (ZERO))::(Nil))))) with
| Tuple2 _ b -> b))
Prop: max (times (SUCC (SUCC (ZERO))) (product ((Nil)))) (3) = max (3) (times (SUCC (SUCC (ZERO))) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: max (times (ZERO) (product ((Nil)))) (4) = max (4) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))
Prop: max (times (SUCC (ZERO)) (product ((Nil)))) (7) = max (7) (times (SUCC (ZERO)) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))
Prop: max (times (SUCC (ZERO)) (product ((Nil)))) (0) = max (0) (times (SUCC (ZERO)) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))
Prop: max (times (ZERO) (product ((SUCC (ZERO)::(Nil))))) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((SUCC (ZERO)::(Nil)))) with
| Tuple2 _ b -> b))
Prop: max (times (ZERO) (product ((Nil)))) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))
Prop: max (times (SUCC (ZERO)) (product ((ZERO::(Nil))))) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((ZERO::(Nil)))) with
| Tuple2 a _ -> a) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((ZERO::(Nil)))) with
| Tuple2 a _ -> a) (times (SUCC (ZERO)) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((ZERO::(Nil)))) with
| Tuple2 _ b -> b))
previous tactics
simpl in goal
parent
times (nat1) (product (nat_list2))
lower
times(_, product(nat_list2))
upper
max(_, maximum(map(tf7(nat_list2, nat_list2))))
remove upper
times(nat1, product(nat_list2))
remove lower
times(nat1, product(nat_list2))
remove upper
times(nat1, times(nat2, product(nat_list3)))
remove lower
times(nat1, times(nat2, product(nat_list3)))
remove upper
times(nat1, times(nat2, times(nat3, product(nat_list4))))
remove lower
times(nat1, times(nat2, times(nat3, product(nat_list4))))
parent
times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b)
lower
times(_, _)
upper
max(_, _)
remove upper
times(nat1, _)
validate generalize_common_subterm_goal
Prop: max (times (ZERO) (product ((Nil)))) (maximum (map (tf7 ((Nil)) ((Nil))))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))
Prop: max (times (ZERO) (product ((Nil)))) (maximum (map (tf7 ((Nil)) ((Nil))))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))
Prop: max (times (ZERO) (product ((ZERO::(SUCC (ZERO)::(ZERO::(Nil))))))) (maximum (map (tf7 ((ZERO::(SUCC (ZERO)::(ZERO::(Nil))))) ((ZERO::(SUCC (ZERO)::(ZERO::(Nil)))))))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((ZERO::(SUCC (ZERO)::(ZERO::(Nil)))))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((ZERO::(SUCC (ZERO)::(ZERO::(Nil)))))) with
| Tuple2 _ b -> b))
Lemma List
forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
max (times (nat1) (product (nat_list2))) (maximum (map (tf7 (nat_list2) (nat_list2)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
max (times (nat1) (product (nat_list2))) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
max (times (nat1) (product (nat_list2))) (maximum (map (tf7 (nat_list2) (nat_list2)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 8


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
max (times (nat1) (product (nat_list2))) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 9


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
max (times (nat1) (product (nat_list2))) (maximum (map (tf7 (nat_list2) (nat_list2)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
max (times (nat1) (product (nat_list2))) (maximum (map (tf7 (nat_list2) (nat_list2)))) = max (maximum (map (tf7 (nat_list2) (nat_list2)))) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: max (times (ZERO) (product ((ZERO::(ZERO::(Nil)))))) (ZERO) = max (ZERO) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((ZERO::(ZERO::(Nil))))) with
| Tuple2 _ b -> b))
Prop: max (times (ZERO) (product ((Nil)))) (ZERO) = max (ZERO) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))
Prop: max (times (SUCC (ZERO)) (product ((ZERO::(Nil))))) (ZERO) = max (ZERO) (times (SUCC (ZERO)) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((ZERO::(Nil)))) with
| Tuple2 _ b -> b))
previous tactics
simpl in goal
parent
times (nat1) (product (nat_list2))
lower
times(_, product(nat_list2))
upper
max(_, maximum(map(tf7(nat_list2, nat_list2))))
remove upper
times(nat1, product(nat_list2))
remove lower
times(nat1, product(nat_list2))
remove upper
times(nat1, times(nat2, product(nat_list3)))
remove lower
times(nat1, times(nat2, product(nat_list3)))
remove upper
times(nat1, times(nat2, times(nat3, product(nat_list4))))
remove lower
times(nat1, times(nat2, times(nat3, product(nat_list4))))
parent
times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b)
lower
times(_, _)
upper
max(_, _)
remove upper
times(nat1, _)
validate generalize_common_subterm_goal
Prop: max (times (SUCC (ZERO)) (product ((Nil)))) (maximum (map (tf7 ((Nil)) ((Nil))))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a) (times (SUCC (ZERO)) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))
Prop: max (times (SUCC (ZERO)) (product ((Nil)))) (maximum (map (tf7 ((Nil)) ((Nil))))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a) (times (SUCC (ZERO)) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))
Prop: max (times (SUCC (ZERO)) (product ((Nil)))) (maximum (map (tf7 ((Nil)) ((Nil))))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a) (times (SUCC (ZERO)) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), max (times (nat2) (product (nat_list1))) (nat1) = max (nat1) (times (nat2) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
max (times (nat1) (product (nat_list2))) (maximum (map (tf7 (nat_list2) (nat_list2)))) = max (maximum (map (tf7 (nat_list2) (nat_list2)))) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 10


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
max (times (nat1) (product (nat_list2))) (maximum (map (tf7 (nat_list2) (nat_list2)))) = max (maximum (map (tf7 (nat_list2) (nat_list2)))) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), max (times (nat2) (product (nat_list1))) (nat1) = max (nat1) (times (nat2) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), max (times (nat2) (product (nat_list1))) (nat1) = max (nat1) (times (nat2) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), max (times (nat2) (product (nat_list1))) (nat1) = max (nat1) (times (nat2) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction nat1(rank:14.)
induction nat2(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 11


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), max (times (ZERO) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 12


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), max (times (ZERO) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), maximum (map (tf7 (nat_list1) (nat_list1))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:7.)
=================================================
Progress: 13


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), maximum (map (tf7 (nat_list1) (nat_list1))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
maximum (map (tf7 ((Nil)) ((Nil)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 14


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
maximum (map (tf7 ((Nil)) ((Nil)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
maximum (map (tf7 ((nat2::nat_list2)) ((nat2::nat_list2)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((nat2::nat_list2))) with
| Tuple2 a _ -> a) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 15


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
maximum (map (tf7 ((nat2::nat_list2)) ((nat2::nat_list2)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((nat2::nat_list2))) with
| Tuple2 a _ -> a) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
max (times (nat2) (product (nat_list2))) (maximum (map (tf7 (nat_list2) (nat_list2)))) = max (max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6.)
=================================================
Progress: 16


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
max (times (nat2) (product (nat_list2))) (maximum (map (tf7 (nat_list2) (nat_list2)))) = max (max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
max (times (nat2) (product (nat_list2))) (max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)) = max (max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: max (times (ZERO) (product ((Nil)))) (max (6) (ZERO)) = max (max (6) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: max (times (ZERO) (product ((Nil)))) (max (4) (ZERO)) = max (max (4) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: max (times (ZERO) (product ((Nil)))) (max (3) (ZERO)) = max (max (3) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
previous tactics
simpl in goal
parent
times (nat2) (product (nat_list2))
lower
times(_, product(nat_list2))
upper
max(_, maximum(map(tf7(nat_list2, nat_list2))))
remove upper
times(nat2, product(nat_list2))
remove lower
times(nat2, product(nat_list2))
remove upper
times(nat2, times(nat3, product(nat_list3)))
remove lower
times(nat2, times(nat3, product(nat_list3)))
remove upper
times(nat2, times(nat3, times(nat4, product(nat_list4))))
remove lower
times(nat2, times(nat3, times(nat4, product(nat_list4))))
parent
times (nat2) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b)
lower
times(_, _)
upper
max(max(_, _), ZERO())
remove upper
times(nat2, _)
validate generalize_common_subterm_goal
Prop: max (times (ZERO) (product ((Nil)))) (maximum (map (tf7 ((Nil)) ((Nil))))) = max (max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: max (times (ZERO) (product ((Nil)))) (maximum (map (tf7 ((Nil)) ((Nil))))) = max (max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
Prop: max (times (ZERO) (product ((Nil)))) (maximum (map (tf7 ((Nil)) ((Nil))))) = max (max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a) (times (ZERO) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 _ b -> b))) (ZERO)
Lemma List
forall (any1:any) (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (max (any1) (ZERO)) = max (max (any1) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO)
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
max (times (nat2) (product (nat_list2))) (max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)) = max (max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 17


1st goal of : forall (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (maximum (map (tf7 (nat_list1) (nat_list1)))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : maximum (map (tf7 (nat_list2) (nat_list2))) = max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
max (times (nat2) (product (nat_list2))) (max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (ZERO)) = max (max (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a) (times (nat2) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list2)) with
| Tuple2 _ b -> b))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (max (any1) (ZERO)) = max (max (any1) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO)(rank : 0.)


1st goal of : forall (any1:any) (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (max (any1) (ZERO)) = max (max (any1) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO)

---------------------------------------
forall (any1:any) (nat1:nat) (nat_list1:nat list), max (times (nat1) (product (nat_list1))) (max (any1) (ZERO)) = max (max (any1) (times (nat1) (match (tf9 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 _ b -> b))) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Fatal error: exception Invalid_argument("option is None")
Raised at Stdlib.invalid_arg in file "stdlib.ml", line 30, characters 20-45
Called from Stdlib__Option.get in file "option.ml" (inlined), line 21, characters 41-69
Called from Dilemma__Prover.rank_tactics in file "lib/prover.ml", line 1356, characters 35-70
Called from Dilemma__Prover.prune_rank_worklist_update_state_list in file "lib/prover.ml", line 1452, characters 4-65
Called from Dilemma__Engine.progress in file "lib/engine.ml", lines 198-202, characters 9-20
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 283, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
