Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:nat list), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), tf0 (map (tf6 (nat_list1))) = match (tf8 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:3.)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), tf0 (map (tf6 (nat_list1))) = match (tf8 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> intro nat_list1(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
---------------------------------------
tf0 (map (tf6 (nat_list1))) = match (tf8 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: tf0 (map (tf6 ((Nil)))) = match (tf8 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a
Prop: tf0 (map (tf6 ((Nil)))) = match (tf8 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) with
| Tuple2 a _ -> a
Prop: tf0 (map (tf6 ((ZERO::(Nil))))) = match (tf8 (Tuple2 (SUCC (ZERO)) (SUCC (ZERO))) ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
asdf
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
