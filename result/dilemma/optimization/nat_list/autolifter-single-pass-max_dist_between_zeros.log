Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:nat list), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:4.)
=================================================
Progress: 6


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 7


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 8


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:5.)
=================================================
Progress: 9


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 10


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:5.)
=================================================
Progress: 11


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 12


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH1 in goal at 0(rank:4.)
=================================================
Progress: 13


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Lemma List
forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 14


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 15


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 16


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = false -> ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 17


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = false -> ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = false -> ZERO = tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 18


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = false -> ZERO = tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 19


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:6.)
=================================================
Progress: 20


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = false -> ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 21


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = false -> ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = false -> ZERO = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 22


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = false -> ZERO = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 23


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case match (nat1) with
| true -> false
| false -> true(rank:6.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:22.)
=================================================
Progress: 24


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:7.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 25


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 26


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 27


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 28


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
true = false

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 29


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((ZERO::(ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil)))))) ((ZERO::(ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil))))))) = match (tf6 ((ZERO::(ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil))))))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 30


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 31


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 32


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 33


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 34


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:6.)
=================================================
Progress: 35


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:7.)
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 36


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 0(rank:16.)
=================================================
Progress: 37


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 38


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 39


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 40


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
case lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: ZERO = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: ZERO = tf4 (ZERO) (tf1 ((SUCC (SUCC (ZERO))::(ZERO::(Nil)))) ((SUCC (SUCC (ZERO))::(ZERO::(Nil)))))
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
case lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 41


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 42


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 43


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 44


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 45


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 46


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case match (nat1) with
| true -> false
| false -> true(rank:6.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:22.)
=================================================
Progress: 47


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 48


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 49


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false -> ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 50


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false -> ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:6.)
=================================================
Progress: 51


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 52


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:7.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 53


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 54


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 55


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite Cond1 in goal at 0(rank:15.)
rewrite <- Cond1 in goal at 0(rank:15.)
=================================================
Progress: 56


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:7.)
=================================================
Progress: 57


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 58


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 5
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 59


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 60


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 61


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:7.)
=================================================
Progress: 62


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 0(rank:16.)
=================================================
Progress: 63


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:7.)
=================================================
Progress: 64


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 65


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 5
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:7.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 66


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 67


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : true = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 68


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : true = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 4
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 69


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:7.)
=================================================
Progress: 70


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 0(rank:16.)
=================================================
Progress: 71


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
lq (ZERO) (ZERO) = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 72


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
lq (ZERO) (ZERO) = false

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
---------------------------------------
false = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 73


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (ZERO) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 74


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (ZERO) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
=================================================
Progress: 75


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 76


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
rewrite IH1 in goal at 1(rank:23.)
=================================================
Progress: 77


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: ZERO = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 78


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 79


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 80


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 81


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 82


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case match (nat1) with
| true -> false
| false -> true(rank:8.)
rewrite IH1 in goal at 1(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:24.)
=================================================
Progress: 83


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

2 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 8.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 84


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:8.)
=================================================
Progress: 85


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 8.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 86


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:8.)
=================================================
Progress: 87


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 8.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 88


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : false = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : false = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 89


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : false = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : false = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 90


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
reflexivity
discriminate
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: lq (ZERO) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true
Prop: lq (ZERO) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true
Prop: lq (ZERO) (match (tf6 ((SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil))))) with
| Tuple2 a _ -> a) = true
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
reflexivity
discriminate
validate generalize_common_subterm_goal
Prop: lq (ZERO) (tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))) = true
Prop: lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true
Prop: lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true
Lemma List
forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 91


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 92


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8.)
=================================================
Progress: 93


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 94


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 95


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 96


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case match (nat1) with
| true -> false
| false -> true(rank:8.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 3(rank:24.)
=================================================
Progress: 97


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 8.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 98


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 99


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 100


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case match (nat1) with
| true -> false
| false -> true(rank:8.)
rewrite <- IH1 in goal at 3(rank:16.)
rewrite <- IH1 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
=================================================
Progress: 101


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 8.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:9.)
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 2(rank:25.)
rewrite <- IH1 in goal at 3(rank:17.)
=================================================
Progress: 102


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true

0 goal(s) more...

2 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 8.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 103


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list1) (nat_list1)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> true = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:17.)
rewrite <- Case2 in goal at 0(rank:17.)
=================================================
Progress: 104


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 105


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond1 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 106


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
false = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 107


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
false = false

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
ZERO = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 4
Tactic List : 5
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:6.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:22.)
=================================================
Progress: 108


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
ZERO = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 109


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
ZERO = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:7.)
=================================================
Progress: 110


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 111


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : true = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 112


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : true = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 113


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
ZERO = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
ZERO = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 114


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
ZERO = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
ZERO = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 115


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
lq (ZERO) (ZERO) = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 116


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
lq (ZERO) (ZERO) = false

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
false = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond1 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 2(rank:22.)
=================================================
Progress: 117


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (ZERO) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 118


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (ZERO) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite Cond1 in goal at 0(rank:14.)
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 119


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
false = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 120


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
false = false

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
ZERO = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 3
Tactic List : 4
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank:6.)
rewrite <- Cond1 in goal at 2(rank:21.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 1(rank:21.)
=================================================
Progress: 121


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
ZERO = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: ZERO = tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))
Prop: ZERO = tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: ZERO = tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Lemma List
forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 122


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:12.)
=================================================
Progress: 123


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (if lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) then fst2 (tf6 ((Nil))) else plus (SUCC (ZERO)) (fst2 (tf6 ((Nil))))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 124


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (if lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) then fst2 (tf6 ((Nil))) else plus (SUCC (ZERO)) (fst2 (tf6 ((Nil))))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 125


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 126


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 127


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:12.)
=================================================
Progress: 128


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 12.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:13.)
=================================================
Progress: 129


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 13.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: ZERO = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
Prop: ZERO = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Lemma List
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 130


1st goal of : forall (nat_list1:nat list), lq (ZERO) (if lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list1)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list1)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = false->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 ((nat1::nat_list2))) else plus (SUCC (ZERO)) (fst2 (tf6 ((nat1::nat_list2))))) = false
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 131


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 132


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> ZERO = tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 133


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> ZERO = tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 134


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 135


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:14.)
=================================================
Progress: 136


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
ZERO = if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 0(rank:24.)
=================================================
Progress: 137


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 138


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 2(rank:24.)
=================================================
Progress: 139


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (ZERO) = false

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 140


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (ZERO) (ZERO) = false

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = false -> ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
false = false

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 1(rank:23.)
rewrite <- Cond1 in goal at 2(rank:23.)
=================================================
Progress: 141


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 142


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
match (tf6 (nat_list2)) with
| Tuple2 a _ -> a = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond1 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 143


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
false = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 144


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
false = false

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : true = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 4
Tactic List : 1
discriminate(rank:4.)
=================================================
Progress: 145


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : true = false
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
original goal
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
lemma
forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
tactics
assert forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = false -> ZERO = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
induction nat_list1
reflexivity
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
Deduplication: 14
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma3 in goal at 0(rank:13.)
=================================================
Progress: 146


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: ZERO = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
validate generalize_common_subterm_goal
Prop: ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: ZERO = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 147


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = ZERO

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 148


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
ZERO = ZERO

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Case2 in goal at 0(rank:12.)
rewrite <- Case2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma3 in goal at 0(rank:13.)
=================================================
Progress: 149


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
false = false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 150


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = false
---------------------------------------
false = false

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 56
Tactic List : 4
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank:4.)
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:4.)
rewrite <- IH1 in goal at 0(rank:11.)
rewrite <- lemma3 in goal at 0(rank:12.)
=================================================
Progress: 151


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma3 in goal at 0(rank:13.)
=================================================
Progress: 152


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma3 in goal at 0(rank:21.)
=================================================
Progress: 153


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 0(rank:22.)
=================================================
Progress: 154


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 0(rank:22.)
=================================================
Progress: 155


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank:4.)
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:4.)
=================================================
Progress: 156


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 157


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma3 in goal at 0(rank:21.)
=================================================
Progress: 158


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 0(rank:22.)
=================================================
Progress: 159


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 0(rank:22.)
=================================================
Progress: 160


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 161


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- lemma3 in goal at 0(rank:21.)
=================================================
Progress: 162


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:5.)
=================================================
Progress: 163


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 0(rank:22.)
=================================================
Progress: 164


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank:5.)
=================================================
Progress: 165


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 166


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 167


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(ZERO::(ZERO::(Nil))))) ((ZERO::(ZERO::(ZERO::(Nil)))))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = tf4 (ZERO) ((true::(Nil)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (ZERO) ((false::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Lemma List
forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 168


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 169


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
---------------------------------------
forall (bool_list1:bool list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 170


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
---------------------------------------
forall (bool_list1:bool list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 171


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:10.)
=================================================
Progress: 172


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction bool_list1(rank : 10.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 173


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 174


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case bool1(rank:10.)
=================================================
Progress: 175


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> case bool1(rank : 10.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 15
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:11.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:11.)
rewrite <- Cond1 in goal at 3(rank:26.)
rewrite <- Cond2 in goal at 0(rank:26.)
rewrite <- Cond2 in goal at 1(rank:26.)
rewrite <- Cond2 in goal at 2(rank:26.)
rewrite IH1 in goal at 0(rank:26.)
rewrite <- Case1 in goal at 1(rank:26.)
rewrite <- Case1 in goal at 3(rank:26.)
rewrite <- Cond1 in goal at 0(rank:26.)
rewrite <- Cond1 in goal at 1(rank:26.)
rewrite <- Cond1 in goal at 2(rank:26.)
rewrite <- Case1 in goal at 2(rank:26.)
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Cond2 in goal at 3(rank:26.)
=================================================
Progress: 176


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 11.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 18
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:12.)
rewrite IH1 in goal at 0(rank:27.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 3(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 1(rank:27.)
rewrite <- Case2 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 3(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
rewrite <- Cond1 in goal at 3(rank:27.)
rewrite <- Cond2 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 1(rank:27.)
rewrite <- Cond2 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 3(rank:27.)
=================================================
Progress: 177


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 11.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 18
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:12.)
rewrite IH1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 3(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 1(rank:27.)
rewrite <- Case2 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 3(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
rewrite <- Cond1 in goal at 3(rank:27.)
rewrite <- Cond2 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 1(rank:27.)
rewrite <- Cond2 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 3(rank:27.)
=================================================
Progress: 178


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank:5.)
=================================================
Progress: 179


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 180


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 181


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Lemma List
forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 182


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:6.)
=================================================
Progress: 183


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction bool_list1(rank : 6.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 184


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 185


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case bool1(rank:6.)
=================================================
Progress: 186


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> case bool1(rank : 6.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:7.)
rewrite <- Case1 in goal at 3(rank:22.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 1(rank:22.)
rewrite <- Case1 in goal at 2(rank:22.)
=================================================
Progress: 187


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:8.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
=================================================
Progress: 188


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:8.)
rewrite IH1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
=================================================
Progress: 189


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 190


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 191


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (ZERO) ((true::(Nil)))
asdf
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
asdf
=================================================
Progress: 192


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 193


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 194


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 195


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank:5.)
=================================================
Progress: 196


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 197


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 198


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- lemma3 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = SUCC (ZERO)
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = SUCC (ZERO)
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = SUCC (ZERO)
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- lemma3 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = SUCC (match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a)
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = SUCC (match (tf6 ((Nil))) with
| Tuple2 a _ -> a)
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = SUCC (match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a)
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- lemma3 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
Prop: tf4 (SUCC (ZERO)) ((false::(true::(true::(Nil))))) = SUCC (tf4 (ZERO) ((false::(true::(true::(Nil))))))
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = SUCC (tf4 (ZERO) ((false::(Nil))))
Prop: tf4 (SUCC (ZERO)) ((true::(false::(Nil)))) = SUCC (tf4 (ZERO) ((true::(false::(Nil)))))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (tf4 (ZERO) ((Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (tf4 (ZERO) ((Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (tf4 (ZERO) ((Nil)))
Lemma List
forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 199


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))(rank : 0.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))

---------------------------------------
forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:5.)
=================================================
Progress: 200


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))

---------------------------------------
forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))
nat_list1 : nat list
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 201


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))
nat_list1 : nat list
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:6.)
=================================================
Progress: 202


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction bool_list1(rank : 6.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (SUCC (ZERO)) ((Nil)) = SUCC (tf4 (ZERO) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 203


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (SUCC (ZERO)) ((Nil)) = SUCC (tf4 (ZERO) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (tf4 (ZERO) (bool_list1))
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
ZERO = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 204


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 12.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:12.)
=================================================
Progress: 205


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 12.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:12.)
=================================================
Progress: 206


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 207


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 208


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 209


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 210


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 211


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 212


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 213


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 214


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 215


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 216


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (ZERO) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
asdf
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
asdf
=================================================
Progress: 217


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(false::(false::(Nil))))) = tf4 (ZERO) ((false::(false::(false::(Nil)))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(true::(Nil)))) = tf4 (SUCC (ZERO)) ((true::(true::(Nil))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
asdf
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 218


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 219


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite IH1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
=================================================
Progress: 220


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
=================================================
Progress: 221


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 222


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 223


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 224


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 225


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 226


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
=================================================
Progress: 227


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 228


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 0(rank:22.)
=================================================
Progress: 229


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite <- IH1 in goal at 0
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = tf4 (ZERO) ((true::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = tf4 (ZERO) ((true::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 230


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 231


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 232


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 233


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:10.)
=================================================
Progress: 234


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction bool_list1(rank : 10.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 235


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 236


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case bool1(rank:10.)
=================================================
Progress: 237


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> case bool1(rank : 10.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 15
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:11.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:11.)
rewrite <- Cond1 in goal at 3(rank:26.)
rewrite <- Cond2 in goal at 0(rank:26.)
rewrite <- Cond2 in goal at 1(rank:26.)
rewrite <- Cond2 in goal at 2(rank:26.)
rewrite IH1 in goal at 0(rank:26.)
rewrite <- Case1 in goal at 1(rank:26.)
rewrite <- Case1 in goal at 3(rank:26.)
rewrite <- Cond1 in goal at 0(rank:26.)
rewrite <- Cond1 in goal at 1(rank:26.)
rewrite <- Cond1 in goal at 2(rank:26.)
rewrite <- Case1 in goal at 2(rank:26.)
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Cond2 in goal at 3(rank:26.)
=================================================
Progress: 238


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 11.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 18
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:12.)
rewrite IH1 in goal at 0(rank:27.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 3(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 1(rank:27.)
rewrite <- Case2 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 3(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
rewrite <- Cond1 in goal at 3(rank:27.)
rewrite <- Cond2 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 1(rank:27.)
rewrite <- Cond2 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 3(rank:27.)
=================================================
Progress: 239


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 11.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 18
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:12.)
rewrite IH1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 3(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 1(rank:27.)
rewrite <- Case2 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 3(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
rewrite <- Cond1 in goal at 3(rank:27.)
rewrite <- Cond2 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 1(rank:27.)
rewrite <- Cond2 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 3(rank:27.)
=================================================
Progress: 240


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 12.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:12.)
=================================================
Progress: 241


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 12.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:12.)
=================================================
Progress: 242


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(true::(false::(Nil))))) = tf4 (ZERO) ((false::(true::(false::(Nil)))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
asdf
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 243


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 244


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(false::(Nil)))) = tf4 (SUCC (ZERO)) ((true::(false::(Nil))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
asdf
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 245


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 246


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 247


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 248


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 249


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 250


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 251


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 252


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 253


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 254


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 255


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 256


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
=================================================
Progress: 257


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
=================================================
Progress: 258


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (ZERO) ((false::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (ZERO) ((false::(Nil)))
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
=================================================
Progress: 259


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
Prop: tf4 (SUCC (ZERO)) ((false::(false::(Nil)))) = tf4 (ZERO) ((false::(false::(Nil))))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
=================================================
Progress: 260


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (ZERO) ((false::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 261


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 262


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
rewrite IH1 in goal at 0(rank:31.)
=================================================
Progress: 263


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:14.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 264


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 265


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 13
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:14.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 266


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 267


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 13
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:14.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 268


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite <- lemma3 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (tf4 (ZERO) ((Nil)))
Prop: tf4 (SUCC (ZERO)) ((true::(true::(false::(true::(Nil)))))) = SUCC (tf4 (ZERO) ((true::(true::(false::(true::(Nil)))))))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (tf4 (ZERO) ((Nil)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (tf4 (ZERO) ((Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (tf4 (ZERO) ((Nil)))
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = SUCC (tf4 (ZERO) ((true::(Nil))))
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite <- lemma3 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = SUCC (match (tf6 ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 a _ -> a)
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = SUCC (match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a)
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = SUCC (match (tf6 ((Nil))) with
| Tuple2 a _ -> a)
=================================================
Progress: 269


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 270


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 13
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:14.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 271


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 272


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 13
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:14.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 273


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 274


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 275


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
asdf
=================================================
Progress: 276


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(true::(Nil)))) = tf4 (SUCC (ZERO)) ((false::(true::(Nil))))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 277


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 278


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 279


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 280


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(true::(false::(Nil))))) = tf4 (SUCC (ZERO)) ((false::(true::(false::(Nil)))))
asdf
=================================================
Progress: 281


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
asdf
=================================================
Progress: 282


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 283


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 284


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
=================================================
Progress: 285


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
=================================================
Progress: 286


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
=================================================
Progress: 287


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 288


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(false::(true::(Nil))))) = tf4 (SUCC (ZERO)) ((false::(false::(true::(Nil)))))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 289


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 290


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 291


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 292


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 293


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 294


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 295


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 296


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 297


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 298


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 299


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 300


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 301


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite IH1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
=================================================
Progress: 302


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
=================================================
Progress: 303


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite IH1 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 3(rank:29.)
=================================================
Progress: 304


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:14.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 305


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 306


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 13
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:14.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 307


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 308


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 309


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(true::(Nil)))) = tf4 (SUCC (ZERO)) ((true::(true::(Nil))))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
asdf
=================================================
Progress: 310


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 311


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 312


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(true::(false::(true::(Nil)))))) = tf4 (SUCC (ZERO)) ((true::(true::(false::(true::(Nil))))))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 313


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 314


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
asdf
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 315


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 316


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(true::(Nil)))) = tf4 (SUCC (SUCC (ZERO))) ((true::(true::(Nil))))
asdf
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 317


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 318


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 319


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 320


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 19.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 17
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:12.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 1(rank:27.)
rewrite <- Case2 in goal at 2(rank:27.)
rewrite <- Case2 in goal at 3(rank:27.)
rewrite <- Case1 in goal at 3(rank:27.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond2 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 1(rank:27.)
rewrite <- Cond2 in goal at 2(rank:27.)
rewrite <- Cond2 in goal at 3(rank:27.)
rewrite <- Cond1 in goal at 3(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 321


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 12.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:12.)
=================================================
Progress: 322


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (ZERO) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (ZERO) ((true::(Nil)))
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(false::(false::(Nil))))) = tf4 (SUCC (ZERO)) ((false::(false::(false::(Nil)))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 323


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 324


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 325


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 326


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 327


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 328


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 329


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 330


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 331


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 332


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 333


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 334


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 335


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite IH1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
=================================================
Progress: 336


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
=================================================
Progress: 337


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite IH1 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 3(rank:29.)
=================================================
Progress: 338


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:14.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 339


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 340


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 13
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:14.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 341


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 342


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 343


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
asdf
=================================================
Progress: 344


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(false::(Nil)))) = tf4 (SUCC (ZERO)) ((false::(false::(Nil))))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
=================================================
Progress: 345


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(true::(false::(Nil))))) = tf4 (SUCC (ZERO)) ((false::(true::(false::(Nil)))))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(true::(Nil)))) = tf4 (SUCC (ZERO)) ((true::(true::(Nil))))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 346


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 347


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
asdf
=================================================
Progress: 348


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 19.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 17
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:12.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 1(rank:27.)
rewrite <- Case2 in goal at 2(rank:27.)
rewrite <- Case2 in goal at 3(rank:27.)
rewrite <- Case1 in goal at 3(rank:27.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- Cond2 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 1(rank:27.)
rewrite <- Cond2 in goal at 2(rank:27.)
rewrite <- Cond2 in goal at 3(rank:27.)
rewrite <- Cond1 in goal at 3(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
=================================================
Progress: 349


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 12.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:12.)
=================================================
Progress: 350


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(true::(Nil)))) = tf4 (SUCC (ZERO)) ((true::(true::(Nil))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
asdf
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 351


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
nat_list1 : nat list
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 352


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 353


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 354


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 355


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 356


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 357


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
=================================================
Progress: 358


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 359


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 13
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:14.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 360


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(false::(false::(Nil))))) = tf4 (SUCC (ZERO)) ((true::(false::(false::(Nil)))))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
asdf
=================================================
Progress: 361


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
asdf
=================================================
Progress: 362


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:5.)
rewrite <- lemma3 in goal at 0(rank:13.)
=================================================
Progress: 363


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 0(rank:22.)
=================================================
Progress: 364


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 365


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = if lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (ZERO) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 0(rank:22.)
=================================================
Progress: 366


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite <- IH1 in goal at 0
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 367


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = SUCC (tf4 (ZERO) ((true::(Nil))))
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = SUCC (tf4 (ZERO) ((false::(Nil))))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (tf4 (ZERO) ((Nil)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (tf4 (ZERO) ((Nil)))
Prop: tf4 (SUCC (ZERO)) ((false::(false::(false::(Nil))))) = SUCC (tf4 (ZERO) ((false::(false::(false::(Nil))))))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (tf4 (ZERO) ((Nil)))
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = SUCC (match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a)
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = SUCC (match (tf6 ((Nil))) with
| Tuple2 a _ -> a)
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = SUCC (match (tf6 ((Nil))) with
| Tuple2 a _ -> a)
=================================================
Progress: 368


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 21.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank:6.)
=================================================
Progress: 369


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite <- lemma3 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Lemma List
forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 370


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 371


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 372


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 373


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 374


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 375


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:10.)
=================================================
Progress: 376


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
rewrite <- Cond1 in goal at 2(rank:26.)
rewrite <- Cond1 in goal at 0(rank:26.)
rewrite <- Cond1 in goal at 1(rank:26.)
=================================================
Progress: 377


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = ZERO
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO
Lemma List
forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 378


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:16.)
=================================================
Progress: 379


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 16.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 380


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 381


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 382


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 383


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 384


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond3 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:16.)
=================================================
Progress: 385


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond3 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 16.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond3 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:17.)
rewrite IH1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:32.)
rewrite <- Cond1 in goal at 1(rank:32.)
rewrite <- Cond1 in goal at 2(rank:32.)
=================================================
Progress: 386


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond3 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 17.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 387


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = ZERO

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 388


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = ZERO

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 0(rank:27.)
rewrite <- lemma3 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:27.)
=================================================
Progress: 389


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 21.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank:6.)
=================================================
Progress: 390


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- lemma3 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = ZERO
Lemma List
forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 391


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 392


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 393


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 394


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 395


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 396


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:10.)
=================================================
Progress: 397


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
=================================================
Progress: 398


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = ZERO
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO
Lemma List
forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 399


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:16.)
=================================================
Progress: 400


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 16.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 401


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 402


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 403


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 404


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 405


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond3 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:16.)
=================================================
Progress: 406


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond3 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 16.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond3 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:17.)
rewrite IH1 in goal at 0(rank:27.)
=================================================
Progress: 407


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond3 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 17.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 408


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = ZERO

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 409


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = ZERO

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:18.)
=================================================
Progress: 410


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 18.)


1st goal of : forall (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond2 in goal at 0(rank:26.)
rewrite IH1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 0(rank:26.)
rewrite <- Cond2 in goal at 0(rank:26.)
=================================================
Progress: 411


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 21.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank:6.)
=================================================
Progress: 412


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) then tf4 (if false then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if false then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- lemma3 in goal at 0
simpl in goal
rewrite <- lemma3 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = SUCC (ZERO)
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = SUCC (ZERO)
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = SUCC (ZERO)
Lemma List
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 413


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 414


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 415


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = SUCC (ZERO)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 416


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = SUCC (ZERO)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 417


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:6.)
=================================================
Progress: 418


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:7.)
=================================================
Progress: 419


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((ZERO::(ZERO::(SUCC (ZERO)::(Nil))))) ((ZERO::(ZERO::(SUCC (ZERO)::(Nil)))))) = SUCC (ZERO)
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = SUCC (ZERO)
Prop: tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = SUCC (ZERO)
Lemma List
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 420


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:12.)
=================================================
Progress: 421


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 12.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 422


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 423


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 424


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 425


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case match (nat1) with
| true -> false
| false -> true(rank:12.)
rewrite <- IH1 in goal at 0(rank:29.)
rewrite <- IH1 in goal at 1(rank:29.)
rewrite <- IH1 in goal at 2(rank:29.)
rewrite <- IH1 in goal at 3(rank:29.)
=================================================
Progress: 426


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 12.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:13.)
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:30.)
rewrite <- IH1 in goal at 1(rank:30.)
rewrite <- IH1 in goal at 2(rank:30.)
rewrite <- IH1 in goal at 3(rank:22.)
=================================================
Progress: 427


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 13.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = SUCC (ZERO)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 428


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 22.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = ZERO
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 429


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 430


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 431


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true->lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 432


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true->lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 433


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 434


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 435


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:10.)
=================================================
Progress: 436


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true->lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 437


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true->lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 438


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 439


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 440


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:10.)
=================================================
Progress: 441


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- Cond2 in goal at 2(rank:26.)
rewrite <- Cond2 in goal at 0(rank:26.)
rewrite <- Cond2 in goal at 1(rank:26.)
rewrite <- lemma3 in goal at 0(rank:27.)
=================================================
Progress: 442


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
rewrite <- Cond2 in goal at 2(rank:26.)
rewrite <- Cond2 in goal at 0(rank:26.)
rewrite <- Cond2 in goal at 1(rank:26.)
=================================================
Progress: 443


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 0(rank:28.)
=================================================
Progress: 444


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(ZERO::(Nil))))) ((ZERO::(SUCC (ZERO)::(ZERO::(Nil)))))) = ZERO
Prop: tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = ZERO
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO
Lemma List
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 445


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:16.)
=================================================
Progress: 446


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 16.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 447


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 448


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 449


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 450


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 451


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
Cond3 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:16.)
=================================================
Progress: 452


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
Cond3 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 16.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond3 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:17.)
rewrite IH1 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 0(rank:32.)
rewrite <- Cond2 in goal at 1(rank:32.)
rewrite <- Cond2 in goal at 2(rank:32.)
=================================================
Progress: 453


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond3 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 17.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 454


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:13.)
rewrite <- Cond2 in goal at 2(rank:28.)
rewrite <- Cond2 in goal at 0(rank:28.)
rewrite <- Cond2 in goal at 1(rank:28.)
=================================================
Progress: 455


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 13.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:15.)
=================================================
Progress: 456


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 457


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

6 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Lemma List
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 458


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:8.)
=================================================
Progress: 459


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 460


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 461


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:8.)
=================================================
Progress: 462


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:9.)
rewrite <- IH1 in goal at 0(rank:24.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
=================================================
Progress: 463


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 1(rank:25.)
rewrite <- Case2 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 464


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 1(rank:25.)
rewrite <- Case2 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 465


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 466


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 467


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((false::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((false::(Nil)))
Prop: tf4 (ZERO) ((false::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((false::(Nil)))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 468


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 469


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 470


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((false::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((false::(Nil)))
asdf
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
asdf
=================================================
Progress: 471


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 472


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 473


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 474


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 475


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case bool1(rank:14.)
=================================================
Progress: 476


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 477


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 478


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 479


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 480


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case bool1(rank:14.)
=================================================
Progress: 481


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> case bool1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:15.)
rewrite <- IH1 in goal at 0(rank:32.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:15.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 482


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> case bool1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:15.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:15.)
=================================================
Progress: 483


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:16.)
rewrite <- Cond1 in goal at 0(rank:31.)
rewrite <- Cond1 in goal at 1(rank:31.)
rewrite <- Cond1 in goal at 2(rank:31.)
rewrite <- Cond1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
rewrite <- IH1 in goal at 0(rank:33.)
=================================================
Progress: 484


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:16.)
rewrite <- Cond2 in goal at 0(rank:31.)
rewrite <- Cond2 in goal at 1(rank:31.)
rewrite <- Cond2 in goal at 2(rank:31.)
rewrite <- Cond2 in goal at 3(rank:31.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
=================================================
Progress: 485


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 9
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:16.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
=================================================
Progress: 486


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 13
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:16.)
rewrite <- Cond2 in goal at 0(rank:31.)
rewrite <- Cond2 in goal at 1(rank:31.)
rewrite <- Cond2 in goal at 2(rank:31.)
rewrite <- Cond2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
=================================================
Progress: 487


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 488


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 489


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((false::(false::(true::(Nil))))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(false::(true::(Nil)))))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 490


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:24.)
=================================================
Progress: 491


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 492


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:24.)
=================================================
Progress: 493


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 1(rank:25.)
rewrite <- Case2 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 494


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 495


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 496


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 497


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 498


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 499


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 500


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 501


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 502


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case bool1(rank:14.)
=================================================
Progress: 503


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 504


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 505


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 506


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 507


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case bool1(rank:14.)
=================================================
Progress: 508


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> case bool1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:15.)
rewrite <- IH1 in goal at 0(rank:32.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:15.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 509


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> case bool1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:15.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:15.)
=================================================
Progress: 510


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:16.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
rewrite <- IH1 in goal at 0(rank:33.)
=================================================
Progress: 511


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:16.)
rewrite <- Cond1 in goal at 0(rank:31.)
rewrite <- Cond1 in goal at 1(rank:31.)
rewrite <- Cond1 in goal at 2(rank:31.)
rewrite <- Cond1 in goal at 3(rank:31.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
=================================================
Progress: 512


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 9
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:16.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
=================================================
Progress: 513


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 13
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:16.)
rewrite <- Cond1 in goal at 0(rank:31.)
rewrite <- Cond1 in goal at 1(rank:31.)
rewrite <- Cond1 in goal at 2(rank:31.)
rewrite <- Cond1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
=================================================
Progress: 514


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 515


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 516


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((false::(false::(Nil)))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(false::(Nil))))
Prop: tf4 (SUCC (ZERO)) ((true::(false::(true::(Nil))))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(false::(true::(Nil)))))
asdf
=================================================
Progress: 517


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 518


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:24.)
=================================================
Progress: 519


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((true::(true::(Nil)))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(true::(Nil))))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(false::(Nil)))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(false::(Nil))))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 520


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:24.)
=================================================
Progress: 521


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
asdf
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 522


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:24.)
=================================================
Progress: 523


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 524


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:24.)
=================================================
Progress: 525


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:24.)
=================================================
Progress: 526


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((false::(false::(false::(Nil))))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(false::(false::(Nil)))))
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil)))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(false::(false::(Nil))))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(false::(false::(Nil)))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
asdf
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 527


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:24.)
=================================================
Progress: 528


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = ZERO

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 529


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = ZERO

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 0(rank:27.)
rewrite IH1 in goal at 0(rank:30.)
=================================================
Progress: 530


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 531


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 22.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 532


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 533


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 534


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (match (tf6 ((Nil))) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 535


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 536


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 537


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:10.)
=================================================
Progress: 538


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- Cond1 in goal at 2(rank:26.)
rewrite <- Cond1 in goal at 0(rank:26.)
rewrite <- Cond1 in goal at 1(rank:26.)
rewrite <- lemma3 in goal at 0(rank:27.)
=================================================
Progress: 539


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 0(rank:28.)
=================================================
Progress: 540


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:13.)
rewrite <- Cond1 in goal at 2(rank:28.)
rewrite <- Cond1 in goal at 0(rank:28.)
rewrite <- Cond1 in goal at 1(rank:28.)
=================================================
Progress: 541


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 13.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:15.)
=================================================
Progress: 542


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 543


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

6 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = ZERO
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Lemma List
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 544


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:8.)
=================================================
Progress: 545


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 546


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 547


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:8.)
=================================================
Progress: 548


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:9.)
rewrite <- IH1 in goal at 0(rank:24.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
=================================================
Progress: 549


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 1(rank:25.)
rewrite <- Case2 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 550


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 1(rank:25.)
rewrite <- Case2 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 551


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 552


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 553


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
asdf
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((false::(false::(false::(Nil))))) = tf4 (SUCC (SUCC (ZERO))) ((false::(false::(false::(Nil)))))
=================================================
Progress: 554


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((false::(false::(Nil)))) = tf4 (SUCC (SUCC (ZERO))) ((false::(false::(Nil))))
Prop: tf4 (ZERO) ((true::(false::(false::(Nil))))) = tf4 (SUCC (SUCC (ZERO))) ((true::(false::(false::(Nil)))))
asdf
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((true::(false::(false::(true::(Nil)))))) = tf4 (SUCC (SUCC (ZERO))) ((true::(false::(false::(true::(Nil))))))
asdf
=================================================
Progress: 555


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 1(rank:25.)
rewrite <- Case2 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 556


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 557


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
Prop: tf4 (ZERO) ((false::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((false::(Nil)))
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((false::(true::(Nil)))) = tf4 (SUCC (SUCC (ZERO))) ((false::(true::(Nil))))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
=================================================
Progress: 558


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((true::(true::(false::(Nil))))) = tf4 (SUCC (ZERO)) ((true::(true::(false::(Nil)))))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((false::(false::(true::(Nil))))) = tf4 (SUCC (ZERO)) ((false::(false::(true::(Nil)))))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 559


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:15.)
=================================================
Progress: 560


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
---------------------------------------
forall (bool_list1:bool list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 561


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
---------------------------------------
forall (bool_list1:bool list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 562


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 563


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:16.)
=================================================
Progress: 564


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 16.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 565


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 566


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:16.)
=================================================
Progress: 567


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 16.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 19
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:17.)
rewrite <- IH1 in goal at 0(rank:32.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:17.)
rewrite <- Case1 in goal at 0(rank:32.)
rewrite <- Case1 in goal at 2(rank:32.)
rewrite <- Cond1 in goal at 0(rank:32.)
rewrite <- Cond1 in goal at 1(rank:32.)
rewrite <- Cond1 in goal at 2(rank:32.)
rewrite <- Cond1 in goal at 3(rank:32.)
rewrite <- Case1 in goal at 3(rank:32.)
rewrite <- Case1 in goal at 1(rank:32.)
rewrite <- Cond2 in goal at 0(rank:32.)
rewrite <- Cond2 in goal at 2(rank:32.)
rewrite <- Cond3 in goal at 0(rank:32.)
rewrite <- Cond3 in goal at 1(rank:32.)
rewrite <- Cond3 in goal at 2(rank:32.)
rewrite <- Cond3 in goal at 3(rank:32.)
rewrite <- Cond2 in goal at 3(rank:32.)
rewrite <- Cond2 in goal at 1(rank:32.)
=================================================
Progress: 568


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 17.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 22
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:18.)
rewrite <- Case1 in goal at 0(rank:33.)
rewrite <- Case1 in goal at 2(rank:33.)
rewrite <- Case2 in goal at 0(rank:33.)
rewrite <- Case2 in goal at 1(rank:33.)
rewrite <- Case2 in goal at 2(rank:33.)
rewrite <- Case2 in goal at 3(rank:33.)
rewrite <- Case1 in goal at 3(rank:33.)
rewrite <- Case1 in goal at 1(rank:33.)
rewrite <- Cond1 in goal at 0(rank:33.)
rewrite <- Cond1 in goal at 2(rank:33.)
rewrite <- Cond2 in goal at 0(rank:33.)
rewrite <- Cond2 in goal at 1(rank:33.)
rewrite <- Cond2 in goal at 2(rank:33.)
rewrite <- Cond2 in goal at 3(rank:33.)
rewrite <- Cond1 in goal at 3(rank:33.)
rewrite <- Cond1 in goal at 1(rank:33.)
rewrite <- IH1 in goal at 0(rank:33.)
rewrite <- Cond3 in goal at 0(rank:33.)
rewrite <- Cond3 in goal at 1(rank:33.)
rewrite <- Cond3 in goal at 2(rank:33.)
rewrite <- Cond3 in goal at 3(rank:33.)
=================================================
Progress: 569


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 17.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 22
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:18.)
rewrite <- Cond3 in goal at 0(rank:33.)
rewrite <- Cond3 in goal at 1(rank:33.)
rewrite <- Cond3 in goal at 2(rank:33.)
rewrite <- Cond3 in goal at 3(rank:33.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:33.)
rewrite <- Case1 in goal at 2(rank:33.)
rewrite <- Case2 in goal at 0(rank:33.)
rewrite <- Case2 in goal at 1(rank:33.)
rewrite <- Case2 in goal at 2(rank:33.)
rewrite <- Case2 in goal at 3(rank:33.)
rewrite <- Case1 in goal at 3(rank:33.)
rewrite <- Case1 in goal at 1(rank:33.)
rewrite <- Cond1 in goal at 0(rank:33.)
rewrite <- Cond1 in goal at 2(rank:33.)
rewrite <- Cond2 in goal at 0(rank:33.)
rewrite <- Cond2 in goal at 1(rank:33.)
rewrite <- Cond2 in goal at 2(rank:33.)
rewrite <- Cond2 in goal at 3(rank:33.)
rewrite <- Cond1 in goal at 3(rank:33.)
rewrite <- Cond1 in goal at 1(rank:33.)
=================================================
Progress: 570


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 18.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 571


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 18.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 572


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
Prop: tf4 (ZERO) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
asdf
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((true::(true::(Nil)))) = tf4 (SUCC (SUCC (ZERO))) ((true::(true::(Nil))))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
asdf
=================================================
Progress: 573


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((true::(false::(true::(Nil))))) = tf4 (SUCC (SUCC (ZERO))) ((true::(false::(true::(Nil)))))
asdf
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 574


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (match (tf6 (nat_list1)) with
| Tuple2 a _ -> a) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 575


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 576


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 577


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 578


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 579


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case bool1(rank:14.)
=================================================
Progress: 580


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> case bool1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:15.)
rewrite <- IH1 in goal at 0(rank:32.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:15.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 581


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:16.)
rewrite <- Cond2 in goal at 0(rank:31.)
rewrite <- Cond2 in goal at 1(rank:31.)
rewrite <- Cond2 in goal at 2(rank:31.)
rewrite <- Cond2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
rewrite <- IH1 in goal at 0(rank:33.)
=================================================
Progress: 582


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:16.)
rewrite <- Cond1 in goal at 0(rank:31.)
rewrite <- Cond1 in goal at 1(rank:31.)
rewrite <- Cond1 in goal at 2(rank:31.)
rewrite <- Cond1 in goal at 3(rank:31.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
=================================================
Progress: 583


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 584


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 585


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil)))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 586


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:24.)
=================================================
Progress: 587


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 588


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:24.)
=================================================
Progress: 589


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 22.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) ((SUCC (ZERO)::(SUCC (ZERO)::(Nil))))) = match (tf6 ((SUCC (ZERO)::(SUCC (ZERO)::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 590


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 591


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 592


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true->lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 593


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true->lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 594


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 595


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 596


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:10.)
=================================================
Progress: 597


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true->lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 598


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true->lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 599


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 600


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 601


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:10.)
=================================================
Progress: 602


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- lemma3 in goal at 0(rank:27.)
=================================================
Progress: 603


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
=================================================
Progress: 604


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 0(rank:28.)
=================================================
Progress: 605


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = ZERO
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO
Lemma List
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 606


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:16.)
=================================================
Progress: 607


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

---------------------------------------
forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 16.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 608


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 609


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (ZERO) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 610


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 611


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 612


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond3 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:16.)
=================================================
Progress: 613


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond3 : lq (ZERO) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 16.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond3 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:17.)
rewrite IH1 in goal at 0(rank:27.)
=================================================
Progress: 614


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond3 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 17.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 615


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:13.)
=================================================
Progress: 616


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 13.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:15.)
=================================================
Progress: 617


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 618


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

6 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = ZERO
Prop: tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = ZERO
Prop: tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = ZERO
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((false::(true::(Nil)))) = tf4 (SUCC (ZERO)) ((false::(true::(Nil))))
Prop: tf4 (ZERO) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Lemma List
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 619


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:8.)
=================================================
Progress: 620


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 621


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 622


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:8.)
=================================================
Progress: 623


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:9.)
rewrite <- IH1 in goal at 0(rank:24.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
=================================================
Progress: 624


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 1(rank:25.)
rewrite <- Case2 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 625


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 1(rank:25.)
rewrite <- Case2 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 626


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 627


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 628


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((false::(true::(Nil)))) = tf4 (SUCC (SUCC (ZERO))) ((false::(true::(Nil))))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
=================================================
Progress: 629


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
asdf
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((false::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((false::(Nil)))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 630


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 631


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 632


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 633


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 634


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 635


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case bool1(rank:14.)
=================================================
Progress: 636


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> case bool1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:15.)
rewrite <- IH1 in goal at 0(rank:32.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:15.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 637


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:16.)
rewrite <- Cond2 in goal at 0(rank:31.)
rewrite <- Cond2 in goal at 1(rank:31.)
rewrite <- Cond2 in goal at 2(rank:31.)
rewrite <- Cond2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
rewrite <- IH1 in goal at 0(rank:33.)
=================================================
Progress: 638


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:16.)
rewrite <- Cond1 in goal at 0(rank:31.)
rewrite <- Cond1 in goal at 1(rank:31.)
rewrite <- Cond1 in goal at 2(rank:31.)
rewrite <- Cond1 in goal at 3(rank:31.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
=================================================
Progress: 639


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 640


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 641


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 1(rank:25.)
rewrite <- Case2 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 642


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 643


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((false::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((false::(Nil)))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
=================================================
Progress: 644


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(false::(Nil)))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(false::(Nil))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
asdf
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 645


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:24.)
=================================================
Progress: 646


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((false::(false::(Nil)))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(false::(Nil))))
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil)))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil)))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 647


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:24.)
=================================================
Progress: 648


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = ZERO

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19.)
=================================================
Progress: 649


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
ZERO = ZERO

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 19.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = ZERO
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->true = true->true = true -> tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond1 in goal at 0(rank:27.)
rewrite IH1 in goal at 0(rank:30.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:27.)
=================================================
Progress: 650


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (nat_list1:nat list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true->lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true->lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 651


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 22.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = ZERO
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 652


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 653


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 654


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (tf6 ((Nil))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((Nil)) ((Nil)))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 655


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (tf6 ((nat1::nat_list2))) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (SUCC (ZERO)) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 656


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 657


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case match (nat1) with
| true -> false
| false -> true(rank:10.)
=================================================
Progress: 658


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (snd2 (tf6 (nat_list2)))) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2))) then tf4 (if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if match (nat1) with
| true -> false
| false -> true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- lemma3 in goal at 0(rank:27.)
=================================================
Progress: 659


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 0(rank:28.)
=================================================
Progress: 660


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 20.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank:13.)
=================================================
Progress: 661


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf1 (nat_list2) (nat_list2)) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 13.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:15.)
=================================================
Progress: 662


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 663


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

6 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = ZERO

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = ZERO
Prop: tf4 (ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = ZERO
Prop: tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = ZERO
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
Prop: tf4 (ZERO) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Lemma List
forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 664


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:15.)
=================================================
Progress: 665


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 15.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
---------------------------------------
forall (bool_list1:bool list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 666


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
---------------------------------------
forall (bool_list1:bool list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 667


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 668


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:16.)
=================================================
Progress: 669


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
---------------------------------------
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 16.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15.)
=================================================
Progress: 670


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 15.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 671


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:16.)
=================================================
Progress: 672


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 16.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 15
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:17.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:17.)
rewrite <- Cond2 in goal at 0(rank:32.)
rewrite <- Cond2 in goal at 1(rank:32.)
rewrite <- Cond2 in goal at 2(rank:32.)
rewrite <- Cond2 in goal at 3(rank:32.)
rewrite <- Case1 in goal at 0(rank:32.)
rewrite <- Case1 in goal at 2(rank:32.)
rewrite <- Cond1 in goal at 0(rank:32.)
rewrite <- Cond1 in goal at 1(rank:32.)
rewrite <- Cond1 in goal at 2(rank:32.)
rewrite <- Cond1 in goal at 3(rank:32.)
rewrite <- Case1 in goal at 3(rank:32.)
rewrite <- Case1 in goal at 1(rank:32.)
rewrite <- IH1 in goal at 0(rank:32.)
=================================================
Progress: 673


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 17.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 18
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:18.)
rewrite <- Case1 in goal at 0(rank:33.)
rewrite <- Case1 in goal at 2(rank:33.)
rewrite <- Case2 in goal at 0(rank:33.)
rewrite <- Case2 in goal at 1(rank:33.)
rewrite <- Case2 in goal at 2(rank:33.)
rewrite <- Case2 in goal at 3(rank:33.)
rewrite <- Case1 in goal at 3(rank:33.)
rewrite <- Case1 in goal at 1(rank:33.)
rewrite <- Cond1 in goal at 0(rank:33.)
rewrite <- Cond1 in goal at 2(rank:33.)
rewrite <- Cond2 in goal at 0(rank:33.)
rewrite <- Cond2 in goal at 1(rank:33.)
rewrite <- Cond2 in goal at 2(rank:33.)
rewrite <- Cond2 in goal at 3(rank:33.)
rewrite <- Cond1 in goal at 3(rank:33.)
rewrite <- Cond1 in goal at 1(rank:33.)
rewrite <- IH1 in goal at 0(rank:33.)
=================================================
Progress: 674


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 17.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 18
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:18.)
rewrite <- Case1 in goal at 0(rank:33.)
rewrite <- Case1 in goal at 2(rank:33.)
rewrite <- Case2 in goal at 0(rank:33.)
rewrite <- Case2 in goal at 1(rank:33.)
rewrite <- Case2 in goal at 2(rank:33.)
rewrite <- Case2 in goal at 3(rank:33.)
rewrite <- Case1 in goal at 3(rank:33.)
rewrite <- Case1 in goal at 1(rank:33.)
rewrite <- Cond1 in goal at 0(rank:33.)
rewrite <- Cond1 in goal at 2(rank:33.)
rewrite <- Cond2 in goal at 0(rank:33.)
rewrite <- Cond2 in goal at 1(rank:33.)
rewrite <- Cond2 in goal at 2(rank:33.)
rewrite <- Cond2 in goal at 3(rank:33.)
rewrite <- Cond1 in goal at 3(rank:33.)
rewrite <- Cond1 in goal at 1(rank:33.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 675


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 18.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 676


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 18.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 677


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((true::(true::(true::(Nil))))) = tf4 (SUCC (SUCC (ZERO))) ((true::(true::(true::(Nil)))))
Prop: tf4 (ZERO) ((false::(false::(Nil)))) = tf4 (SUCC (SUCC (ZERO))) ((false::(false::(Nil))))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
asdf
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
asdf
=================================================
Progress: 678


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
asdf
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((false::(Nil)))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 679


1st goal of : forall (bool_list1:bool list) (nat_list1:nat list), lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
nat_list1 : nat list
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
Cond3 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 680


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 681


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 682


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 683


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 684


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case bool1(rank:14.)
=================================================
Progress: 685


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> case bool1(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 7
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:15.)
rewrite <- IH1 in goal at 0(rank:32.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:15.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 686


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:16.)
rewrite <- Cond2 in goal at 0(rank:31.)
rewrite <- Cond2 in goal at 1(rank:31.)
rewrite <- Cond2 in goal at 2(rank:31.)
rewrite <- Cond2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
rewrite <- IH1 in goal at 0(rank:33.)
=================================================
Progress: 687


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 15.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:16.)
rewrite <- Cond1 in goal at 0(rank:31.)
rewrite <- Cond1 in goal at 1(rank:31.)
rewrite <- Cond1 in goal at 2(rank:31.)
rewrite <- Cond1 in goal at 3(rank:31.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 0(rank:31.)
rewrite <- Case1 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 1(rank:31.)
rewrite <- Case2 in goal at 2(rank:31.)
rewrite <- Case2 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 3(rank:31.)
rewrite <- Case1 in goal at 1(rank:31.)
=================================================
Progress: 688


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 689


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:18.)
=================================================
Progress: 690


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
=================================================
Progress: 691


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 18.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((true::(false::(false::(Nil))))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(false::(false::(Nil)))))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(false::(Nil)))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(false::(Nil))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil))
asdf
=================================================
Progress: 692


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
Prop: tf4 (ZERO) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Prop: tf4 (ZERO) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Prop: tf4 (ZERO) ((false::(true::(Nil)))) = tf4 (SUCC (ZERO)) ((false::(true::(Nil))))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case match (nat1) with
| true -> false
| false -> true
case lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 693


1st goal of : forall (nat_list1:nat list), lq (match (tf6 (nat_list1)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list1) (nat_list1))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : match (nat1) with
| true -> false
| false -> true = true
Case2 : lq (ZERO) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:8.)
=================================================
Progress: 694


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 695


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 696


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:8.)
=================================================
Progress: 697


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:9.)
rewrite <- IH1 in goal at 0(rank:24.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
=================================================
Progress: 698


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 1(rank:25.)
rewrite <- Case2 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 699


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 1(rank:25.)
rewrite <- Case2 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 700


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 701


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 702


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((false::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((false::(Nil)))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
previous tactics
simpl in goal
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((false::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
=================================================
Progress: 703


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((true::(true::(false::(false::(Nil)))))) = tf4 (SUCC (SUCC (ZERO))) ((true::(true::(false::(false::(Nil))))))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
asdf
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
=================================================
Progress: 704


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 1(rank:25.)
rewrite <- Case2 in goal at 2(rank:25.)
rewrite <- Case2 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 3(rank:25.)
rewrite <- Case1 in goal at 1(rank:25.)
=================================================
Progress: 705


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 706


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (bool_list1:bool list), tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((true::(true::(Nil)))) = tf4 (SUCC (SUCC (ZERO))) ((true::(true::(Nil))))
asdf
previous tactics
simpl in goal
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((false::(Nil)))
=================================================
Progress: 707


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 22.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = false
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)) = ZERO

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = ZERO
Prop: tf4 (SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = ZERO
previous tactics
simpl in goal
intro Cond1
case match (nat1) with
| true -> false
| false -> true
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)
rewrite IH1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
discriminate
rewrite <- lemma3 in goal at 0
reflexivity
rewrite Case2 in goal at 0
reflexivity
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) ((SUCC (SUCC (SUCC (ZERO)))::(Nil)))) = match (tf6 ((SUCC (SUCC (SUCC (ZERO)))::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 708


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 22.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:7.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 1(rank:22.)
rewrite <- Case1 in goal at 2(rank:22.)
rewrite <- Case1 in goal at 3(rank:22.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:7.)
=================================================
Progress: 709


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:8.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
=================================================
Progress: 710


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 711


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 712


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 713


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (ZERO) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (ZERO) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
case bool1
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(false::(true::(false::(Nil)))))) = tf4 (SUCC (ZERO)) ((false::(false::(true::(false::(Nil))))))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 714


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 715


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 716


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite IH1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
case bool1
rewrite IH1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
=================================================
Progress: 717


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 718


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 719


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 720


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 721


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 722


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 723


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 724


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 725


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 726


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 727


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite IH1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
=================================================
Progress: 728


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
=================================================
Progress: 729


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite IH1 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 3(rank:29.)
=================================================
Progress: 730


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:14.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
=================================================
Progress: 731


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 732


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 13
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:14.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 733


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 734


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 735


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
asdf
=================================================
Progress: 736


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 737


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 738


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((false::(true::(true::(Nil))))) = tf4 (SUCC (ZERO)) ((false::(true::(true::(Nil)))))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 739


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 740


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 741


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
asdf
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 742


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 743


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 22.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:7.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:7.)
=================================================
Progress: 744


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:8.)
rewrite Case1 in goal at 0(rank:15.)
rewrite Case1 in goal at 1(rank:23.)
rewrite Case1 in goal at 3(rank:15.)
rewrite Case1 in goal at 2(rank:23.)
case if bool1 then false else bool1(rank:8.)
=================================================
Progress: 745


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:8.)
rewrite IH1 in goal at 0(rank:15.)
case if bool1 then false else bool1(rank:8.)
rewrite Case1 in goal at 0(rank:15.)
rewrite Case1 in goal at 1(rank:23.)
rewrite Case1 in goal at 2(rank:23.)
rewrite Case1 in goal at 3(rank:23.)
=================================================
Progress: 746


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if bool1 then false else bool1(rank:9.)
=================================================
Progress: 747


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else bool1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 11
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case3 in goal at 2(rank:24.)
=================================================
Progress: 748


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if bool1 then false else bool1(rank:9.)
=================================================
Progress: 749


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else bool1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 12
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:16.)
=================================================
Progress: 750


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else bool1(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 751


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 752


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case if bool1 then false else bool1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (ZERO) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case if bool1 then false else bool1
reflexivity
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 753


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 754


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 755


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 756


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
ZERO = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 757


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
ZERO = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
ZERO = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case if bool1 then false else bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
reflexivity
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: ZERO = tf4 (SUCC (ZERO)) ((Nil))
Prop: ZERO = tf4 (SUCC (ZERO)) ((Nil))
Prop: ZERO = tf4 (SUCC (ZERO)) ((true::(true::(Nil))))
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case if bool1 then false else bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = tf4 (ZERO) ((false::(Nil)))
Prop: ZERO = tf4 (ZERO) ((Nil))
Prop: ZERO = tf4 (ZERO) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
ZERO = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
ZERO = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 758


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
ZERO = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 759


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
ZERO = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 760


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else bool1(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 761


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 762


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case if bool1 then false else bool1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(true::(Nil)))) = tf4 (ZERO) ((true::(true::(Nil))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
asdf
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case if bool1 then false else bool1
reflexivity
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
asdf
=================================================
Progress: 763


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 764


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 765


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case if bool1 then false else bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
reflexivity
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = ZERO
Prop: tf4 (SUCC (ZERO)) ((Nil)) = ZERO
Prop: tf4 (SUCC (ZERO)) ((Nil)) = ZERO
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case if bool1 then false else bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
reflexivity
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((true::(true::(false::(false::(Nil)))))) = ZERO
Prop: tf4 (ZERO) ((Nil)) = ZERO
Prop: tf4 (ZERO) ((Nil)) = ZERO
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 766


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 767


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 768


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 769


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 770


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 771


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 772


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 773


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 774


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 775


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 776


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 777


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 778


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = false -> ZERO = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 779


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = false -> ZERO = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = false -> ZERO = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 780


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = false -> ZERO = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 781


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 782


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: ZERO = if lq (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((false::(false::(Nil))))) then tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((false::(false::(Nil)))) else if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: ZERO = if lq (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((false::(Nil)))) then tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((false::(Nil))) else if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: ZERO = if lq (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Lemma List
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 783


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:13.)
=================================================
Progress: 784


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = false -> ZERO = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 785


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = false -> ZERO = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = false -> ZERO = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 786


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = false -> ZERO = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 787


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 788


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: ZERO = if lq (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((true::(Nil)))) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((true::(Nil))) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = if lq (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((true::(Nil)))) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((true::(Nil))) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = if lq (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Lemma List
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 789


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> ZERO = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:13.)
=================================================
Progress: 790


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = false -> tf4 (ZERO) ((Nil)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 791


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = false -> tf4 (ZERO) ((Nil)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = false -> tf4 (ZERO) ((bool1::bool_list2)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 792


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = false -> tf4 (ZERO) ((bool1::bool_list2)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 793


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 794


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if lq (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Prop: if lq (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Prop: if lq (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Lemma List
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 795


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO(rank : 0.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:13.)
=================================================
Progress: 796


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = false -> tf4 (SUCC (ZERO)) ((Nil)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 797


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = false -> tf4 (SUCC (ZERO)) ((Nil)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = false -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 798


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = false -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 799


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 800


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if lq (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: if lq (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: if lq (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Lemma List
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 801


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO(rank : 0.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:13.)
=================================================
Progress: 802


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite IH1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
=================================================
Progress: 803


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:13.)
=================================================
Progress: 804


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 13.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 805


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 13.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 806


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 13.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 807


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 13.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 808


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite IH1 in goal at 0(rank:31.)
=================================================
Progress: 809


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 14
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:14.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
=================================================
Progress: 810


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 811


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 13
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:14.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 812


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 813


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 814


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 815


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 816


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 817


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 818


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(true::(Nil)))) = tf4 (SUCC (ZERO)) ((true::(true::(Nil))))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
asdf
=================================================
Progress: 819


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
=================================================
Progress: 820


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 821


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 822


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 823


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 824


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 825


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 826


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 827


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 828


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: ZERO = if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: ZERO = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: ZERO = if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Lemma List
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 829


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:15.)
=================================================
Progress: 830


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: ZERO = if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Lemma List
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 831


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:15.)
=================================================
Progress: 832


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Prop: if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Prop: if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Lemma List
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
End of Lemma List


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 833


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

---------------------------------------
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:15.)
=================================================
Progress: 834


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Lemma List
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
End of Lemma List


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 835


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

---------------------------------------
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:15.)
=================================================
Progress: 836


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 837


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
=================================================
Progress: 838


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 3(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:8.)
rewrite <- Case2 in goal at 0(rank:23.)
case if bool1 then false else bool1(rank:8.)
=================================================
Progress: 839


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if bool1 then false else bool1(rank:9.)
=================================================
Progress: 840


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else bool1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 12
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:9.)
rewrite Case1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:16.)
=================================================
Progress: 841


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else bool1(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 842


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 843


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite Case1 in goal at 3
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case if bool1 then false else bool1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (ZERO) ((false::(Nil)))
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite Case1 in goal at 3
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case if bool1 then false else bool1
reflexivity
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
=================================================
Progress: 844


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 845


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 846


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite Case1 in goal at 3
case if bool1 then false else bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
reflexivity
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) ((Nil))
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite Case1 in goal at 3
case if bool1 then false else bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = tf4 (ZERO) ((Nil))
Prop: SUCC (SUCC (ZERO)) = tf4 (ZERO) ((Nil))
Prop: SUCC (SUCC (ZERO)) = tf4 (ZERO) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 847


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 848


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false
---------------------------------------
SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 849


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 850


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 851


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 852


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 853


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:13.)
=================================================
Progress: 854


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 855


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 856


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 857


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 858


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:13.)
=================================================
Progress: 859


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = if lq (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: tf4 (ZERO) ((Nil)) = if lq (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: tf4 (ZERO) ((Nil)) = if lq (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = if lq (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if lq (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if lq (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Lemma List
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 860


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:13.)
=================================================
Progress: 861


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:13.)
=================================================
Progress: 862


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((false::(Nil))) = if lq (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((false::(Nil)))) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((false::(Nil))) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = if lq (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = if lq (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = if lq (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if lq (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if lq (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((true::(Nil)))) then tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((true::(Nil))) else if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Lemma List
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 863


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:13.)
=================================================
Progress: 864


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = false -> SUCC (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:13.)
=================================================
Progress: 865


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 13.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 866


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 13.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 867


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 13.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 868


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 13.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 869


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 870


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) ((Nil)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 871


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 872


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) ((Nil)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 873


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 874


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) ((Nil)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 875


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 876


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) ((Nil)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 877


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 878


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 879


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 880


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 881


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Lemma List
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 882


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:15.)
=================================================
Progress: 883


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: ZERO = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: ZERO = if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: ZERO = if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Lemma List
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 884


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (ZERO) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:15.)
=================================================
Progress: 885


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Lemma List
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 886


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:15.)
=================================================
Progress: 887


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: ZERO = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Lemma List
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 888


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> tf4 (SUCC (ZERO)) (bool_list1) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:15.)
=================================================
Progress: 889


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 890


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
rewrite IH1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
=================================================
Progress: 891


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:8.)
rewrite Case1 in goal at 3(rank:23.)
case if bool1 then false else bool1(rank:8.)
rewrite Case1 in goal at 1(rank:23.)
rewrite Case1 in goal at 2(rank:23.)
=================================================
Progress: 892


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if bool1 then false else bool1(rank:9.)
=================================================
Progress: 893


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else bool1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:9.)
rewrite <- IH1 in goal at 1(rank:16.)
rewrite <- IH1 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
=================================================
Progress: 894


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else bool1(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 895


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 896


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
case if bool1 then false else bool1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
case if bool1 then false else bool1
reflexivity
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
=================================================
Progress: 897


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 898


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 899


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
case if bool1 then false else bool1
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
reflexivity
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = ZERO
Prop: tf4 (SUCC (ZERO)) ((Nil)) = ZERO
Prop: tf4 (SUCC (ZERO)) ((Nil)) = ZERO
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
case if bool1 then false else bool1
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
reflexivity
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = ZERO
Prop: tf4 (ZERO) ((false::(false::(true::(Nil))))) = ZERO
Prop: tf4 (ZERO) ((Nil)) = ZERO
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 900


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 901


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 902


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = false -> tf4 (ZERO) ((Nil)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 903


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = false -> tf4 (ZERO) ((Nil)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = false -> tf4 (ZERO) ((bool1::bool_list2)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 904


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = false -> tf4 (ZERO) ((bool1::bool_list2)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 905


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 906


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if lq (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Prop: if lq (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Prop: if lq (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil))) then tf4 (if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
asdf
=================================================
Progress: 907


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = false -> tf4 (SUCC (ZERO)) ((Nil)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 908


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = false -> tf4 (SUCC (ZERO)) ((Nil)) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = false -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 909


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = false -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 910


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 911


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = ZERO
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = ZERO
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = false
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if lq (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: if lq (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((true::(Nil)))) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((true::(Nil))) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: if lq (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
asdf
=================================================
Progress: 912


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 913


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 914


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

---------------------------------------
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 915


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

---------------------------------------
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 916


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 917


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 918


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 919


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro bool1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 920


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
=================================================
Progress: 921


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 922


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite Case1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite Case1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(false::(Nil)))) = tf4 (SUCC (ZERO)) ((false::(false::(Nil))))
=================================================
Progress: 923


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 924


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 925


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 926


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 927


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 928


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 929


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 930


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 931


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: ZERO = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: ZERO = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Lemma List
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 932


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro bool1(rank:17.)
=================================================
Progress: 933


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Lemma List
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 934


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro bool1(rank:17.)
=================================================
Progress: 935


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Prop: if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Prop: if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Lemma List
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
End of Lemma List


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 936


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

---------------------------------------
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro bool1(rank:17.)
=================================================
Progress: 937


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Lemma List
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
End of Lemma List


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 938


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

---------------------------------------
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro bool1(rank:17.)
=================================================
Progress: 939


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Lemma List
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 940


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro bool1(rank:17.)
=================================================
Progress: 941


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: ZERO = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: ZERO = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
=================================================
Progress: 942


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Lemma List
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 943


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro bool1(rank:17.)
=================================================
Progress: 944


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
=================================================
Progress: 945


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
=================================================
Progress: 946


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 947


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
=================================================
Progress: 948


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 949


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 950


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case if bool1 then false else bool1
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
reflexivity
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = ZERO
Prop: tf4 (SUCC (ZERO)) ((Nil)) = ZERO
Prop: tf4 (SUCC (ZERO)) ((Nil)) = ZERO
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case if bool1 then false else bool1
rewrite IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
reflexivity
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = ZERO
Prop: tf4 (ZERO) ((true::(false::(true::(Nil))))) = ZERO
Prop: tf4 (ZERO) ((Nil)) = ZERO
asdf
=================================================
Progress: 951


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
=================================================
Progress: 952


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 953


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(false::(Nil)))) = tf4 (SUCC (ZERO)) ((true::(false::(Nil))))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
asdf
=================================================
Progress: 954


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (SUCC (SUCC (ZERO)))) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 955


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 956


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 3(rank:24.)
rewrite <- Case2 in goal at 3(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
=================================================
Progress: 957


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
=================================================
Progress: 958


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 959


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 16.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
=================================================
Progress: 960


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 961


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 3(rank:24.)
rewrite <- Case2 in goal at 3(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
=================================================
Progress: 962


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
>>> intro bool1(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 963


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
>>> intro bool1(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 964


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

---------------------------------------
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
>>> intro bool1(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 965


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

---------------------------------------
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
>>> intro bool1(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 966


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
>>> intro bool1(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 967


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
>>> intro bool1(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:17.)
=================================================
Progress: 968


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case if bool1 then false else bool1
rewrite <- IH1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
asdf
=================================================
Progress: 969


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case if bool1 then false else bool1
rewrite <- IH1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 970


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 971


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 972


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 973


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (ZERO) ((bool1::bool_list2)) = tf4 (SUCC (ZERO)) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 974


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 975


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 976


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:13.)
rewrite <- IH1 in goal at 0(rank:30.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
=================================================
Progress: 977


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- IH1 in goal at 0(rank:31.)
=================================================
Progress: 978


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 14
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:14.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
=================================================
Progress: 979


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:16.)
=================================================
Progress: 980


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true->true = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:16.)
=================================================
Progress: 981


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((true::(false::(Nil)))) = tf4 (SUCC (SUCC (ZERO))) ((true::(false::(Nil))))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 982


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (SUCC (SUCC (ZERO))) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 983


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (ZERO) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (SUCC (ZERO))) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (ZERO) ((false::(false::(Nil)))) = tf4 (SUCC (SUCC (ZERO))) ((false::(false::(Nil))))
Prop: tf4 (ZERO) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
asdf
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = tf4 (SUCC (SUCC (ZERO))) ((true::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (SUCC (SUCC (ZERO))) ((Nil))
asdf
=================================================
Progress: 984


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case if bool1 then false else bool1
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 985


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 986


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 987


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 988


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 989


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 990


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 991


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite IH1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
=================================================
Progress: 992


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite IH1 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 3(rank:29.)
=================================================
Progress: 993


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 14
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:14.)
rewrite <- Case2 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
=================================================
Progress: 994


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 995


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 996


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 997


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 998


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 999


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1000


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 1001


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->true = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 1002


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case if bool1 then false else bool1
rewrite <- IH1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((true::(Nil))) = tf4 (ZERO) ((true::(Nil)))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
asdf
=================================================
Progress: 1003


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite Case1 in goal at 3
case if bool1 then false else bool1
rewrite <- IH1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
=================================================
Progress: 1004


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite Case1 in goal at 3
case if bool1 then false else bool1
rewrite <- IH1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (ZERO) ((false::(Nil))) = tf4 (SUCC (ZERO)) ((false::(Nil)))
=================================================
Progress: 1005


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
case if bool1 then false else bool1
rewrite <- IH1 in goal at 1
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1006


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 1007


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 1008


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((Nil))) = true -> tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 1009


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (ZERO) ((bool1::bool_list2))) = true -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = tf4 (ZERO) ((bool1::bool_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1010


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 1011


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:12.)
=================================================
Progress: 1012


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 3(rank:28.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:13.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite IH1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
=================================================
Progress: 1013


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:14.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite IH1 in goal at 0(rank:31.)
rewrite <- Case2 in goal at 3(rank:29.)
=================================================
Progress: 1014


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 13.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:14.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 3(rank:29.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 1(rank:29.)
rewrite <- Case2 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 2(rank:29.)
rewrite <- Case1 in goal at 0(rank:29.)
rewrite <- Case2 in goal at 3(rank:29.)
=================================================
Progress: 1015


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 1016


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 14.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:16.)
=================================================
Progress: 1017


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1018


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 1019


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 1020


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
previous tactics
simpl in goal
intro Cond1
intro Cond2
case bool1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(false::(Nil)))) = tf4 (SUCC (ZERO)) ((false::(false::(Nil))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1021


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (SUCC (ZERO)) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 1022


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list1)) = true -> tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : true = true->lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true -> tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

5 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = tf4 (ZERO) (bool_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:22.)
=================================================
Progress: 1023


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
case if bool1 then false else bool1
rewrite <- IH1 in goal at 1
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (ZERO)) ((Nil)) = tf4 (ZERO) ((Nil))
=================================================
Progress: 1024


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1025


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1026


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1027


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1028


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1029


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond1(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:17.)
=================================================
Progress: 1030


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: ZERO = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: ZERO = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
=================================================
Progress: 1031


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
ZERO = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: ZERO = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
=================================================
Progress: 1032


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Prop: if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
Prop: if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = ZERO
=================================================
Progress: 1033


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
bool1 : bool
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
Prop: if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = ZERO
=================================================
Progress: 1034


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if if false then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
=================================================
Progress: 1035


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
>>> intro Cond2(rank : 17.)


1st goal of : forall (bool1:bool), lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true->lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false -> SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
bool1 : bool
Cond1 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = false
---------------------------------------
SUCC (SUCC (ZERO)) = if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
Prop: SUCC (SUCC (ZERO)) = if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))
=================================================
Progress: 1036


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 22.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:7.)
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:7.)
=================================================
Progress: 1037


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 11
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:8.)
rewrite Case1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
=================================================
Progress: 1038


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 7.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 12
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:8.)
rewrite Case1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 2(rank:15.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- Case2 in goal at 1(rank:15.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite IH1 in goal at 0(rank:15.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
case if bool1 then false else true(rank:8.)
=================================================
Progress: 1039


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case if bool1 then false else true(rank:9.)
rewrite Case1 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
=================================================
Progress: 1040


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case if bool1 then false else true(rank:9.)
rewrite Case1 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
=================================================
Progress: 1041


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else true(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 11
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case2 in goal at 3(rank:24.)
=================================================
Progress: 1042


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else true(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : if bool1 then false else true = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 1043


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else true(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if bool1 then false else true = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 1044


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 1045


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:8.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
=================================================
Progress: 1046


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = tf4 (SUCC (ZERO)) (bool_list2)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 1047


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case3 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(false::(true::(Nil))))) = tf4 (ZERO) ((false::(false::(true::(Nil)))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (ZERO) ((true::(Nil)))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
asdf
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
rewrite Case1 in goal at 0
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
=================================================
Progress: 1048


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:15.)
rewrite <- Case2 in goal at 1(rank:15.)
rewrite <- Case2 in goal at 2(rank:15.)
rewrite <- Case2 in goal at 3(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
=================================================
Progress: 1049


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:8.)
rewrite <- Case1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 2(rank:15.)
rewrite <- Case2 in goal at 1(rank:15.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
case if bool1 then false else true(rank:8.)
=================================================
Progress: 1050


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case if bool1 then false else true(rank:9.)
rewrite Case1 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
=================================================
Progress: 1051


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else true(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 12
case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank:9.)
rewrite <- IH1 in goal at 1(rank:16.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 3(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 2(rank:24.)
=================================================
Progress: 1052


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else true(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
Case4 : if bool1 then false else true = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 1053


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
Case4 : lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 1054


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:8.)
case if bool1 then false else bool1(rank:8.)
=================================================
Progress: 1055


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case if bool1 then false else bool1(rank:9.)
=================================================
Progress: 1056


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else bool1(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 12
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:16.)
=================================================
Progress: 1057


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else bool1 then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (if if bool1 then false else bool1 then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else bool1(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1058


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 1059


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if bool1 then false else bool1 = false
---------------------------------------
tf4 (SUCC (SUCC (ZERO))) (bool_list2) = tf4 (ZERO) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case if bool1 then false else bool1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(false::(true::(false::(true::(true::(Nil)))))))) = tf4 (ZERO) ((false::(false::(true::(false::(true::(true::(Nil))))))))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (ZERO) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((false::(Nil))) = tf4 (ZERO) ((false::(Nil)))
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- Case1 in goal at 0
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
case if bool1 then false else bool1
reflexivity
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((Nil)) = tf4 (SUCC (ZERO)) ((Nil))
Prop: tf4 (SUCC (SUCC (ZERO))) ((true::(Nil))) = tf4 (SUCC (ZERO)) ((true::(Nil)))
asdf
=================================================
Progress: 1060


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1061


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1062


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else bool1 = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- Case1 in goal at 0
case if bool1 then false else bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
reflexivity
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = ZERO
Prop: tf4 (SUCC (ZERO)) ((Nil)) = ZERO
Prop: tf4 (SUCC (ZERO)) ((true::(true::(Nil)))) = ZERO
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- Case1 in goal at 0
case if bool1 then false else bool1
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
reflexivity
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = ZERO
Prop: tf4 (ZERO) ((Nil)) = ZERO
Prop: tf4 (ZERO) ((true::(Nil))) = ZERO
=================================================
Progress: 1063


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:8.)
rewrite <- Case2 in goal at 1(rank:15.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
case if bool1 then false else true(rank:8.)
=================================================
Progress: 1064


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 12
rewrite Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
=================================================
Progress: 1065


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else true(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 11
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case2 in goal at 3(rank:24.)
=================================================
Progress: 1066


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1067


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (ZERO) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 1068


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- Case1 in goal at 2
case if bool1 then false else true
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
reflexivity
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (ZERO)
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (ZERO)
Prop: tf4 (SUCC (ZERO)) ((Nil)) = SUCC (ZERO)
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite <- Case1 in goal at 2
case if bool1 then false else true
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))
reflexivity
validate generalize_common_subterm_goal
Prop: tf4 (ZERO) ((Nil)) = SUCC (ZERO)
Prop: tf4 (ZERO) ((true::(Nil))) = SUCC (ZERO)
Prop: tf4 (ZERO) ((false::(Nil))) = SUCC (ZERO)
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1069


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (ZERO) (bool_list2) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 1070


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else true = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false
---------------------------------------
tf4 (SUCC (ZERO)) (bool_list2) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:12.)
=================================================
Progress: 1071


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = false -> tf4 (ZERO) ((Nil)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 1072


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = false -> tf4 (ZERO) ((Nil)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = false -> tf4 (ZERO) ((bool1::bool_list2)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 1073


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = false -> tf4 (ZERO) ((bool1::bool_list2)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1074


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 1075


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (ZERO) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (ZERO) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (ZERO) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:29.)
rewrite <- IH1 in goal at 1(rank:29.)
rewrite <- IH1 in goal at 2(rank:29.)
rewrite <- IH1 in goal at 3(rank:29.)
=================================================
Progress: 1076


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 12.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = false -> tf4 (SUCC (ZERO)) ((Nil)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:11.)
=================================================
Progress: 1077


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) = false -> tf4 (SUCC (ZERO)) ((Nil)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = false -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 1078


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) = false -> tf4 (SUCC (ZERO)) ((bool1::bool_list2)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1079


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 1080


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if lq (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
Prop: if lq (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
Prop: if lq (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((true::(Nil)))) then tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((true::(Nil))) else if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
Lemma List
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
End of Lemma List


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1081


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) = false -> tf4 (SUCC (ZERO)) (bool_list1) = SUCC (ZERO)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true->lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = false -> tf4 (SUCC (ZERO)) (bool_list2) = SUCC (ZERO)
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)(rank : 0.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro bool1(rank:13.)
=================================================
Progress: 1082


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

3 conjecture(s) more...
>>> intro bool1(rank : 13.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:14.)
=================================================
Progress: 1083


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
bool1 : bool
---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

3 conjecture(s) more...
>>> induction bool_list1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1084


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil))) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1085


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 1086


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
Prop: if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
Prop: if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
Lemma List
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
End of Lemma List


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 1087


1st goal of : forall (bool1:bool) (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)
bool1 : bool
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
Cond1 : lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Cond2 : lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false
---------------------------------------
if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)(rank : 0.)


1st goal of : forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

---------------------------------------
forall (bool1:bool), lq (SUCC (SUCC (ZERO))) (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true->lq (SUCC (ZERO)) (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) = false -> if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO)) = SUCC (ZERO)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro bool1(rank:15.)
=================================================
Progress: 1088


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:8.)
rewrite <- Case1 in goal at 3(rank:23.)
case if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
=================================================
Progress: 1089


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite Case1 in goal at 0(rank:16.)
rewrite Case2 in goal at 0(rank:16.)
=================================================
Progress: 1090


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 15
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case3 in goal at 3(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 3(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 1(rank:24.)
rewrite <- Case3 in goal at 2(rank:24.)
=================================================
Progress: 1091


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 1092


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if bool1 then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 1093


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (ZERO) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- Case2 in goal at 1(rank:15.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 2(rank:15.)
rewrite <- Case2 in goal at 3(rank:23.)
=================================================
Progress: 1094


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:8.)
case if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true(rank:8.)
=================================================
Progress: 1095


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (if if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true(rank:9.)
rewrite Case2 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case3 in goal at 0(rank:24.)
=================================================
Progress: 1096


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> case if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true(rank : 8.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 11
case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case2 in goal at 3(rank:24.)
=================================================
Progress: 1097


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (if if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

3 goal(s) more...

1 conjecture(s) more...
>>> case if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
Case4 : if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 1098


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true = true
---------------------------------------
tf4 (ZERO) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2))(rank : 9.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
Case3 : if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then false else true = true
Case4 : lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) = true
---------------------------------------
tf4 (ZERO) (bool_list2) = tf4 (SUCC (ZERO)) (bool_list2)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
=================================================
Progress: 1099


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 15.)


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite Case1 in goal at 0
rewrite <- Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((false::(Nil))) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((false::(Nil)))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((false::(Nil))) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((false::(Nil))) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((false::(Nil)))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((false::(Nil))) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
previous tactics
simpl in goal
case bool1
rewrite <- Case1 in goal at 1
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))
validate generalize_common_subterm_goal
Prop: tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((true::(Nil))) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((true::(Nil)))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((true::(Nil))) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: tf4 (if if false then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Prop: tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) ((Nil)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Lemma List
forall (bool1:bool) (bool_list1:bool list), bool1 = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1100


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool1:bool) (bool_list1:bool list), bool1 = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool1:bool) (bool_list1:bool list), bool1 = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool1:bool) (bool_list1:bool list), bool1 = true->lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro bool1(rank:11.)
=================================================
Progress: 1101


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1102


1st goal of : forall (bool_list1:bool list), tf4 (SUCC (ZERO)) (bool_list1) = tf4 (ZERO) (bool_list1)
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : tf4 (SUCC (ZERO)) (bool_list2) = tf4 (ZERO) (bool_list2)
Inductive1 : bool_list1 = (true::bool_list2)
Case1 : bool1 = true
Case2 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true
---------------------------------------
tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1103


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:8.)
=================================================
Progress: 1104


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction bool_list1(rank:8.)
=================================================
Progress: 1105


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 8.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 1106


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((bool1::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1107


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((bool1::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((bool1::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1108


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((bool1::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((bool1::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:8.)
=================================================
Progress: 1109


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

---------------------------------------
forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction bool_list1(rank : 8.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 1110


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
Base1 : bool_list1 = (Nil)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((Nil))) = true -> tf4 (SUCC (SUCC (ZERO))) ((Nil)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((Nil))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((Nil)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((bool1::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1111


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2))) = true -> tf4 (SUCC (SUCC (ZERO))) ((bool1::bool_list2)) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) ((bool1::bool_list2))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((bool1::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((bool1::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1112


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (bool1::bool_list2)
---------------------------------------
lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true -> if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((bool1::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((bool1::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case bool1(rank:8.)
=================================================
Progress: 1113


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((bool1::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 8.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((true::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2))(rank:9.)
rewrite <- Case1 in goal at 3(rank:24.)
case lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite IH1 in goal at 0(rank:25.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
=================================================
Progress: 1114


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (bool1::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
---------------------------------------
if lq (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (if lq (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2)) then tf4 (if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if bool1 then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((bool1::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> case bool1(rank : 8.)


1st goal of : forall (bool_list1:bool list), lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) = true -> tf4 (if if true then false else lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list1)) then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list1) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list1)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list1) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
bool_list1 : bool list
bool1 : bool
bool_list2 : bool list
IH1 : lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) = true -> tf4 (SUCC (SUCC (ZERO))) (bool_list2) = if lq (SUCC (ZERO)) (tf4 (SUCC (ZERO)) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))
Inductive1 : bool_list1 = (true::bool_list2)
Cond1 : lq (SUCC (SUCC (ZERO))) (if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) = true
Case1 : bool1 = true
---------------------------------------
if lq (SUCC (SUCC (SUCC (ZERO)))) (tf4 (SUCC (SUCC (SUCC (ZERO)))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)) = if lq (SUCC (ZERO)) (if lq (SUCC (SUCC (ZERO))) (tf4 (SUCC (SUCC (ZERO))) (bool_list2)) then tf4 (if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) (bool_list2) else if if true then false else true then ZERO else plus (SUCC (ZERO)) (SUCC (ZERO))) then tf4 (if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))) ((true::bool_list2)) else if if true then false else true then ZERO else plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
