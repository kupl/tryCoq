Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:nat list), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), all (map (nat_list1)) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), all (map (nat_list1)) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
all (map ((Nil))) = mainNew ((Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
all (map ((Nil))) = mainNew ((Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
all (map ((nat1::nat_list2))) = mainNew ((nat1::nat_list2))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
all (map ((nat1::nat_list2))) = mainNew ((nat1::nat_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = if mainNew (nat_list2) then lq (nat1) (SUCC (ZERO)) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case geq (ZERO) (nat1)(rank:4.)
case mainNew (nat_list2)(rank:4.)
rewrite <- IH1 in goal at 0(rank:11.)
rewrite IH1 in goal at 0(rank:19.)
=================================================
Progress: 6


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = if mainNew (nat_list2) then lq (nat1) (SUCC (ZERO)) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case geq (ZERO) (nat1)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = if mainNew (nat_list2) then lq (nat1) (SUCC (ZERO)) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case mainNew (nat_list2)(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 7


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = if mainNew (nat_list2) then lq (nat1) (SUCC (ZERO)) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nat_list2)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case geq (ZERO) (nat1)(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
=================================================
Progress: 8


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = if mainNew (nat_list2) then lq (nat1) (SUCC (ZERO)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nat_list2)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
Case2 : mainNew (nat_list2) = true
---------------------------------------
all (map (nat_list2)) = lq (nat1) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 9


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> case geq (ZERO) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
Case2 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = lq (nat1) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 10


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
Case2 : mainNew (nat_list2) = true
---------------------------------------
all (map (nat_list2)) = lq (nat1) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
Case2 : mainNew (nat_list2) = true
---------------------------------------
true = lq (nat1) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- Case2 in goal at 0(rank:13.)
=================================================
Progress: 11


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
Case2 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = lq (nat1) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
Case2 : geq (ZERO) (nat1) = true
---------------------------------------
true = lq (nat1) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- Case2 in goal at 0(rank:13.)
=================================================
Progress: 12


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = if mainNew (nat_list2) then lq (nat1) (SUCC (ZERO)) else false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = if all (map (nat_list2)) then lq (nat1) (SUCC (ZERO)) else false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case all (map (nat_list2))(rank:4.)
case geq (ZERO) (nat1)(rank:4.)
=================================================
Progress: 13


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = if all (map (nat_list2)) then lq (nat1) (SUCC (ZERO)) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case all (map (nat_list2))(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : all (map (nat_list2)) = true
---------------------------------------
if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case geq (ZERO) (nat1)(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 14


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = if all (map (nat_list2)) then lq (nat1) (SUCC (ZERO)) else false

0 goal(s) more...

0 conjecture(s) more...
>>> case geq (ZERO) (nat1)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = if all (map (nat_list2)) then lq (nat1) (SUCC (ZERO)) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case all (map (nat_list2))(rank:5.)
rewrite IH1 in goal at 2(rank:20.)
rewrite IH1 in goal at 0(rank:20.)
rewrite IH1 in goal at 1(rank:20.)
=================================================
Progress: 15


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : all (map (nat_list2)) = true
---------------------------------------
if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> case geq (ZERO) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : all (map (nat_list2)) = true
Case2 : geq (ZERO) (nat1) = true
---------------------------------------
true = lq (nat1) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- Case2 in goal at 0(rank:13.)
=================================================
Progress: 16


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = if all (map (nat_list2)) then lq (nat1) (SUCC (ZERO)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case all (map (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
Case2 : all (map (nat_list2)) = true
---------------------------------------
true = lq (nat1) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- Case2 in goal at 0(rank:13.)
=================================================
Progress: 17


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = if mainNew (nat_list2) then lq (nat1) (SUCC (ZERO)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
---------------------------------------
mainNew (nat_list2) = if mainNew (nat_list2) then lq (nat1) (SUCC (ZERO)) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case mainNew (nat_list2)(rank:5.)
=================================================
Progress: 18


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
---------------------------------------
mainNew (nat_list2) = if mainNew (nat_list2) then lq (nat1) (SUCC (ZERO)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case mainNew (nat_list2)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
Case2 : mainNew (nat_list2) = true
---------------------------------------
true = lq (nat1) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- Case2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 19


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = if mainNew (nat_list2) then lq (nat1) (SUCC (ZERO)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = if all (map (nat_list2)) then lq (nat1) (SUCC (ZERO)) else false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case all (map (nat_list2))(rank:5.)
=================================================
Progress: 20


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = if all (map (nat_list2)) then lq (nat1) (SUCC (ZERO)) else false

1 goal(s) more...

0 conjecture(s) more...
>>> case all (map (nat_list2))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = mainNew (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : geq (ZERO) (nat1) = true
Case2 : all (map (nat_list2)) = true
---------------------------------------
true = lq (nat1) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- Case2 in goal at 0(rank:13.)
=================================================
Progress: 21


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:4.)
=================================================
Progress: 22


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case mainNew (nat_list2)
rewrite IH1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: if geq (ZERO) (SUCC (ZERO)) then mainNew ((Nil)) else false = lq (SUCC (ZERO)) (SUCC (ZERO))
Prop: if geq (ZERO) (SUCC (ZERO)) then mainNew ((Nil)) else false = lq (SUCC (ZERO)) (SUCC (ZERO))
Prop: if geq (ZERO) (ZERO) then mainNew ((SUCC (ZERO)::(Nil))) else false = lq (ZERO) (SUCC (ZERO))
previous tactics
simpl in goal
case mainNew (nat_list2)
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if geq (ZERO) (SUCC (ZERO)) then true else false = lq (SUCC (ZERO)) (SUCC (ZERO))
Prop: if geq (ZERO) (SUCC (ZERO)) then true else false = lq (SUCC (ZERO)) (SUCC (ZERO))
Prop: if geq (ZERO) (SUCC (SUCC (ZERO))) then true else false = lq (SUCC (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
case mainNew (nat_list2)
parent
lq (nat1) (SUCC (ZERO))
lower
lq(_, SUCC(ZERO()))
upper
_
remove upper
true()
remove lower
true()
remove upper
lq(nat1, SUCC(ZERO()))
remove lower
lq(nat1, SUCC(ZERO()))
remove upper
lq(nat1, SUCC(ZERO()))
remove lower
lq(nat1, SUCC(ZERO()))
remove upper
lq(nat1, SUCC(ZERO()))
remove lower
lq(nat1, SUCC(ZERO()))
validate generalize_common_subterm_goal
Prop: if geq (ZERO) (ZERO) then all (map ((ZERO::(ZERO::(Nil))))) else false = lq (ZERO) (SUCC (ZERO))
Prop: if geq (ZERO) (ZERO) then all (map ((ZERO::(Nil)))) else false = lq (ZERO) (SUCC (ZERO))
Prop: if geq (ZERO) (ZERO) then all (map ((ZERO::(Nil)))) else false = lq (ZERO) (SUCC (ZERO))
Lemma List
forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 23


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 24


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 25


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 26


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), mainNew ((Nil)) = true -> if geq (ZERO) (nat1) then all (map ((Nil))) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 27


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if geq (ZERO) (ZERO) then true else false = lq (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 28


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if geq (ZERO) (ZERO) then true else false = lq (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : if geq (ZERO) (nat2) then true else false = lq (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if geq (ZERO) (SUCC (nat2)) then true else false = lq (SUCC (nat2)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 29


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : if geq (ZERO) (nat2) then true else false = lq (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if geq (ZERO) (SUCC (nat2)) then true else false = lq (SUCC (nat2)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
original goal
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
lemma
forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))
tactics
assert forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))
induction nat1
reflexivity
reflexivity
Deduplication: 0
Tactic List : 4
case geq (ZERO) (nat1)(rank:5.)
rewrite <- lemma3 in goal at 0(rank:12.)
rewrite lemma3 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 30


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> case geq (ZERO) (nat1)(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
Case2 : geq (ZERO) (nat1) = true
---------------------------------------
true = lq (nat1) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- Case2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 0(rank:21.)
=================================================
Progress: 31


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), mainNew ((Nil)) = true -> if geq (ZERO) (nat1) then mainNew ((Nil)) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 32


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), mainNew ((Nil)) = true -> if geq (ZERO) (nat1) then all (map ((Nil))) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), true = true -> if geq (ZERO) (nat1) then all (map ((Nil))) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 33


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), mainNew ((Nil)) = true -> if geq (ZERO) (nat1) then mainNew ((Nil)) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), true = true -> if geq (ZERO) (nat1) then mainNew ((Nil)) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 34


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), true = true -> if geq (ZERO) (nat1) then all (map ((Nil))) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
forall (nat1:nat), if geq (ZERO) (nat1) then all (map ((Nil))) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 35


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), true = true -> if geq (ZERO) (nat1) then mainNew ((Nil)) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
forall (nat1:nat), if geq (ZERO) (nat1) then mainNew ((Nil)) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:7.)
=================================================
Progress: 36


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
forall (nat1:nat), if geq (ZERO) (nat1) then all (map ((Nil))) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
if geq (ZERO) (ZERO) then all (map ((Nil))) else false = lq (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 37


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
if geq (ZERO) (ZERO) then all (map ((Nil))) else false = lq (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat2 : nat
IH1 : if geq (ZERO) (nat2) then all (map ((Nil))) else false = lq (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if geq (ZERO) (SUCC (nat2)) then all (map ((Nil))) else false = lq (SUCC (nat2)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 38


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat2 : nat
IH1 : if geq (ZERO) (nat2) then all (map ((Nil))) else false = lq (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if geq (ZERO) (SUCC (nat2)) then all (map ((Nil))) else false = lq (SUCC (nat2)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), mainNew ((nat2::nat_list2)) = true -> if geq (ZERO) (nat1) then all (map ((nat2::nat_list2))) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 39


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), mainNew ((nat2::nat_list2)) = true -> if geq (ZERO) (nat1) then all (map ((nat2::nat_list2))) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true -> if geq (ZERO) (nat1) then all (map ((nat2::nat_list2))) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 40


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true -> if geq (ZERO) (nat1) then all (map ((nat2::nat_list2))) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
---------------------------------------
forall (nat1:nat), if geq (ZERO) (nat1) then all (map ((nat2::nat_list2))) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 41


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
---------------------------------------
forall (nat1:nat), if geq (ZERO) (nat1) then all (map ((nat2::nat_list2))) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if geq (ZERO) (ZERO) then all (map ((nat2::nat_list2))) else false = lq (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 42


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if geq (ZERO) (ZERO) then all (map ((nat2::nat_list2))) else false = lq (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if geq (ZERO) (nat2) then all (map (nat_list2)) else false = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case geq (ZERO) (nat2)(rank:7.)
rewrite <- Cond1 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:15.)
=================================================
Progress: 43


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
---------------------------------------
forall (nat1:nat), if geq (ZERO) (nat1) then mainNew ((Nil)) else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
if geq (ZERO) (ZERO) then mainNew ((Nil)) else false = lq (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 44


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
if geq (ZERO) (ZERO) then mainNew ((Nil)) else false = lq (ZERO) (SUCC (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat2 : nat
IH1 : if geq (ZERO) (nat2) then mainNew ((Nil)) else false = lq (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if geq (ZERO) (SUCC (nat2)) then mainNew ((Nil)) else false = lq (SUCC (nat2)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 45


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
Cond1 : true = true
nat1 : nat
nat2 : nat
IH1 : if geq (ZERO) (nat2) then mainNew ((Nil)) else false = lq (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
if geq (ZERO) (SUCC (nat2)) then mainNew ((Nil)) else false = lq (SUCC (nat2)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), mainNew ((nat2::nat_list2)) = true -> if geq (ZERO) (nat1) then mainNew ((nat2::nat_list2)) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 46


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), mainNew ((nat2::nat_list2)) = true -> if geq (ZERO) (nat1) then mainNew ((nat2::nat_list2)) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true -> if geq (ZERO) (nat1) then mainNew ((nat2::nat_list2)) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 47


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true -> if geq (ZERO) (nat1) then mainNew ((nat2::nat_list2)) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
---------------------------------------
forall (nat1:nat), if geq (ZERO) (nat1) then mainNew ((nat2::nat_list2)) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 48


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
---------------------------------------
forall (nat1:nat), if geq (ZERO) (nat1) then mainNew ((nat2::nat_list2)) else false = lq (nat1) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if geq (ZERO) (ZERO) then mainNew ((nat2::nat_list2)) else false = lq (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 49


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if geq (ZERO) (ZERO) then mainNew ((nat2::nat_list2)) else false = lq (ZERO) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case mainNew (nat_list2)(rank:7.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite Cond1 in goal at 0(rank:14.)
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 50


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if geq (ZERO) (nat2) then all (map (nat_list2)) else false = true

1 goal(s) more...

1 conjecture(s) more...
>>> case geq (ZERO) (nat2)(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
nat1 : nat
Base1 : nat1 = ZERO
Case1 : geq (ZERO) (nat2) = true
---------------------------------------
all (map (nat_list2)) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:15.)
rewrite <- Cond1 in goal at 0(rank:23.)
=================================================
Progress: 51


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = true

1 goal(s) more...

1 conjecture(s) more...
>>> case mainNew (nat_list2)(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = true -> if geq (ZERO) (nat1) then mainNew (nat_list1) else false = lq (nat1) (SUCC (ZERO))
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), mainNew (nat_list2) = true -> if geq (ZERO) (nat1) then mainNew (nat_list2) else false = lq (nat1) (SUCC (ZERO))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (nat2) (SUCC (ZERO)) = true
nat1 : nat
Base1 : nat1 = ZERO
Case1 : mainNew (nat_list2) = true
---------------------------------------
lq (nat2) (SUCC (ZERO)) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite Cond1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 0(rank:15.)
rewrite <- Cond1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:24.)
=================================================
Progress: 52


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
lq (nat1) (SUCC (ZERO)) = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 53


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = true
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = true
---------------------------------------
lq (nat1) (SUCC (ZERO)) = lq (nat1) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = false

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 19
Tactic List : 8
case geq (ZERO) (nat1)(rank:4.)
rewrite IH1 in goal at 0(rank:11.)
rewrite <- Case1 in goal at 2(rank:11.)
rewrite <- Case1 in goal at 1(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 2(rank:11.)
=================================================
Progress: 54


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = false

0 goal(s) more...

0 conjecture(s) more...
>>> case geq (ZERO) (nat1)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
Case2 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 55


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then false else false = false

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- Case1 in goal at 3(rank:11.)
rewrite <- Case1 in goal at 2(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 1(rank:19.)
=================================================
Progress: 56


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case geq (ZERO) (nat1)(rank:4.)
rewrite <- IH1 in goal at 0(rank:19.)
=================================================
Progress: 57


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> case geq (ZERO) (nat1)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
Case2 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = mainNew (nat_list2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case1 in goal at 0(rank:20.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 58


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = all (map (nat_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case geq (ZERO) (nat1)(rank:4.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 59


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = all (map (nat_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> case geq (ZERO) (nat1)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
Case2 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = all (map (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 60


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
Case2 : geq (ZERO) (nat1) = true
---------------------------------------
all (map (nat_list2)) = all (map (nat_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
Case2 : geq (ZERO) (nat1) = false
---------------------------------------
false = all (map (nat_list2))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite IH1 in goal at 0(rank:11.)
rewrite <- Case1 in goal at 0(rank:11.)
rewrite <- Case2 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 0(rank:11.)
=================================================
Progress: 61


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then false else false = false

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 3(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then false else false = mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
reflexivity
rewrite lemma3 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: if geq (ZERO) (ZERO) then false else false = mainNew ((Nil))
Prop: if geq (ZERO) (ZERO) then false else false = mainNew ((Nil))
Prop: if geq (ZERO) (ZERO) then false else false = mainNew ((ZERO::(ZERO::(Nil))))
previous tactics
reflexivity
rewrite lemma3 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if geq (ZERO) (SUCC (SUCC (ZERO))) then false else false = false
Prop: if geq (ZERO) (SUCC (ZERO)) then false else false = false
Prop: if geq (ZERO) (SUCC (ZERO)) then false else false = false
previous tactics
reflexivity
rewrite lemma3 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: if geq (ZERO) (ZERO) then all (map ((Nil))) else false = false
Prop: if geq (ZERO) (ZERO) then all (map ((Nil))) else false = false
Prop: if geq (ZERO) (ZERO) then all (map ((Nil))) else false = false
Lemma List
forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = false

0 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then false else false = false

0 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then false else false = mainNew (nat_list1)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then false else false = mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 62


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then all (map (nat_list2)) else false = false

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 63


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then false else false = false

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false(rank : 0.)


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false

---------------------------------------
forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 64


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then false else false = mainNew (nat_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then false else false = mainNew (nat_list1)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then false else false = mainNew (nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then false else false = mainNew (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 65


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 66


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false

---------------------------------------
forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false
nat1 : nat
---------------------------------------
if geq (ZERO) (nat1) then false else false = false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case geq (ZERO) (nat1)(rank:6.)
=================================================
Progress: 67


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then false else false = mainNew (nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then false else false = mainNew (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then false else false = mainNew (nat_list1)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then false else false = mainNew (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 68


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
mainNew ((Nil)) = false -> if geq (ZERO) (nat1) then all (map ((Nil))) else false = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 69


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
mainNew ((Nil)) = false -> if geq (ZERO) (nat1) then all (map ((Nil))) else false = false

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : mainNew (nat_list2) = false -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = false
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
mainNew ((nat2::nat_list2)) = false -> if geq (ZERO) (nat1) then all (map ((nat2::nat_list2))) else false = false

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 70


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : mainNew (nat_list2) = false -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = false
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
mainNew ((nat2::nat_list2)) = false -> if geq (ZERO) (nat1) then all (map ((nat2::nat_list2))) else false = false

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : mainNew (nat_list2) = false -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = false
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = false -> if geq (ZERO) (nat1) then all (map ((nat2::nat_list2))) else false = false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 71


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : mainNew (nat_list2) = false -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = false
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = false -> if geq (ZERO) (nat1) then all (map ((nat2::nat_list2))) else false = false

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), mainNew (nat_list1) = false -> if geq (ZERO) (nat1) then all (map (nat_list1)) else false = false
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : mainNew (nat_list2) = false -> if geq (ZERO) (nat1) then all (map (nat_list2)) else false = false
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : if mainNew (nat_list2) then lq (nat2) (SUCC (ZERO)) else false = false
---------------------------------------
if geq (ZERO) (nat1) then all (map ((nat2::nat_list2))) else false = false

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case geq (ZERO) (nat1)(rank:6.)
=================================================
Progress: 72


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false
nat1 : nat
---------------------------------------
if geq (ZERO) (nat1) then false else false = false

0 goal(s) more...

1 conjecture(s) more...
>>> case geq (ZERO) (nat1)(rank : 6.)


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false
nat1 : nat
Case1 : geq (ZERO) (nat1) = true
---------------------------------------
false = false

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 73


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false
nat1 : nat
Case1 : geq (ZERO) (nat1) = true
---------------------------------------
false = false

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false
nat1 : nat
Case1 : geq (ZERO) (nat1) = false
---------------------------------------
false = false

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 74


1st goal of : forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false
nat1 : nat
Case1 : geq (ZERO) (nat1) = false
---------------------------------------
false = false

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then false else false = false

0 goal(s) more...

0 conjecture(s) more...
original goal
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
lemma
forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false
tactics
assert forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false
intro nat1
case geq (ZERO) (nat1)
reflexivity
reflexivity
Deduplication: 3
Tactic List : 6
case geq (ZERO) (nat1)(rank:4.)
rewrite lemma4 in goal at 0(rank:11.)
rewrite <- Case1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 1(rank:19.)
rewrite <- Case1 in goal at 2(rank:19.)
rewrite <- Case1 in goal at 3(rank:11.)
=================================================
Progress: 75


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
---------------------------------------
if geq (ZERO) (nat1) then false else false = false

0 goal(s) more...

0 conjecture(s) more...
>>> case geq (ZERO) (nat1)(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
Case2 : geq (ZERO) (nat1) = true
---------------------------------------
false = false

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 76


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
Case2 : geq (ZERO) (nat1) = true
---------------------------------------
false = false

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
Case2 : geq (ZERO) (nat1) = false
---------------------------------------
false = false

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 3
Tactic List : 1
reflexivity(rank:0.)
=================================================
Progress: 77


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : all (map (nat_list2)) = false
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : mainNew (nat_list2) = false
Case2 : geq (ZERO) (nat1) = false
---------------------------------------
false = false

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0.)


No conjecture
Proof Success
Proof
assert forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
simpl in goal
induction nat_list1
reflexivity
simpl in goal
case mainNew (nat_list2)
rewrite IH1 in goal at 0
assert forall (nat1:nat), if geq (ZERO) (nat1) then true else false = lq (nat1) (SUCC (ZERO))
induction nat1
reflexivity
reflexivity
rewrite lemma3 in goal at 0
reflexivity
rewrite IH1 in goal at 0
assert forall (nat1:nat), if geq (ZERO) (nat1) then false else false = false
intro nat1
case geq (ZERO) (nat1)
reflexivity
reflexivity
case geq (ZERO) (nat1)
reflexivity
reflexivity
Qed
